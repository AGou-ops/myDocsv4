"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[7192],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>m});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},u=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,g=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return a?t.createElement(g,l(l({ref:n},u),{},{components:a})):t.createElement(g,l({ref:n},u))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},12010:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var t=a(87462),r=(a(67294),a(3905));const o={},l="Vagrant Basic",i={unversionedId:"LinuxBasics/Vagrant",id:"LinuxBasics/Vagrant",title:"Vagrant Basic",description:"Vagrant \u7b80\u4ecb",source:"@site/docs/LinuxBasics/Vagrant.md",sourceDirName:"LinuxBasics",slug:"/LinuxBasics/Vagrant",permalink:"/docs/LinuxBasics/Vagrant",draft:!1,editUrl:"https://github.com/AGou-ops/myDocsv4/edit/main/docs/LinuxBasics/Vagrant.md",tags:[],version:"current",frontMatter:{},sidebar:"linuxBasics",previous:{title:"VPS \u8282\u70b9\u642d\u5efa",permalink:"/docs/LinuxBasics/VPS \u8282\u70b9\u642d\u5efa"},next:{title:"windows \u547d\u4ee4\u6307\u793a\u7b26",permalink:"/docs/LinuxBasics/Windows useful cmd"}},p={},s=[{value:"Vagrant \u7b80\u4ecb",id:"vagrant-\u7b80\u4ecb",level:2},{value:"\u5b89\u88c5\u4e0e\u5378\u8f7d",id:"\u5b89\u88c5\u4e0e\u5378\u8f7d",level:2},{value:"\u5b89\u88c5\uff08Ubuntu 18.04\u73af\u5883\u4e0b\uff09",id:"\u5b89\u88c5ubuntu-1804\u73af\u5883\u4e0b",level:3},{value:"\u5378\u8f7d",id:"\u5378\u8f7d",level:3},{value:"\u5feb\u901f\u5f00\u59cb",id:"\u5feb\u901f\u5f00\u59cb",level:2},{value:"VagrantfIle",id:"vagrantfile",level:2},{value:"\u591a\u4e3b\u673a(Multi-Machine)",id:"\u591a\u4e3b\u673amulti-machine",level:2},{value:"Plugins",id:"plugins",level:2},{value:"vagrant share",id:"vagrant-share",level:3},{value:"\u53c2\u8003\u94fe\u63a5",id:"\u53c2\u8003\u94fe\u63a5",level:2}],u={toc:s};function c(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"vagrant-basic"},"Vagrant Basic"),(0,r.kt)("h2",{id:"vagrant-\u7b80\u4ecb"},"Vagrant \u7b80\u4ecb"),(0,r.kt)("p",null,"\u547d\u4ee4\u884c\u5b9e\u7528\u5de5\u5177\u6765\u5feb\u901f\u7ba1\u7406\u865a\u62df\u673a\u7684\u751f\u547d\u5468\u671f\u3002(",(0,r.kt)("del",{parentName:"p"},"\u7ec8\u4e8e\u4e0d\u7528\u624b\u52a8\u7e41\u7410\u7684\u521b\u5efa\u6d4b\u8bd5\u73af\u5883\u4e86."),")"),(0,r.kt)("h2",{id:"\u5b89\u88c5\u4e0e\u5378\u8f7d"},"\u5b89\u88c5\u4e0e\u5378\u8f7d"),(0,r.kt)("h3",{id:"\u5b89\u88c5ubuntu-1804\u73af\u5883\u4e0b"},"\u5b89\u88c5\uff08Ubuntu 18.04\u73af\u5883\u4e0b\uff09"),(0,r.kt)("p",null,"\u5176\u4ed6\u7cfb\u7edf\u5b89\u88c5\u53c2\u8003\uff1a ",(0,r.kt)("a",{parentName:"p",href:"https://www.vagrantup.com/docs/installation"},"https://www.vagrantup.com/docs/installation")),(0,r.kt)("p",null,"\u524d\u5f80",(0,r.kt)("inlineCode",{parentName:"p"},"vagrant"),"\u5b98\u65b9\u4e0b\u8f7d\u7ad9\u70b9\uff0c\u4e0b\u8f7d\u4e0e\u5f53\u524d\u7cfb\u7edf\u7248\u672c\u76f8\u5bf9\u5e94\u7684\u8f6f\u4ef6\u7248\u672c\uff0c\u89e3\u538b\u7f29\uff0c\u7136\u540e\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\u5373\u53ef\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://releases.hashicorp.com/vagrant/2.2.10/vagrant_2.2.10_linux_amd64.zip -o vagrant_2.2.10_linux_amd64.zip\nunzip vagrant_2.2.10_linux_amd64.zip\nchmod +x vagrant\nmv vagrant /usr/bin\n")),(0,r.kt)("p",null,"\u68c0\u9a8c\u5b89\u88c5\u662f\u5426\u6210\u529f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ vagrant --version\nVagrant 2.2.10\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f\u7981\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"kvm")),(0,r.kt)("p",{parentName:"blockquote"},"First find out the name of the hypervisor:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ lsmod | grep kvm\nkvm_intel             204800  6\nkvm                   593920  1 kvm_intel\nirqbypass              16384  1 kvm\n")),(0,r.kt)("p",{parentName:"blockquote"},"The one we're interested in is ",(0,r.kt)("inlineCode",{parentName:"p"},"kvm_intel"),". You might have another."),(0,r.kt)("p",{parentName:"blockquote"},"Blacklist the hypervisor (run the following as root):"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ echo 'blacklist kvm-intel' >> /etc/modprobe.d/blacklist.conf\n"))),(0,r.kt)("h3",{id:"\u5378\u8f7d"},"\u5378\u8f7d"),(0,r.kt)("p",null,"\u5176\u4ed6\u7cfb\u7edf\u53c2\u8003\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://www.vagrantup.com/docs/installation/uninstallation"},"https://www.vagrantup.com/docs/installation/uninstallation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf /opt/vagrant\nrm -f /usr/bin/vagrant\n")),(0,r.kt)("h2",{id:"\u5feb\u901f\u5f00\u59cb"},"\u5feb\u901f\u5f00\u59cb"),(0,r.kt)("p",null,"\u521d\u59cb\u5316",(0,r.kt)("inlineCode",{parentName:"p"},"Vagrant"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ mkdir vagrant_workspace && cd vagrant_workspace\n$ vagrant init hashicorp/bionic64\n")),(0,r.kt)("p",null,"\u521d\u59cb\u5316\u5b8c\u6bd5\u4e4b\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u751f\u6210\u4e00\u4e2a\u540d\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"vagrantfile"),"\u7684\u6e05\u5355\u6587\u4ef6"),(0,r.kt)("p",null,"\u542f\u52a8\u865a\u62df\u673a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ vagrant up\n")),(0,r.kt)("p",null,"\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"SSH"),"\u8fde\u5165\u521b\u5efa\u5b8c\u6bd5\u7684\u865a\u62df\u673a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ vagrant ssh\n")),(0,r.kt)("p",null,"\u5220\u9664\uff08\u6467\u6bc1\uff09\u865a\u62df\u673a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ vagrant destroy\n")),(0,r.kt)("p",null,"\u6467\u6bc1\u865a\u62df\u673a\u4e0d\u4f1a\u5220\u9664\u6240\u4e0b\u8f7d\u7684\u6587\u4ef6\uff0c\u5982\u679c\u9700\u8981\u5220\u9664\uff0c\u5219\u9700\u8981\u8fd0\u884c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# \u67e5\u770bbox\n$ vagrant box list\n# \u6dfb\u52a0\u4e00\u4e2abox\n$ vagrant box add hashicorp/bionic64\n# \u5220\u9664box\n$ vagrant box remove ubuntu/trusty64\n")),(0,r.kt)("h2",{id:"vagrantfile"},"VagrantfIle"),(0,r.kt)("p",null,"\u7b80\u5355\u793a\u4f8b1\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Vagrant.configure("2") do |config|\n  config.vm.box = "ubuntu/trusty64"\nend\n')),(0,r.kt)("p",null,"\u542f\u52a8\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"vagrant up")),(0,r.kt)("p",null,"\u7b80\u5355\u793a\u4f8b2\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ mkdir html\n$ echo "vagrant page here." > html/index.html\n\n# \u7f16\u5199\u811a\u672c\n#!/usr/bin/env bash\napt-get update -y\napt-get install -y apache2\nif ! [ -L /var/www ]; then\n  rm -rf /var/www\n  ln -fs /vagrant /var/www\nfi\n\n# \u914d\u7f6evagrantfile\nVagrant.configure("2") do |config|\n  config.vm.box = "hashicorp/bionic64"\n  config.vm.provision :shell, path: "bootstrap.sh"\n  config.vm.network :forwarded_port, guest: 80, host: 4567\nend\n')),(0,r.kt)("p",null,"\u91cd\u8f7d\u914d\u7f6e\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"vagrant reload --provision")),(0,r.kt)("p",null,"\u6700\u540e\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee",(0,r.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:4567"),"\u5373\u53ef\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u914d\u7f6e\u9879\u8be6\u89e3\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'VAGRANTFILE_API_VERSION = "2"       # \u53ef\u4e0d\u5b9a\u4e49\u8be5\u53d8\u91cf\uff0c\u76f4\u63a5\u6307\u5b9a\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|      # \u5176\u4e2dVAGRANTFILE_API_VERSION\u53ef\u76f4\u63a5\u4f7f\u7528`2`\u6765\u4ee3\u66ff\n\n    #######################################  \u4f7f\u7528\u5faa\u73af\u8bed\u53e5\u5feb\u901f\u521b\u5efa\u4e09\u4e2a\u865a\u62df\u673a\n    (1..3).each do |i|\n      config.vm.define "node-#{i}" do |node|\n        node.vm.provision "shell",\n          inline: "echo hello from node #{i}"\n      end\n    end\n    ####################################### \n\n    # ---------------------- config.vim\n    config.vm.box = "generic/ubuntu1804"    # \u955c\u50cf\u540d\u79f0\n    config.vm.hostname = "vm-demo1.local"       # \u6307\u5b9a\u4e3b\u673a\u540d\u79f0\n\n    config.vm.network "forwarded_port", guest: 80, host: 8080, id: "http", protocol: "tcp"      # \u8bbe\u7f6e\u8f6c\u53d1\u7aef\u53e3\uff0c\u540e\u9762\u7684id\u53c2\u6570\u53ef\u4ee5\u7701\u7565\n    # config.vm.network "public_network", ip: "192.168.33.11", hostname: true       # \u6307\u660e\u516c\u7f51\u5730\u5740\uff0c\u5e76\u4f7f\u7528hostname\u9009\u9879\uff0c\u8be5\u9009\u9879\u53ef\u4ee5\u5c06\u4fe1\u606f\u5199\u5165/etc/hosts\uff0c\u5982`vm-demo1 192.168.33.11` \n    # config.vm.network "private_network", ip: "192.168.33.11"      # \u6307\u660e\u79c1\u7f51\u5730\u5740\n    config.vm.network "public_network", use_dhcp_assigned_default_route: true   # \u4f7f\u7528\u9ed8\u8ba4dhcp\u83b7\u53d6IP\n    # ----------------------\n\n    config.vm.synced_folder "src/", "/srv/website", disabled: false, owner: "root", group: "root"       # \u6302\u8f7d\u6587\u4ef6\u5939, disable\u9009\u9879\u7701\u7565\n\nend\n')),(0,r.kt)("h2",{id:"\u591a\u4e3b\u673amulti-machine"},"\u591a\u4e3b\u673a(Multi-Machine)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'Vagrant.configure("2") do |config|\n  config.vm.network "private_network", type: "dhcp"     # \u4e92\u8054\u4e3b\u673a\u7f51\u8def\n  config.vm.provision "shell", inline: "echo Hello"\n\n  config.vm.define "web" do |web|\n    web.vm.box = "apache"\n  end\n\n  config.vm.define "db" do |db|\n    db.vm.box = "mysql"\n  end\nend\n')),(0,r.kt)("p",null,"\u7ba1\u7406\u591a\u4e3b\u673a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# \u542f\u52a8\u6240\u6709\n$ vagrant up\n# \u542f\u52a8\u6307\u5b9a\u4e3b\u673a\n$ vagrant up web\n")),(0,r.kt)("h2",{id:"plugins"},"Plugins"),(0,r.kt)("h3",{id:"vagrant-share"},"vagrant share"),(0,r.kt)("p",null,"\u9884\u5148\u6761\u4ef6\uff1a\u5b89\u88c5",(0,r.kt)("inlineCode",{parentName:"p"},"ngrok"),"\uff0c\u53c2\u8003 ",(0,r.kt)("a",{parentName:"p",href:"https://ngrok.com/download"},"https://ngrok.com/download")),(0,r.kt)("p",null,"\u5b89\u88c5\u63d2\u4ef6\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ vagrant plugin install vagrant-share\n")),(0,r.kt)("p",null,"\u5171\u4eab\u73af\u5883\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ vagrant share\n==> default: Detecting network information for machine...\n    default: Local machine address: 127.0.0.1\n    default:\n    default: Note: With the local address (127.0.0.1), Vagrant Share can only\n    default: share any ports you have forwarded. Assign an IP or address to your\n    default: machine to expose all TCP ports. Consult the documentation\n    default: for your provider ('virtualbox') for more information.\n    default:\n    default: Local HTTP port: 4567\n    default: Local HTTPS port: disabled\n    default: Port: 2222\n    default: Port: 4567\n==> default: Creating Vagrant Share session...\n==> default: HTTP URL: http://c726c8a40a7b.ngrok.io\n==> default: \n")),(0,r.kt)("h2",{id:"\u53c2\u8003\u94fe\u63a5"},"\u53c2\u8003\u94fe\u63a5"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Vagrant Documentation: ",(0,r.kt)("a",{parentName:"li",href:"https://www.vagrantup.com/docs/"},"https://www.vagrantup.com/docs/")),(0,r.kt)("li",{parentName:"ul"},"Vagrantfile: ",(0,r.kt)("a",{parentName:"li",href:"https://www.vagrantup.com/docs/vagrantfile"},"https://www.vagrantup.com/docs/vagrantfile"))))}c.isMDXComponent=!0}}]);