"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[2500],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>u});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),o=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=o(e.components);return t.createElement(l.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=o(r),u=a,b=d["".concat(l,".").concat(u)]||d[u]||h[u]||s;return r?t.createElement(b,i(i({ref:n},p),{},{components:r})):t.createElement(b,i({ref:n},p))}));function u(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var o=2;o<s;o++)i[o]=r[o];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96992:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>o});var t=r(87462),a=(r(67294),r(3905));const s={},i="varnish \u53c2\u8003\u793a\u4f8b",c={unversionedId:"LinuxBasics/Cache/Varnish/varnish \u53c2\u8003\u793a\u4f8b",id:"LinuxBasics/Cache/Varnish/varnish \u53c2\u8003\u793a\u4f8b",title:"varnish \u53c2\u8003\u793a\u4f8b",description:"\u7b80\u5355\u53c2\u8003\u793a\u4f8b",source:"@site/docs/LinuxBasics/Cache/Varnish/varnish \u53c2\u8003\u793a\u4f8b.md",sourceDirName:"LinuxBasics/Cache/Varnish",slug:"/LinuxBasics/Cache/Varnish/varnish \u53c2\u8003\u793a\u4f8b",permalink:"/docs/LinuxBasics/Cache/Varnish/varnish \u53c2\u8003\u793a\u4f8b",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/LinuxBasics/Cache/Varnish/varnish \u53c2\u8003\u793a\u4f8b.md",tags:[],version:"current",frontMatter:{},sidebar:"linuxBasics",previous:{title:"varnish Basic",permalink:"/docs/LinuxBasics/Cache/Varnish/varnish Basic"},next:{title:"varnish \u67b6\u6784\u3001\u5de5\u4f5c\u539f\u7406\u53ca\u7b80\u5355\u914d\u7f6e",permalink:"/docs/LinuxBasics/Cache/Varnish/varnish \u67b6\u6784\u3001\u5de5\u4f5c\u539f\u7406\u53ca\u7b80\u5355\u914d\u7f6e"}},l={},o=[{value:"\u7b80\u5355\u53c2\u8003\u793a\u4f8b",id:"\u7b80\u5355\u53c2\u8003\u793a\u4f8b",level:2},{value:"\u7efc\u5408\u53c2\u8003\u793a\u4f8b",id:"\u7efc\u5408\u53c2\u8003\u793a\u4f8b",level:2},{value:"\u53c2\u8003\u94fe\u63a5",id:"\u53c2\u8003\u94fe\u63a5",level:2}],p={toc:o};function h(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"varnish-\u53c2\u8003\u793a\u4f8b"},"varnish \u53c2\u8003\u793a\u4f8b"),(0,a.kt)("h2",{id:"\u7b80\u5355\u53c2\u8003\u793a\u4f8b"},"\u7b80\u5355\u53c2\u8003\u793a\u4f8b"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5bf9\u67d0\u79cd\u8bf7\u6c42\u4e0d\u68c0\u67e5\u7f13\u5b58")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'vcl_recv {\n    if (req.url ~ "(?i)^/(login|admin)") {\n    return(pass);\n}\n}\n')),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u62d2\u7edd\u67d0\u79cd\u8bf7\u6c42\u8bbf\u95ee")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'vcl_recv {\n    if (req.http.User-Agent ~ "(?i)curl") {\n    return(synth(405));\n}\n}\n')),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"\u5bf9\u516c\u5f00\u8d44\u6e90\uff0c\u53d6\u6d88\u79c1\u6709\u6807\u8bb0\uff0c\u5e76\u8bbe\u5b9a\u7f13\u5b58\u65f6\u957f")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'if (beresp.http.cache-control !~ "s-maxage") {\nif (bereq.url ~ "(?i)\\.(jpg|jpeg|png|gif|css|js)$") {\n    unset beresp.http.Set-Cookie;\n    set beresp.ttl = 3600s;\n}\n}\n')),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"\u663e\u793a\u540e\u7aef\u4e3b\u673aIP")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'if (req.restarts == 0) {\nif (req.http.X-Fowarded-For) {\n    set req.http.X-Forwarded-For = req.http.X-Forwarded-For + "," + client.ip;\n} else {\n    set req.http.X-Forwarded-For = client.ip;\n}\n}\n')),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"\u6839\u636epurge\u8bf7\u6c42\u6e05\u9664\u7f13\u5b58(\u53ef\u4ee5\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"li"}," curl  -X  PURGE URL"),"\u6765\u6d4b\u8bd5)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sub vcl_recv {\n    if (req.method == "PURGE") {\n    return(purge);\n    }\n}\n')),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"\u8bbe\u7f6eacl\u8bbf\u95ee\u63a7\u5236")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'acl purgers {\n"127.0.0.0"/8;\n"192.168.0.0"/16;\n}\nsub vcl_recv {\n    if (req.method == "PURGE") {\n    if (!client.ip ~ purgers) {\n    return(synth(405,"Purging not allowed for " + client.ip));\n    }\n    return(purge);\n}\n}\n')),(0,a.kt)("ol",{start:7},(0,a.kt)("li",{parentName:"ol"},"\u7528ban\u547d\u4ee4\u6e05\u9664\u7f13\u5b58(\u5728varnishadm\u4ea4\u4e92\u5f0f\u7ec8\u7aef\u4e0b\u6267\u884c)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ban req.url ~ ^/javascripts\nban req.url ~ /js$\nban req.url ~ (?i).(jpg|jpeg)$   \n")),(0,a.kt)("p",null,"\u914d\u7f6e\u6587\u4ef6\u4e2d\u4f7f\u7528"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sub vcl_recv {\n        if (req.method == "BAN") {\n                # Same ACL check as above:\n                if (!client.ip ~ purge) {\n                        return(synth(403, "Not allowed."));\n                }\n                ban("req.http.host == " + req.http.host +\n                      " && req.url == " + req.url);\n\n                # Throw a synthetic page so the\n                # request won\'t go to the backend.\n                return(synth(200, "Ban added"));\n        }\n}\n')),(0,a.kt)("p",null,"8.\u914d\u7f6evarnish\u540e\u7aef\u591a\u53f0\u4e3b\u673a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'import directors; #  \u5bfc\u5165\u6a21\u5757\nbackend server1 {\n    .host = "192.168.159.129";\n    .port = "80";\n}\nbackend server2 {\n    .host = "192.168.159.130";\n    .port = "80";\n}\nsub vcl_init {\n    new websrvs = directors.round_robin();\n    websrvs.add_backend(server1);\n    websrvs.add_backend(server2);\n}\nsub vcl_recv {\n\n#  \u7528\u54ea\u4e00\u7ec4server\u6765\u8bf7\u6c42\nset req.backend_hint = websrvs.backend();\n\n}\n')),(0,a.kt)("ol",{start:9},(0,a.kt)("li",{parentName:"ol"},"varnish\u52a8\u9759\u5206\u79bb")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'backend default {\n    .host = "192.168.159.129";\n    .port = "80";\n}\nbackend appsrv {\n    .host = "192.168.159.130";\n    .port = "80";\n}\nsub vcl_recv {\n    if (req.url ~ "(?i)\\.php$") {\n        set req.backend_hint = appsrv;\n    } else {\n        set req.backend_hint = default;\n    }\n}\n')),(0,a.kt)("h2",{id:"\u7efc\u5408\u53c2\u8003\u793a\u4f8b"},"\u7efc\u5408\u53c2\u8003\u793a\u4f8b"),(0,a.kt)("p",null,"\u793a\u4f8b\u4e00:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# \u5fc5\u987b\u4ee5vcl \u5f00\u5934\nvcl 4.0;\n# \u5bfc\u5165directors\u6a21\u5757\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\uff1b\u5e76\u5b9a\u4e49acl\uff0c\u6765\u63a7\u5236purger\uff08\u66f4\u65b0\u7f13\u5b58\uff09\u7684\u4f7f\u7528\nimport directors;\nacl  purgers {\n    "127.0.0.0"/8;\n    ! "192.168.2.0"/24;\n}\n#  \u5065\u5eb7\u72b6\u6001\u68c0\u67e5\u5b9a\u4e49\u9879\n# --------------------------------------------\nprobe healthche {\n    .url="/index.html";\n    .timeout = 2s;\n    .window = 6 ;\n    .threshold = 5;\n}\n# backend\u7ec4\u5373\u4e3a\u540e\u53f0web\u7aef\nbackend server1 {\n    .host = "192.168.159.129";\n    .port = "80";\n    .probe = healthche ;\n}\nbackend server2 {\n     .host="192.168.159.130";\n     .port="80";\n     .probe = {             # \u6b64\u5916\u5b9a\u4e49\u5065\u5eb7\u72b6\u6001\u68c0\u67e5\u8fd8\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\n         .url="/index.html";\n         .timeout = 2s;\n         .window = 6 ;\n         .threshold = 5;\n     \n     }\n}   \n# ++++++++++++++++++++++++++    \u624b\u52a8\u8c03\u6574backend server\u5065\u5eb7\u72b6\u6001  +++++++++++++++++++++++++\n# help backend.set_health\n# 200\n# backend.set_health <backend_pattern> ``[auto|healthy|sick]``\n# Set health status on the backends.\n# \u4f8b\u5982: backend.set_health server2 sick\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n}\n# --------------------------------------------\n# \u4ee5\u8f6e\u8be2\u65b9\u5f0f\u8c03\u5ea6\nsub vcl_init {\n    new websrvs =directors.random();        # \u5f53\u8c03\u5ea6\u7b97\u6cd5\u4e3arandom\u65f6\u624d\u4f1a\u6709\u6743\u91cd\n    srvs.add_backend(server1,1);        # backend \'server1\' with weight \'1\'\n    srvs.add_backend(server2,2);        # backend \'server2\' with weight \'2\'\n}\n# --------------------------------------------\nsub vcl_recv {\n    set req.backend_hint=websrvs.backend();\n    # set req.backend_hint=srvs.backend(req.http.cookie);\n# \u6b63\u5219\u5339\u914d login\u6216admin\u9690\u79c1\u4fe1\u606f\u4e0d\u5141\u8bb8\u670d\u52a1\u7aef\u7f13\u5b58\n    if (req.url ~ "(?i)^/(login|admin)") {\n        return(pass);\n    }\n# url\u91cd\u5199\uff0c\u544a\u8bc9\u540e\u7aef\u670d\u52a1\u5668\u771f\u5b9e\u7684\u8bf7\u6c42\u8005\uff0c\u5b89\u5168\u907f\u514d\u91cd\u590d\u6dfb\u52a0\uff0c\u8fd8\u53ef\u5b9a\u4e49\u5728\u8bb0\u5f55\u65e5\u5fd7\u4e2d\n    if (req.restarts == 0) {\n        if (req.http.X-Fowarded-For) {\n            set req.http.X-Forwarded-For = req.http.X-Forwarded-For + "," + client.ip;\n        } else {\n            set req.http.X-Forwarded-For = client.ip;\n        }\n    }                \n# purge\u7684\u4f7f\u7528\uff1a\u66f4\u65b0\u4e00\u4e2a\u7f13\u5b58\uff0c\u800c\u66f4\u65b0\u4e00\u7ec4\u7f13\u5b58\u7528ban   \n    if (req.method == "PURGE"){\n    if (!client.ip ~ purgers) {\n        return(synth(405,"Purging not allowed for "+client.ip));\n    }\n    return(purge);    \n    }\n# \u628a\u4e0d\u540c\u8d44\u6e90\u6309\u9700\u8c03\u5ea6\u5230\u4e0d\u540c\u4e3b\u673a\n    if (req.url ~ "(?i)\\.(jpg|jpeg|png)$") {\n    set req.backend_hint = server2;\n    } else {\n    set req.backend_hint = server1;\n    }\n# ++++++++++++++++++++++++++++++++  \u540e\u7aef\u6709\u591a\u4e2a\u865a\u62df\u4e3b\u673a   ++++++++++++++++++++++++++++++++\n#    if (req.http.host ~ "foo.com" || req.http.host == "www.foo.com") {\n#       set req.backend_hint = foo;\n#    } elsif (req.http.host ~ "bar.com") {\n#        set req.backend_hint = bar;\n#    }\n# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n}\n# --------------------------------------------\nsub vcl_backend_response {\n\n# \u5ba2\u6237\u7aef\u7684\u56fe\u7247\u7c7b\u4fe1\u606f\u53ef\u4ee5\u9664\u53bbcookies\u6807\u5fd7\u8ba9\u670d\u52a1\u5668\u80fd\u591f\u7f13\u5b58\uff0c\u5e76\u5b9a\u4e49\u7f13\u5b58\u6709\u6548\u671f\u4e3a2H\n    if (bereq.url ~ "(?i)\\.(jpg|jpeg|png|gif)$") {\n    unset beresp.http.Set-cookies;\n    set beresp.ttl =7200s;\n    }\n}\n# --------------------------------------------\nsub vcl_deliver {\n\n# \u5b9a\u4e49\u7f13\u5b58\u54cd\u5e94\u5934\u90e8\n    if (obj.hits>0) {\n        set resp.http.X-Cache = "HIT via " + server.ip;\n    } else {\n        set resp.http.X-Cache = "MISS from " + server.ip;\n    }\n}\n')),(0,a.kt)("p",null,"\u793a\u4f8b\u4e8c:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'backend imgsrv1 {\n                .host = "192.168.10.11";\n                .port = "80";\n}\n        \nbackend imgsrv2 {\n                .host = "192.168.10.12";\n                .port = "80";\n}       \n        \nbackend appsrv1 {\n                .host = "192.168.10.21";\n                .port = "80";\n}\n        \nbackend appsrv2 {\n                .host = "192.168.10.22";\n                .port = "80";\n}\n        \nsub vcl_init {\n                new imgsrvs = directors.random();\n                imgsrvs.add_backend(imgsrv1,10);\n                imgsrvs.add_backend(imgsrv2,20);\n                new staticsrvs = directors.round_robin();\n                appsrvs.add_backend(appsrv1);\n                appsrvs.add_backend(appsrv2);\n                \n                new appsrvs = directors.hash();     # hash\u7ed1\u5b9a,\u5b9e\u73b0session\u4f1a\u8bdd\u7c98\u6027\n                appsrvs.add_backend(appsrv1,1);\n                appsrvs.add_backend(appsrv2,1);         \n}\n        \nsub vcl_recv {\n                if (req.url ~ "(?i)\\.(css|js)$" {\n                        set req.backend_hint = staticsrvs.backend();\n                }               \n                if (req.url ~ "(?i)\\.(jpg|jpeg|png|gif)$" {\n                        set req.backend_hint = imgsrvs.backend();\n                } else {                \n                        set req.backend_hint = appsrvs.backend(req.http.cookie);        # \u4f20\u9012\u8bf7\u6c42\u62a5\u6587\u9996\u90e8\u7684cookie\u4fe1\u606f\u7ed9\u540e\u7aef\u52a8\u6001server\n                }\n}\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u793a\u4f8b\u90e8\u5206\u53c2\u8003: cnblogs @\u9ed1\u591c\u7e41\u661f")),(0,a.kt)("h2",{id:"\u53c2\u8003\u94fe\u63a5"},"\u53c2\u8003\u94fe\u63a5"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"backend server:",(0,a.kt)("a",{parentName:"li",href:"https://varnish-cache.org/docs/5.2/users-guide/vcl-backends.html#backend-servers"},"https://varnish-cache.org/docs/5.2/users-guide/vcl-backends.html#backend-servers")),(0,a.kt)("li",{parentName:"ul"},"purging and banning:",(0,a.kt)("a",{parentName:"li",href:"https://varnish-cache.org/docs/5.2/users-guide/purging.html#purging-and-banning"},"https://varnish-cache.org/docs/5.2/users-guide/purging.html#purging-and-banning")),(0,a.kt)("li",{parentName:"ul"},"health check:",(0,a.kt)("a",{parentName:"li",href:"https://varnish-cache.org/docs/5.2/users-guide/vcl-backends.html?highlight=health%20check#health-checks"},"https://varnish-cache.org/docs/5.2/users-guide/vcl-backends.html?highlight=health%20check#health-checks"))))}h.isMDXComponent=!0}}]);