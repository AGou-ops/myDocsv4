"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[1570],{3905:(n,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>d});var l=a(67294);function o(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n}function t(n,e){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.push.apply(a,l)}return a}function r(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?t(Object(a),!0).forEach((function(e){o(n,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))}))}return n}function p(n,e){if(null==n)return{};var a,l,o=function(n,e){if(null==n)return{};var a,l,o={},t=Object.keys(n);for(l=0;l<t.length;l++)a=t[l],e.indexOf(a)>=0||(o[a]=n[a]);return o}(n,e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);for(l=0;l<t.length;l++)a=t[l],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(o[a]=n[a])}return o}var i=l.createContext({}),s=function(n){var e=l.useContext(i),a=e;return n&&(a="function"==typeof n?n(e):r(r({},e),n)),a},m=function(n){var e=s(n.components);return l.createElement(i.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return l.createElement(l.Fragment,{},e)}},u=l.forwardRef((function(n,e){var a=n.components,o=n.mdxType,t=n.originalType,i=n.parentName,m=p(n,["components","mdxType","originalType","parentName"]),u=s(a),d=o,y=u["".concat(i,".").concat(d)]||u[d]||c[d]||t;return a?l.createElement(y,r(r({ref:e},m),{},{components:a})):l.createElement(y,r({ref:e},m))}));function d(n,e){var a=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var t=a.length,r=new Array(t);r[0]=u;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=n,p.mdxType="string"==typeof n?n:o,r[1]=p;for(var s=2;s<t;s++)r[s]=a[s];return l.createElement.apply(null,r)}return l.createElement.apply(null,a)}u.displayName="MDXCreateElement"},57436:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>c,frontMatter:()=>t,metadata:()=>p,toc:()=>s});var l=a(87462),o=(a(67294),a(3905));const t={},r=void 0,p={unversionedId:"CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/k8s\u5b89\u88c5Apollo\u914d\u7f6e\u4e2d\u5fc3",id:"CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/k8s\u5b89\u88c5Apollo\u914d\u7f6e\u4e2d\u5fc3",title:"k8s\u5b89\u88c5Apollo\u914d\u7f6e\u4e2d\u5fc3",description:"\u7b80\u4ecb",source:"@site/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/k8s\u5b89\u88c5Apollo\u914d\u7f6e\u4e2d\u5fc3.md",sourceDirName:"CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b",slug:"/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/k8s\u5b89\u88c5Apollo\u914d\u7f6e\u4e2d\u5fc3",permalink:"/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/k8s\u5b89\u88c5Apollo\u914d\u7f6e\u4e2d\u5fc3",draft:!1,editUrl:"https://github.com/AGou-ops/myDocsv4/edit/main/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/k8s\u5b89\u88c5Apollo\u914d\u7f6e\u4e2d\u5fc3.md",tags:[],version:"current",frontMatter:{},sidebar:"cloudNative",previous:{title:"k8s\u4e2d\u4f7f\u7528traefik\uff08\u57fa\u7840\uff09",permalink:"/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/k8s\u4e2d\u4f7f\u7528traefik\uff08\u57fa\u7840\uff09"},next:{title:"\u4f7f\u7528CSR API\u521b\u5efa\u7528\u6237",permalink:"/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/\u4f7f\u7528CSR API\u521b\u5efa\u7528\u6237"}},i={},s=[{value:"\u7b80\u4ecb",id:"\u7b80\u4ecb",level:2},{value:"\u5efa\u5e93\u53ca\u4fee\u6539\u914d\u7f6e\u9879",id:"\u5efa\u5e93\u53ca\u4fee\u6539\u914d\u7f6e\u9879",level:2},{value:"yaml\u914d\u7f6e",id:"yaml\u914d\u7f6e",level:2},{value:"\u68c0\u67e5\u90e8\u7f72\u72b6\u6001",id:"\u68c0\u67e5\u90e8\u7f72\u72b6\u6001",level:2},{value:"\u9644\u5f55-mysql\u4e3b\u4ece",id:"\u9644\u5f55-mysql\u4e3b\u4ece",level:2},{value:"\u53c2\u8003\u94fe\u63a5",id:"\u53c2\u8003\u94fe\u63a5",level:2}],m={toc:s};function c(n){let{components:e,...a}=n;return(0,o.kt)("wrapper",(0,l.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u7b80\u4ecb"},"\u7b80\u4ecb"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apollo\uff08\u963f\u6ce2\u7f57\uff09\u662f\u4e00\u6b3e\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u914d\u7f6e\u7ba1\u7406\u4e2d\u5fc3\uff0c\u8bde\u751f\u4e8e\u643a\u7a0b\u6846\u67b6\u7814\u53d1\u90e8\uff0c\u80fd\u591f\u96c6\u4e2d\u5316\u7ba1\u7406\u5e94\u7528\u4e0d\u540c\u73af\u5883\u3001\u4e0d\u540c\u96c6\u7fa4\u7684\u914d\u7f6e\uff0c\u914d\u7f6e\u4fee\u6539\u540e\u80fd\u591f\u5b9e\u65f6\u63a8\u9001\u5230\u5e94\u7528\u7aef\uff0c\u5e76\u4e14\u5177\u5907\u89c4\u8303\u7684\u6743\u9650\u3001\u6d41\u7a0b\u6cbb\u7406\u7b49\u7279\u6027\uff0c\u9002\u7528\u4e8e\u5fae\u670d\u52a1\u914d\u7f6e\u7ba1\u7406\u573a\u666f\u3002"),(0,o.kt)("p",{parentName:"blockquote"},"Apollo\u652f\u63014\u4e2a\u7ef4\u5ea6\u7ba1\u7406Key-Value\u683c\u5f0f\u7684\u914d\u7f6e\uff1a"),(0,o.kt)("ol",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ol"},"application (\u5e94\u7528)"),(0,o.kt)("li",{parentName:"ol"},"environment (\u73af\u5883)"),(0,o.kt)("li",{parentName:"ol"},"cluster (\u96c6\u7fa4)"),(0,o.kt)("li",{parentName:"ol"},"namespace (\u547d\u540d\u7a7a\u95f4)")),(0,o.kt)("p",{parentName:"blockquote"},"\u540c\u65f6\uff0cApollo\u57fa\u4e8e\u5f00\u6e90\u6a21\u5f0f\u5f00\u53d1\uff0c\u5f00\u6e90\u5730\u5740\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ctripcorp/apollo"},"https://github.com/ctripcorp/apollo"))),(0,o.kt)("h2",{id:"\u5efa\u5e93\u53ca\u4fee\u6539\u914d\u7f6e\u9879"},"\u5efa\u5e93\u53ca\u4fee\u6539\u914d\u7f6e\u9879"),(0,o.kt)("p",null,"Apollo\u670d\u52a1\u7aef\u5171\u9700\u8981\u4e24\u4e2a\u6570\u636e\u5e93\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"ApolloPortalDB"),"\u548c",(0,o.kt)("inlineCode",{parentName:"p"},"ApolloConfigDB"),"."),(0,o.kt)("p",null,"\u5206\u522b\u4e0b\u8f7d",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloportaldb.sql"},"apolloportaldb.sql"),"\u548c",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloconfigdb.sql"},"apolloconfigdb.sql"),"\uff0c\u5e76\u5bfc\u5165\u5230MySQL\u5f53\u4e3b\uff08\u6ce8\u610f\u8be5SQL\u5df2\u7ecf\u5305\u542b\u5efa\u5e93\u8bed\u53e5\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u63d0\u524d\u5efa\u5e93\uff0c\u76f4\u63a5source\u5373\u53ef\uff09\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},'mysql> source /path/to/apolloportaldb.sql;\nmysql> source /path/to/apolloconfigdb.sql;\n-- \u4fee\u6539\u9ed8\u8ba4\u7684eureka\u670d\u52a1\u5730\u5740\nmysql> update `ApolloConfigDB`.`ServerConfig` set Value="http://apollo-config-svc.apollo:8080/eureka/" where Id=1;\n-- \u5176\u4ed6\u4fee\u6539\u9879 \u3002\u3002\u3002\n')),(0,o.kt)("h2",{id:"yaml\u914d\u7f6e"},"yaml\u914d\u7f6e"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"apollo-config-secret.yaml"),"\u6587\u4ef6\u5185\u5bb9\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Secret\nmetadata:\n  name: apollo-config-secret\n  namespace: apollo\ntype: Opaque\ndata:\n  SPRING_DATASOURCE_URL: amRiYzpteXNxbDovL215c3FsLTAubXlzcWwtc3ZjLmRlZmF1bHQ6MzMwNi9BcG9sbG9Db25maWdEQj9jaGFyYWN0ZXJFbmNvZGluZz11dGY4    # \u6570\u636e\u5e93\u7684jdbc\u5730\u5740\uff0c\u6bd4\u5982\u6211\u7684\u662fjdbc:mysql://mysql-0.mysql-svc.default:3306/ApolloConfigDB?characterEncoding=utf8%\uff0cbase64\u52a0\u5bc6\n  SPRING_DATASOURCE_USERNAME: cm9vdA==      # \u6570\u636e\u5e93\u8d26\u53f7\n  SPRING_DATASOURCE_PASSWORD: ""   # \u6570\u636e\u5e93\u5bc6\u7801\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"apollo-portal-secret.yaml"),"\u6587\u4ef6\u5185\u5bb9\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Secret\nmetadata:\n  name: apollo-portal-secret\n  namespace: apollo\ntype: Opaque\ndata:\n  SPRING_DATASOURCE_URL: amRiYzpteXNxbDovL215c3FsLTAubXlzcWwtc3ZjLmRlZmF1bHQ6MzMwNi9BcG9sbG9Qb3J0YWxEQj9jaGFyYWN0ZXJFbmNvZGluZz11dGY4\n  SPRING_DATASOURCE_USERNAME: cm9vdA==\n  SPRING_DATASOURCE_PASSWORD: ""\n  APOLLO_PORTAL_ENVS: ZGV2   # \u73af\u5883\u4fe1\u606f\n  DEV_META: aHR0cDovL2Fwb2xsby1jb25maWctc3ZjLmFwb2xsbzo4MDgw  # apollo\u670d\u52a1\u5730\u5740\uff0c\u6bd4\u5982\u6211\u7684\u662fhttp://apollo-config-svc.apollo:8080%\uff0cbase64\u52a0\u5bc6\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"apollo-config.yaml"),"\u6587\u4ef6\u5185\u5bb9\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    appName: apollo\n    workloadKind: Deployment\n    workloadName: apollo-config\n  name: apollo-config-svc\n  namespace: apollo\nspec:\n  ports:\n  - name: apollo-config-port\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    name: apollo-config\n  type: NodePort\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    appName: apollo\n  name: apollo-config\n  namespace: apollo\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: apollo-config\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: apollo\n        name: apollo-config\n    spec:\n      containers:\n      - name: apollo-config\n        envFrom:\n        - prefix: \'\'\n          secretRef:\n            name: apollo-config-secret\n        image: apolloconfig/apollo-configservice:2.1.0\n        imagePullPolicy: IfNotPresent\n\n        resources:\n          limits:\n            cpu: "4"\n            memory: 4Gi\n          requests:\n            cpu: 100m\n            memory: 128Mi\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        volumeMounts:\n        - mountPath: /etc/localtime\n          name: localtime\n          readOnly: true\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 30\n      volumes:\n      - hostPath:\n          path: /etc/localtime\n          type: ""\n        name: localtime\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"apollo-admin.yaml"),"\u6587\u4ef6\u5185\u5bb9\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    appName: apollo\n    workloadKind: Deployment\n    workloadName: apollo-admin\n  name: apollo-admin-svc\n  namespace: apollo\nspec:\n  ports:\n  - name: apollo-admin-port\n    port: 8090\n    protocol: TCP\n    targetPort: 8090\n  selector:\n    name: apollo-admin\n  type: NodePort\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    appName: apollo\n  name: apollo-admin\n  namespace: apollo\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: apollo-admin\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: apollo\n        name: apollo-admin\n    spec:\n      containers:\n      - name: apollo-admin\n        envFrom:\n        - prefix: \'\'\n          secretRef:\n            name: apollo-config-secret\n        image: apolloconfig/apollo-adminservice:2.1.0\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            cpu: "4"\n            memory: 4Gi\n          requests:\n            cpu: 100m\n            memory: 128Mi\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        volumeMounts:\n        - mountPath: /etc/localtime\n          name: localtime\n          readOnly: true\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 30\n      volumes:\n      - hostPath:\n          path: /etc/localtime\n          type: ""\n        name: localtime\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"apollo-portal.yaml"),"\u6587\u4ef6\u5185\u5bb9\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    appName: apollo\n    workloadKind: Deployment\n    workloadName: apollo-portal\n  name: apollo-portal-svc\n  namespace: apollo\nspec:\n  ports:\n  - name: apollo-portal-port\n    port: 8070\n    protocol: TCP\n    targetPort: 8070\n  selector:\n    name: apollo-portal\n  type: NodePort\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    appName: apollo\n  name: apollo-portal\n  namespace: apollo\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: apollo-portal\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: apollo\n        name: apollo-portal\n    spec:\n      containers:\n      - name: apollo-portal\n        envFrom:\n        - prefix: \'\'\n          secretRef:\n            name: apollo-portal-secret\n        image: apolloconfig/apollo-portal:2.1.0\n        imagePullPolicy: Always\n        resources:\n          limits:\n            cpu: "4"\n            memory: 4Gi\n          requests:\n            cpu: 100m\n            memory: 128Mi\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        volumeMounts:\n        - mountPath: /etc/localtime\n          name: localtime\n          readOnly: true\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 30\n      volumes:\n      - hostPath:\n          path: /etc/localtime\n          type: ""\n        name: localtime\n')),(0,o.kt)("p",null,"\u6700\u540e\u5e94\u7528\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f apollo-config-secret.yaml -f apollo-portal-secret.yaml\n# \u542f\u52a8Apollo\u670d\u52a1\u65f6\u6700\u597d\u4f9d\u6b21\u542f\u52a8, config --\x3e admin --\x3e portal\nkubectl apply -f apollo-config.yaml\nkubectl apply -f apollo-admin.yaml\nkubectl apply -f apollo-portal.yaml\n")),(0,o.kt)("h2",{id:"\u68c0\u67e5\u90e8\u7f72\u72b6\u6001"},"\u68c0\u67e5\u90e8\u7f72\u72b6\u6001"),(0,o.kt)("p",null,"\u83b7\u53d6pod\u548csvc\uff1a"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.agou-ops.cn/others/image-20230911143908435.png",alt:"image-20230911143908435"})),(0,o.kt)("p",null,"\u6253\u5f00",(0,o.kt)("inlineCode",{parentName:"p"},"apollo-config"),"\u67e5\u770b\u670d\u52a1\u6ce8\u518c\u72b6\u6001\uff0c\u6bd4\u5982\u6211\u7684\u662f\uff1ahttp://<NODE_IP>:38623"),(0,o.kt)("p",null,"![image-20230911144103703]","(/Users/agou-ops/Library/Application Support/typora-user-images/image-20230911144103703.png)"),(0,o.kt)("p",null,"\u6253\u5f00",(0,o.kt)("inlineCode",{parentName:"p"},"apollo-portal"),"\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"apollo/admin"),"\u8d26\u6237\u8fdb\u884c\u767b\u5f55\uff1a"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.agou-ops.cn/others/image-20230911144201659.png",alt:"image-20230911144201659"})),(0,o.kt)("p",null,"Done."),(0,o.kt)("h2",{id:"\u9644\u5f55-mysql\u4e3b\u4ece"},"\u9644\u5f55-mysql\u4e3b\u4ece"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# apiVersion: v1\n# kind: Namespace\n# metadata:\n#   name: mysql\n# ---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mysql-cm\n  labels:\n    app: mysql\n    app.kubernetes.io/name: mysql\ndata:\n  primary.cnf: |\n    [mysqld]\n    log-bin\n  replica.cnf: |\n    [mysqld]\n    super-read-only\n---\n# https://kubernetes.io/docs/concepts/services-networking/service/\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql-svc\n  labels:\n    app: mysql\n    app.kubernetes.io/name: mysql\nspec:\n  selector:\n    app: mysql\n  ports:\n  - name: mysql\n    protocol: TCP\n    port: 3306\n  clusterIP: None\n---\n# https://kubernetes.io/docs/concepts/services-networking/service/\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql-read-svc\n  labels:\n    app: mysql\n    app.kubernetes.io/name: mysql\n    readOnly: "true"\nspec:\n  selector:\n    app: mysql\n    app.kubernetes.io/name: mysql\n  ports:\n  - name: mysql\n    protocol: TCP\n    port: 3306\n  clusterIP: None\n---\n# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mysql\nspec:\n  selector:\n    matchLabels:\n      app: mysql\n  serviceName: "mysql-svc"\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: mysql\n        app.kubernetes.io/name: mysql\n    spec:\n      initContainers:\n        - name: init-mysql\n          image: mysql:5.7.43\n          command:\n            - bash\n            - "-c"\n            - |\n              set -ex\n              # \u57fa\u4e8e Pod \u5e8f\u53f7\u751f\u6210 MySQL \u670d\u52a1\u5668\u7684 ID\u3002\n              [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1\n              ordinal=${BASH_REMATCH[1]}\n              echo [mysqld] > /mnt/conf.d/server-id.cnf\n              # \u6dfb\u52a0\u504f\u79fb\u91cf\u4ee5\u907f\u514d\u4f7f\u7528 server-id=0 \u8fd9\u4e00\u4fdd\u7559\u503c\u3002\n              echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf\n              # \u5c06\u5408\u9002\u7684 conf.d \u6587\u4ef6\u4ece config-map \u590d\u5236\u5230 emptyDir\u3002\n              if [[ $ordinal -eq 0 ]]; then\n                cp /mnt/config-map/primary.cnf /mnt/conf.d/\n              else\n                cp /mnt/config-map/replica.cnf /mnt/conf.d/\n              fi\n          volumeMounts:\n            - name: conf\n              mountPath: /mnt/conf.d\n            - name: config-map\n              mountPath: /mnt/config-map\n        - name: clone-mysql\n          image: ist0ne/xtrabackup:1.0\n          command:\n            - bash\n            - "-c"\n            - |\n              set -ex\n              # \u5982\u679c\u5df2\u6709\u6570\u636e\uff0c\u5219\u8df3\u8fc7\u514b\u9686\u3002\n              [[ -d /var/lib/mysql/mysql ]] && exit 0\n              # \u8df3\u8fc7\u4e3b\u5b9e\u4f8b\uff08\u5e8f\u53f7\u7d22\u5f15 0\uff09\u7684\u514b\u9686\u3002\n              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1\n              ordinal=${BASH_REMATCH[1]}\n              [[ $ordinal -eq 0 ]] && exit 0\n              # \u4ece\u539f\u6765\u7684\u5bf9\u7b49\u8282\u70b9\u514b\u9686\u6570\u636e\u3002\n              ncat --recv-only mysql-$(($ordinal-1)).mysql-svc 3307 | xbstream -x -C /var/lib/mysql\n              # \u51c6\u5907\u5907\u4efd\u3002\n              xtrabackup --prepare --target-dir=/var/lib/mysql\n          volumeMounts:\n          - name: data\n            mountPath: /var/lib/mysql\n            subPath: mysql\n          - name: conf\n            mountPath: /etc/mysql/conf.d\n      containers:\n        - name: mysql\n          image: mysql:5.7.43\n          env:\n            - name: MYSQL_ALLOW_EMPTY_PASSWORD\n              value: "1"\n          ports:\n            - containerPort: 3306\n              name: mysql\n          volumeMounts:\n            - mountPath: /var/lib/mysql\n              name: data\n              subPath: mysql\n            - name: conf\n              mountPath: /etc/mysql/conf.d\n          resources:\n            requests:\n              cpu: 500m\n              memory: 1Gi\n          livenessProbe:\n            exec:\n              command:\n                - "mysqladmin"\n                - "ping"\n            initialDelaySeconds: 30\n            periodSeconds: 10\n            timeoutSeconds: 5\n          readinessProbe:\n            exec:\n              command:\n                - "mysql"\n                - "-h"\n                - "127.0.0.1"\n                - "-e"\n                - "SELECT 1"\n            initialDelaySeconds: 5\n            periodSeconds: 2\n            timeoutSeconds: 1\n        - name: xtrabackup\n          image: ist0ne/xtrabackup:1.0\n          ports:\n            - name: xtrabackup\n              containerPort: 3307\n          command:\n            - "bash"\n            - "-c"\n            - |\n              set -ex\n              cd /var/lib/mysql\n\n              # \u786e\u5b9a\u514b\u9686\u6570\u636e\u7684 binlog \u4f4d\u7f6e\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002\n              if [[ -f xtrabackup_slave_info && "x$(<xtrabackup_slave_info)" != "x" ]]; then\n                # XtraBackup \u5df2\u7ecf\u751f\u6210\u4e86\u90e8\u5206\u7684 \u201cCHANGE MASTER TO\u201d \u67e5\u8be2\n                # \u56e0\u4e3a\u6211\u4eec\u4ece\u4e00\u4e2a\u73b0\u6709\u526f\u672c\u8fdb\u884c\u514b\u9686\u3002(\u9700\u8981\u5220\u9664\u672b\u5c3e\u7684\u5206\u53f7!)\n                cat xtrabackup_slave_info | sed -E \'s/;$//g\' > change_master_to.sql.in\n                # \u5728\u8fd9\u91cc\u8981\u5ffd\u7565 xtrabackup_binlog_info \uff08\u5b83\u662f\u6ca1\u7528\u7684\uff09\u3002\n                rm -f xtrabackup_slave_info xtrabackup_binlog_info\n              elif [[ -f xtrabackup_binlog_info ]]; then\n                # \u6211\u4eec\u76f4\u63a5\u4ece\u4e3b\u5b9e\u4f8b\u8fdb\u884c\u514b\u9686\u3002\u89e3\u6790 binlog \u4f4d\u7f6e\u3002\n                [[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1\n                rm -f xtrabackup_binlog_info xtrabackup_slave_info\n                echo "CHANGE MASTER TO MASTER_LOG_FILE=\'${BASH_REMATCH[1]}\',\\\n                      MASTER_LOG_POS=${BASH_REMATCH[2]}" > change_master_to.sql.in\n              fi\n\n              # \u68c0\u67e5\u6211\u4eec\u662f\u5426\u9700\u8981\u901a\u8fc7\u542f\u52a8\u590d\u5236\u6765\u5b8c\u6210\u514b\u9686\u3002\n              if [[ -f change_master_to.sql.in ]]; then\n                echo "Waiting for mysqld to be ready (accepting connections)"\n                until mysql -h 127.0.0.1 -e "SELECT 1"; do sleep 1; done\n\n                echo "Initializing replication from clone position"\n                mysql -h 127.0.0.1 \\\n                      -e "$(<change_master_to.sql.in), \\\n                              MASTER_HOST=\'mysql-0.mysql-svc\', \\\n                              MASTER_USER=\'root\', \\\n                              MASTER_PASSWORD=\'\', \\\n                              MASTER_CONNECT_RETRY=10; \\\n                            START SLAVE;" || exit 1\n                # \u5982\u679c\u5bb9\u5668\u91cd\u65b0\u542f\u52a8\uff0c\u6700\u591a\u5c1d\u8bd5\u4e00\u6b21\u3002\n                mv change_master_to.sql.in change_master_to.sql.orig\n              fi\n\n              # \u5f53\u5bf9\u7b49\u70b9\u8bf7\u6c42\u65f6\uff0c\u542f\u52a8\u670d\u52a1\u5668\u53d1\u9001\u5907\u4efd\u3002\n              exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \\\n                "xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root"\n          volumeMounts:\n          - name: data\n            mountPath: /var/lib/mysql\n            subPath: mysql\n          - name: conf\n            mountPath: /etc/mysql/conf.d\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n      volumes:\n      - name: conf\n        emptyDir: {}\n      - name: config-map\n        configMap:\n          name: mysql-cm\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: ["ReadWriteOnce"]\n      storageClassName: "nfs-client-159"\n      resources:\n        requests:\n          storage: 20Gi\n')),(0,o.kt)("h2",{id:"\u53c2\u8003\u94fe\u63a5"},"\u53c2\u8003\u94fe\u63a5"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.apolloconfig.com/#/zh/design/apollo-introduction"},"https://www.apolloconfig.com/#/zh/design/apollo-introduction")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ctripcorp/apollo"},"https://github.com/ctripcorp/apollo"))))}c.isMDXComponent=!0}}]);