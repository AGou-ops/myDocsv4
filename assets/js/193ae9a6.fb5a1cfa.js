"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[322],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=l(n),m=r,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return n?o.createElement(g,s(s({ref:t},u),{},{components:n})):o.createElement(g,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6865:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={},s="Node.js Deployment",i={unversionedId:"LinuxBasics/Web-Servers/Nginx/Others/Node.js with ssl - nginx",id:"LinuxBasics/Web-Servers/Nginx/Others/Node.js with ssl - nginx",title:"Node.js Deployment",description:"Steps to deploy a Node.js app to DigitalOcean using PM2, NGINX as a reverse proxy and an SSL from LetsEncrypt",source:"@site/docs/LinuxBasics/Web-Servers/Nginx/Others/Node.js with ssl - nginx.md",sourceDirName:"LinuxBasics/Web-Servers/Nginx/Others",slug:"/LinuxBasics/Web-Servers/Nginx/Others/Node.js with ssl - nginx",permalink:"/docs/LinuxBasics/Web-Servers/Nginx/Others/Node.js with ssl - nginx",draft:!1,editUrl:"https://github.com/AGou-ops/myDocsv4/edit/main/docs/LinuxBasics/Web-Servers/Nginx/Others/Node.js with ssl - nginx.md",tags:[],version:"current",frontMatter:{},sidebar:"linuxBasics",previous:{title:"Others",permalink:"/docs/category/others"},next:{title:"nginx\u5229\u7528logrotate\u65e5\u5fd7\u5207\u5272",permalink:"/docs/LinuxBasics/Web-Servers/Nginx/Others/\u4f7f\u7528logrotate\u5207\u5272nginx\u65e5\u5fd7"}},p={},l=[{value:"1. Sign up for Digital Ocean",id:"1-sign-up-for-digital-ocean",level:2},{value:"2. Create a droplet and log in via ssh",id:"2-create-a-droplet-and-log-in-via-ssh",level:2},{value:"3. Install Node/NPM",id:"3-install-nodenpm",level:2},{value:"4. Clone your project from Github",id:"4-clone-your-project-from-github",level:2},{value:"5. Install dependencies and test app",id:"5-install-dependencies-and-test-app",level:3},{value:"6. Setup PM2 process manager to keep your app running",id:"6-setup-pm2-process-manager-to-keep-your-app-running",level:2},{value:"You should now be able to access your app using your IP and port. Now we want to setup a firewall blocking that port and setup NGINX as a reverse proxy so we can access it directly using port 80 (http)",id:"you-should-now-be-able-to-access-your-app-using-your-ip-and-port-now-we-want-to-setup-a-firewall-blocking-that-port-and-setup-nginx-as-a-reverse-proxy-so-we-can-access-it-directly-using-port-80-http",level:3},{value:"7. Setup ufw firewall",id:"7-setup-ufw-firewall",level:2},{value:"8. Install NGINX and configure",id:"8-install-nginx-and-configure",level:2},{value:"You should now be able to visit your IP with no port (port 80) and see your app. Now let&#39;s add a domain",id:"you-should-now-be-able-to-visit-your-ip-with-no-port-port-80-and-see-your-app-now-lets-add-a-domain",level:3},{value:"9. Add domain in Digital Ocean",id:"9-add-domain-in-digital-ocean",level:2},{value:"Register and/or setup domain from registrar",id:"register-andor-setup-domain-from-registrar",level:2}],u={toc:l};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nodejs-deployment"},"Node.js Deployment"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Steps to deploy a Node.js app to DigitalOcean using PM2, NGINX as a reverse proxy and an SSL from LetsEncrypt")),(0,r.kt)("h2",{id:"1-sign-up-for-digital-ocean"},"1. Sign up for Digital Ocean"),(0,r.kt)("p",null,"If you use the referal link below, you get $10 free (1 or 2 months) ",(0,r.kt)("a",{parentName:"p",href:"https://m.do.co/c/5424d440c63a"},"https://m.do.co/c/5424d440c63a")),(0,r.kt)("h2",{id:"2-create-a-droplet-and-log-in-via-ssh"},"2. Create a droplet and log in via ssh"),(0,r.kt)("p",null,"I will be using the root user, but would suggest creating a new user"),(0,r.kt)("h2",{id:"3-install-nodenpm"},"3. Install Node/NPM"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\n\nsudo apt install nodejs\n\nnode --version\n")),(0,r.kt)("h2",{id:"4-clone-your-project-from-github"},"4. Clone your project from Github"),(0,r.kt)("p",null,"There are a few ways to get your files on to the server, I would suggest using Git"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git clone yourproject.git\n")),(0,r.kt)("h3",{id:"5-install-dependencies-and-test-app"},"5. Install dependencies and test app"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd yourproject\nnpm install\nnpm start (or whatever your start command)\n# stop app\nctrl+C\n")),(0,r.kt)("h2",{id:"6-setup-pm2-process-manager-to-keep-your-app-running"},"6. Setup PM2 process manager to keep your app running"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo npm i pm2 -g\npm2 start app (or whatever your file name)\n\n# Other pm2 commands\npm2 show app\npm2 status\npm2 restart app\npm2 stop app\npm2 logs (Show log stream)\npm2 flush (Clear logs)\n\n# To make sure app starts when reboot\npm2 startup ubuntu\n")),(0,r.kt)("h3",{id:"you-should-now-be-able-to-access-your-app-using-your-ip-and-port-now-we-want-to-setup-a-firewall-blocking-that-port-and-setup-nginx-as-a-reverse-proxy-so-we-can-access-it-directly-using-port-80-http"},"You should now be able to access your app using your IP and port. Now we want to setup a firewall blocking that port and setup NGINX as a reverse proxy so we can access it directly using port 80 (http)"),(0,r.kt)("h2",{id:"7-setup-ufw-firewall"},"7. Setup ufw firewall"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo ufw enable\nsudo ufw status\nsudo ufw allow ssh (Port 22)\nsudo ufw allow http (Port 80)\nsudo ufw allow https (Port 443)\n")),(0,r.kt)("h2",{id:"8-install-nginx-and-configure"},"8. Install NGINX and configure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo apt install nginx\n\nsudo nano /etc/nginx/sites-available/default\n")),(0,r.kt)("p",null,"Add the following to the location part of the server block"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    server_name yourdomain.com www.yourdomain.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:5000; #whatever port your app runs on\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n# Check NGINX config\nsudo nginx -t\n\n# Restart NGINX\nsudo service nginx restart\n")),(0,r.kt)("h3",{id:"you-should-now-be-able-to-visit-your-ip-with-no-port-port-80-and-see-your-app-now-lets-add-a-domain"},"You should now be able to visit your IP with no port (port 80) and see your app. Now let's add a domain"),(0,r.kt)("h2",{id:"9-add-domain-in-digital-ocean"},"9. Add domain in Digital Ocean"),(0,r.kt)("p",null,"In Digital Ocean, go to networking and add a domain"),(0,r.kt)("p",null,"Add an A record for @ and for www to your droplet"),(0,r.kt)("h2",{id:"register-andor-setup-domain-from-registrar"},"Register and/or setup domain from registrar"),(0,r.kt)("p",null,"I prefer Namecheap for domains. Please use this affiliate link if you are going to use them ",(0,r.kt)("a",{parentName:"p",href:"https://namecheap.pxf.io/c/1299552/386170/5618"},"https://namecheap.pxf.io/c/1299552/386170/5618")),(0,r.kt)("p",null,'Choose "Custom nameservers" and add these 3'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ns1.digitalocean.com"),(0,r.kt)("li",{parentName:"ul"},"ns2.digitalocean.com"),(0,r.kt)("li",{parentName:"ul"},"ns3.digitalocean.com")),(0,r.kt)("p",null,"It may take a bit to propogate"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add SSL with LetsEncrypt")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo add-apt-repository ppa:certbot/certbot\nsudo apt-get update\nsudo apt-get install python-certbot-nginx\nsudo certbot --nginx -d yourdomain.com -d www.yourdomain.com\n\n# Only valid for 90 days, test the renewal process with\ncertbot renew --dry-run\n")),(0,r.kt)("p",null,"Now visit ",(0,r.kt)("a",{parentName:"p",href:"https://yourdomain.com/"},"https://yourdomain.com")," and you should see your Node app"))}d.isMDXComponent=!0}}]);