"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[568],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>u});var t=a(67294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=t.createContext({}),p=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(a),u=o,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||s;return a?t.createElement(g,r(r({ref:n},c),{},{components:a})):t.createElement(g,r({ref:n},c))}));function u(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=a.length,r=new Array(s);r[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var p=2;p<s;p++)r[p]=a[p];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},82808:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var t=a(87462),o=(a(67294),a(3905));const s={},r="Kubernetes YAML file quicklystart",i={unversionedId:"CloudNative/k8s/Kubernetes Yaml quicklystart",id:"CloudNative/k8s/Kubernetes Yaml quicklystart",title:"Kubernetes YAML file quicklystart",description:"[toc]",source:"@site/docs/CloudNative/k8s/Kubernetes Yaml quicklystart.md",sourceDirName:"CloudNative/k8s",slug:"/CloudNative/k8s/Kubernetes Yaml quicklystart",permalink:"/docs/CloudNative/k8s/Kubernetes Yaml quicklystart",draft:!1,editUrl:"https://github.com/AGou-ops/myDocsv4/edit/main/docs/CloudNative/k8s/Kubernetes Yaml quicklystart.md",tags:[],version:"current",frontMatter:{},sidebar:"cloudNative",previous:{title:"Kubernetes REST API",permalink:"/docs/CloudNative/k8s/Kubernetes REST API"},next:{title:"\u57fa\u4e8ekubernetes\u5e73\u53f0\u7684CICD\u6301\u7eed\u96c6\u6210",permalink:"/docs/CloudNative/k8s/Kubernetes with Jenkins CICD"}},l={},p=[{value:"1.\u96c6\u7fa4\u7ea7\u522b\u8d44\u6e90",id:"1\u96c6\u7fa4\u7ea7\u522b\u8d44\u6e90",level:2},{value:"1.1.namespace\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"11namespace\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"2.pod\u8d44\u6e90",id:"2pod\u8d44\u6e90",level:2},{value:"2.1.pod\u8d44\u6e90\u6e05\u5355\u6587\u4ef6-\u6db5\u76d6\u5168\u90e8\u53c2\u6570",id:"21pod\u8d44\u6e90\u6e05\u5355\u6587\u4ef6-\u6db5\u76d6\u5168\u90e8\u53c2\u6570",level:3},{value:"2.2.pod\u8d44\u6e90\u57fa\u672c\u914d\u7f6e\u6e05\u5355\u6587\u4ef6",id:"22pod\u8d44\u6e90\u57fa\u672c\u914d\u7f6e\u6e05\u5355\u6587\u4ef6",level:3},{value:"2.3.pod\u8d44\u6e90\u5065\u5eb7\u68c0\u67e5\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"23pod\u8d44\u6e90\u5065\u5eb7\u68c0\u67e5\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"2.2.pod\u8d44\u6e90\u4e00\u7ea7\u53ef\u914d\u7f6e\u5c5e\u6027",id:"22pod\u8d44\u6e90\u4e00\u7ea7\u53ef\u914d\u7f6e\u5c5e\u6027",level:3},{value:"2.4.pod\u521d\u59cb\u5316\u5bb9\u5668\u914d\u7f6e\u53c2\u6570",id:"24pod\u521d\u59cb\u5316\u5bb9\u5668\u914d\u7f6e\u53c2\u6570",level:3},{value:"2.5.pod\u8d44\u6e90\u94a9\u5b50\u51fd\u6570\u914d\u7f6e\u53c2\u6570",id:"25pod\u8d44\u6e90\u94a9\u5b50\u51fd\u6570\u914d\u7f6e\u53c2\u6570",level:3},{value:"2.6.Pod\u8d44\u6e90node\u8c03\u5ea6\u7b56\u7565\u914d\u7f6e\u53c2\u6570",id:"26pod\u8d44\u6e90node\u8c03\u5ea6\u7b56\u7565\u914d\u7f6e\u53c2\u6570",level:3},{value:"2.7.Pode\u4eb2\u548c\u6027\u8c03\u5ea6\u914d\u7f6e\u53c2\u6570",id:"27pode\u4eb2\u548c\u6027\u8c03\u5ea6\u914d\u7f6e\u53c2\u6570",level:3},{value:"3.pod\u8d44\u6e90\u63a7\u5236\u5668\u8d44\u6e90",id:"3pod\u8d44\u6e90\u63a7\u5236\u5668\u8d44\u6e90",level:2},{value:"3.1.ReplicaSet\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"31replicaset\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"3.2.Deployment\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"32deployment\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"3.3.HPA\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"33hpa\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"3.4.DaemonSet\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"34daemonset\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"3.5.Job\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"35job\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"3.6.CronJob\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"36cronjob\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"3.7.StatefulSet\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"37statefulset\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"4.\u670d\u52a1\u53d1\u73b0\u8d44\u6e90",id:"4\u670d\u52a1\u53d1\u73b0\u8d44\u6e90",level:2},{value:"4.1.service\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"41service\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"4.2.ingress\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"42ingress\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"5.\u6570\u636e\u5b58\u50a8\u8d44\u6e90",id:"5\u6570\u636e\u5b58\u50a8\u8d44\u6e90",level:2},{value:"5.1.EmptyDir\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"51emptydir\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"5.2.HostPath\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"52hostpath\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"5.3.NFS\u7c7b\u578b\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"53nfs\u7c7b\u578b\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"5.4.PV\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"54pv\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"5.5.PVC\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"55pvc\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"6.\u914d\u7f6e\u8d44\u6e90",id:"6\u914d\u7f6e\u8d44\u6e90",level:2},{value:"6.1.configmap\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"61configmap\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"6.2.secret\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"62secret\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"7.RBAC\u8bbf\u95ee\u6388\u6743\u8d44\u6e90",id:"7rbac\u8bbf\u95ee\u6388\u6743\u8d44\u6e90",level:2},{value:"7.1.Role\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"71role\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"7.2.ClusterRole\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"72clusterrole\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"7.3.RoleBinding\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"73rolebinding\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"7.4.CLusterRoleBinding\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"74clusterrolebinding\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"8. LimitRange/ResourceQuota\u8d44\u6e90\u9650\u5236",id:"8-limitrangeresourcequota\u8d44\u6e90\u9650\u5236",level:2},{value:"8.1 LimitRange\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"81-limitrange\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"8.2 ResourceQuota\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",id:"82-resourcequota\u8d44\u6e90\u6e05\u5355\u6587\u4ef6",level:3},{value:"9. \u7efc\u5408\u793a\u4f8b",id:"9-\u7efc\u5408\u793a\u4f8b",level:2}],c={toc:p};function m(e){let{components:n,...a}=e;return(0,o.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"kubernetes-yaml-file-quicklystart"},"Kubernetes YAML file quicklystart"),(0,o.kt)("p",null,"[toc]"),(0,o.kt)("h2",{id:"1\u96c6\u7fa4\u7ea7\u522b\u8d44\u6e90"},"1.\u96c6\u7fa4\u7ea7\u522b\u8d44\u6e90"),(0,o.kt)("h3",{id:"11namespace\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"1.1.namespace\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1                  # api\u7248\u672c\nkind: Namespace                 # \u8d44\u6e90\u7c7b\u578b\nmetadata:                       # \u5143\u6570\u636e\n  name: dev                     # namespace\u7684\u540d\u79f0\n")),(0,o.kt)("h2",{id:"2pod\u8d44\u6e90"},"2.pod\u8d44\u6e90"),(0,o.kt)("h3",{id:"21pod\u8d44\u6e90\u6e05\u5355\u6587\u4ef6-\u6db5\u76d6\u5168\u90e8\u53c2\u6570"},"2.1.pod\u8d44\u6e90\u6e05\u5355\u6587\u4ef6-\u6db5\u76d6\u5168\u90e8\u53c2\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1           # \u5fc5\u9009,\u7248\u672c\u53f7,\u4f8b\u5982v1\nkind: Pod               # \u5fc5\u9009,\u8d44\u6e90\u7c7b\u578b,\u4f8b\u5982 Pod\nmetadata:               # \u5fc5\u9009,\u5143\u6570\u636e\n  name : string          # \u5fc5\u9009,Pod\u540d\u79f0\n  namespace: string         # Pod\u6240\u5c5e\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u9ed8\u8ba4\u4e3a" default"labels:\n  labels:                   # \u81ea\u5b9a\u4e49\u6807\u7b7e\u5217\u8868\n    - namd: string\nspec:                       # \u5fc5\u9009,Pod\u4e2d\u5bb9\u5668\u7684\u8be6\u7ec6\u5b9a\u4e49 \n  containers:               # \u5fc5\u9009,Pod\u4e2d\u5bb9\u5668\u5217\u8868\n  - name: string            # \u5fc5\u9009,\u5bb9\u5668\u540d\u79f0\n    image: string           # \u5fc5\u9009,\u5bb9\u5668\u7684\u955c\u50cf\u540d\u79f0\n    imagePullPolicy: [ Always | Never |IfNotPresent ]       # \u83b7\u53d6\u955c\u50cf\u7684\u7b56\u7565\n    command: [string]               # \u5bb9\u5668\u7684\u542f\u52a8\u547d\u4ee4\u5217\u8868,\u5982\u4e0d\u6307\u5b9a\uff0c\u4f7f\u7528\u6253\u5305\u65f6\u4f7f\u7528\u7684\u542f\u52a8\u547d\u4ee4\n    args: [string]                  # \u5bb9\u5668\u7684\u542f\u52a8\u547d\u4ee4\u53c2\u6570\u5217\u8868\n    workingDir: string               # \u5bb9\u5668\u7684\u5de5\u4f5c\u76ee\u5f55\n    volumeMounts:                   # \u6302\u8f7d\u5230\u5bb9\u5668\u5185\u90e8\u7684\u5b58\u50a8\u5377\u914d\u7f6e\n    - name: string                  # \u597d\u7528pod\u5b9a\u4e49\u7684\u5171\u4eab\u5b58\u50a8\u5377\u7684\u540d\u79f0,\u9700\u7528volumes[ ]\u90e8\u5206\u5b9a\u4e49\u7684\u7684\u5377\u540d\n      mountPath: string             # \u5b58\u50a8\u5377\u5728\u5bb9\u5668\u5185mount\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u5e94\u5c11\u4e8e512\u5b57\u7b26\n      readonly: boolean             # \u662f\u5426\u4e3a\u53ea\u8bfb\u6a21\u5f0f\n    ports:                      # \u9700\u8981\u66b4\u9732\u7684\u7aef\u53e3\u5e93\u53f7\u5217\u8868\n    - name: string              # \u7aef\u53e3\u7684\u540d\u79f0\n      containerPort: int         # \u5bb9\u5668\u9700\u8981\u76d1\u542c\u7684\u7aef\u53e3\u53f7\n      hostPort: int                 # \u5bb9\u5668\u6240\u5728\u4e3b\u673a\u9700\u8981\u76d1\u542c\u7684\u7aef\u53e3\u53f7,\u9ed8\u8ba4\u4e0eContainer\u76f8\u540c\n      protocol: string              # \u7aef\u53e3\u534f\u8bae,\u652f\u6301TCP\u548cUDP,\u9ed8\u8ba4TCP \n    env:                        # \u5bb9\u5668\u8fd0\u884c\u524d\u9700\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u5217\u8868\n    - name: string               # \u73af\u5883\u53d8\u91cf\u540d\u79f0\n      value: string              # \u73af\u5883\u53d8\u91cf\u7684\u503c\n    resources:                   # \u8d44\u6e90\u9650\u5236\u548c\u8bf7\u6c42\u7684\u8bbe\u7f6e\n      limits:                       # \u8d44\u6e90\u9650\u5236\u7684\u8bbe\u7f6e\n        cpu: string                 # cpu\u7684\u9650\u5236,\u5355\u4f4d\u4e3acore\u6570,\u5c06\u7528\u4e8edocker run --cpu-shares\u53c2\u6570\n        memory: string              # \u5185\u5b58\u9650\u5236\uff0c\u5355\u4f4d\u53ef\u4ee5\u4e3aMib/Gib,\u5c06\u7528\u4e8edocker run --memory\u53c2\u6570\n      requests:                     # \u8d44\u6e90\u8bf7\u6c42\u7684\u8bbe\u7f6e\n        cpu: string                 # cpu\u8bf7\u6c42,\u5bb9\u5668\u542f\u52a8\u7684\u521d\u59cb\u53ef\u7528\u6570\u91cf\n        memory: string              # \u5185\u5b58\u8bf7\u6c42\uff0c\u5bb9\u5668\u542f\u52a8\u7684\u521d\u59cb\u53ef\u7528\u6570\u91cf\n    lifecycle:                      # \u751f\u547d\u5468\u671f\u94a9\u5b50\n      postStart:                    # \u5bb9\u5668\u542f\u52a8\u540e\u7acb\u5373\u6267\u884c\u6b64\u94a9\u5b50,\u5982\u679c\u6267\u884c\u5931\u8d25,\u4f1a\u6839\u636e\u91cd\u542f\u7b56\u7565\u8fdb\u884c\u91cd\u542f\n      preStop:                      # \u6eb6\u5bb9\u5668\u7ec8\u6b62\u524d\u6267\u884c\u6b64\u94a9\u5b50,\u65e0\u8bba\u7ed3\u679c\u5982\u4f55\uff0c\u5bb9\u5668\u90fd\u4f1a\u7ec8\u6b62\n    livenessProbe:                  # \u5bf9Pod\u5185\u5404\u5bb9\u54ed\u5065\u5510\u68c0\u67e5\u7684\u8bbe\u7f72\uff0c\u5f53\u63a2\u6d4b\u65e0\u54cd\u5e94\u51e0\u6b21\u540e\u5c06\u81ea\u52a8\u91cd\u542f\u8be5\u5bb9\u5668\n      exec:                         # Pod\u5bb9\u5668\u5185\u68c0\u67e5\u65b9\u5f0f\u8bbe\u7f6e\u4e3aexec\u65b9\u5f0f\n        command: [string]               # exec\u65b9\u5f0f\u9700\u8981\u5236\u5b9a\u7684\u547d\u4ee4\u6216\u811a\u672c\n        httpGet:                            # \u5bf9Pod\u67d0\u4e2a\u5bb9\u5668\u5065\u5eb7\u68c0\u67e5\u65b9\u6cd5\u8bbe\u7f6e\u4e3aHttpGet\uff0c\u9700\u8981\u5236\u5b9aPath\u3001port\n          path: string\n          port: number\n          host: string\n          scheme: string\n          HttpHeaders:\n          - name : string\n            value: string\n        tcpSocket:                          # \u5bf9Pod\u5185\u4e2a\u5bb9\u5668\u5065\u5eb7\u68c0\u67e5\u65b9\u5f0f\u8bbe\u7f6e\u4e3atcpSocket\u65b9\u5f0f\n          port: number\n        initialDelaySeconds: 0                  # \u5bb9\u5668\u542f\u52a8\u5b8c\u6210\u540e\u9996\u6b21\u63a2\u6d4b\u7684\u65f6\u95f4,\u5355\u4f4d\u4e3a\u79d2\n        timeoutSeconds: 0                       # \u5bf9\u5bb9\u5668\u5065\u5eb7\u68c0\u67e5\u63a2\u6d4b\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u79d2,\u9ed8\u8ba41\u79d2\n        periodSeconds: 0                        # \u5bf9\u5bb9\u5668\u76d1\u63a7\u68c0\u67e5\u7684\u5b9a\u671f\u63a2\u6d4b\u65f6\u95f4\u8bbe\u7f6e,\u5355\u4f4d\u79d2\uff0c\u9ed1\u8ba418\u79d2\u4e00\u6b21\n        successThreshold: 0\n        failureThreshold: 0\n        securityContext:\n          privileged: false\n    restartPolicy: [Always  Never| OnFailure]                   # Pod\u7684\u91cd\u542f\u7b56\u7565\n    nodeName: <string>                                  # \u8bbe\u7f6eNodeName\u8868\u793a\u5c06\u8be5Pod\u8c03\u5ea6\u5230\u6307\u5b9a\u5230\u540d\u79f0\u7684node\u8282\u70b9\u4e0a\n    nodeSelector: obeject                           # \u8bbe\u7f6eNodeSelector\u8868\u793a\u5c06\u8be5Pod\u8c03\u5ea6\u5230\u5305\u542b\u8fd9\u4e2alabel\u7684node\u8282\u70b9\u4e0a\n    imagePullSecrets:                           # Pull\u955c\u50cf\u65f6\u4f7f\u7528\u7684secret\u540d\u79f0\uff0c\u4ee5key: secretkey\u683c\u5f0f\u6307\u5b9a\n    - name: string\n     hostNetwork: false                 # \u662f\u5426\u4f7f\u7528\u4e3b\u673a\u7f51\u7edc\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u4e3afalse,\u5982\u679c\u8bbe\u7f6e\u4e3atrue,\u8868\u793a\u4f7f\u7528\u5bbf\u4e3b\u673a\u7f51\u7edc\n     volumes:                               # \u5728\u8be5pod\u4e0a\u5b9a\u4e49\u5171\u4eab\u5b58\u50a8\u5377\u5217\u8868\n     - name: string                         # \u5171\u4eab\u5b58\u50a8\u5377\u540d\u79f0\uff08volumes\u7c7b\u578b\u6709\u5f88\u591a\u79cd)\n     emptyDir: {}                                   # \u7c7b\u578b\u4e3aemtyDir\u7684\u5b58\u50a8\u5377,\u4e0ePod\u540c\u751f\u547d\u5468\u671f\u7684\u4e00\u4e2a\u4e34\u65f6\u76ee\u5f55,\u4e3a\u7a7a\u503c\n     hostPath: string                       # \u7c7b\u578b\u4e3ahostPath\u7684\u5b58\u50a8\u5377,\u8868\u793a\u6302\u8f7dPod\u6240\u5728\u5bbf\u4e3b\u673a\u7684\u76ee\u5f55\n       path: string                     # Pod\u6240\u5728\u5bbf\u4e3b\u673a\u7684\u76ee\u5f55,\u5c06\u88ab\u7528\u4e8e\u540c\u671f\u4e2dmount\u7684\u76ee\u5f55\n     secret:                            # \u7c7b\u578b\u4e3asecret\u7684\u5b58\u50a8\u5377,\u6302\u8f7d\u96c6\u7fa4\u4e0e\u5b9a\u4e49\u7684secret\u5bf9\u8c61\u5230\u5bb9\u5668\u5185\u90e8\n       scretname: string\n       items :\n       - key : string\n         path: string\n       configMap:                       # \u7c7b\u578b\u4e3aconfigMap\u7684\u5b58\u50a8\u5377\uff0c\u6302\u8f7d\u9884\u5b9a\u4e49\u7684configMap\u5bf9\u8c61\u5230\u5bb9\u5668\u5185\u90e8\n         name: string\n         items:\n         - key: string\n           path: string\n')),(0,o.kt)("h3",{id:"22pod\u8d44\u6e90\u57fa\u672c\u914d\u7f6e\u6e05\u5355\u6587\u4ef6"},"2.2.pod\u8d44\u6e90\u57fa\u672c\u914d\u7f6e\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1                          # api\u7248\u672c\nkind: Pod                               # \u8d44\u6e90\u7c7b\u578b\u4e3apod\nmetadata:                               # \u5b9a\u4e49\u5143\u6570\u636e\n  name: pod-resources                   # pod\u7684\u540d\u79f0\n  namespace: dev                        # pod\u6240\u5728\u7684namespace\n  labels:                               # \u5b9a\u4e49\u6807\u7b7e\n    app: base\nspec:\n  containers:\n  - name: nginx-port                        # \u5bb9\u5668\u7684\u540d\u79f0\n    image: nginx:1.11                       # \u955c\u50cf\u7248\u672c\n    imagePullPolicy: IfNotPresent               # \u955c\u50cf\u62c9\u53d6\u7b56\u7565\n    command: ["/bin/sh"]                # \u5bb9\u5668\u542f\u52a8\u540e\u8981\u6267\u884c\u7684\u547d\u4ee4\uff0c\u547d\u4ee4\u6709\u5f88\u591a\u5b50\u547d\u4ee4\uff0c\u4ee5\u9017\u53f7\u5206\u9694\n    args: ["-c","touch/hello.txt;while true;do /bin/echo $(date +%T)>>/tmp/hellow.txt;sleep 3;done;"]\n    env:                        # \u5b9a\u4e49\u73af\u5883\u53d8\u91cf\n    - name: "username"          # \u5b9a\u4e49\u53d8\u91cf\u540d\u79f0\n      value: "jiangxl"          # \u5b9a\u4e49\u53d8\u91cf\u503c\n    - name: "job"\n      value: "it"    \n    ports:                             # \u5b9a\u4e49\u7aef\u53e3\uff0c\u4e00\u4e2a- name\u8868\u793a\u4e00\u4e2a\u7aef\u53e3\uff0c\u53ef\u4ee5\u5199\u591a\u4e2a\n    - name: nginx-port                  # \u5b9a\u4e49\u7aef\u53e3\u540d\u79f0            \n      containerPort: 80                 # \u5b9a\u4e49\u5f00\u653e\u7684\u7aef\u53e3\n      protocol: TCP                     # \u6307\u5b9a\u7aef\u53e3\u5c5e\u4e8e\u4ec0\u4e48\u534f\u8bae    \n    resources:                      # \u5b9a\u4e49\u8d44\u6e90\u914d\u7f6e\n      limits:                       # \u6700\u5927\u8d44\u6e90\u9650\u5236\n        cpu: "2"                        # cpu\u9650\u5236\u57282\u6838\n        memory: "10Gi"                   # \u5185\u5b58\u9650\u5236\u572810G\n      requests:                     # \u6700\u5c0f\u8d44\u6e90\u9650\u5236\n        cpu: "1"                        # cpu\u9650\u5236\u57281\u6838\n        memory: "10Mi"                  # \u5185\u5b58\u9650\u5236\u572810M\n')),(0,o.kt)("h3",{id:"23pod\u8d44\u6e90\u5065\u5eb7\u68c0\u67e5\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"2.3.pod\u8d44\u6e90\u5065\u5eb7\u68c0\u67e5\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-livereadiness\n  namespace: dev\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.15\n    ports:\n    - name: nginx-port\n      containerPort: 80\n    livenessProbe:                          # \u5b58\u6d3b\u6027\u63a2\u6d4b \n      tcpSocket:                            # \u4f7f\u7528TCPSocket\u63a2\u6d4b\u65b9\u5f0f\n        port: 80                            # \u63a2\u6d4b\u7684\u7aef\u53e3\n    initialDelaySeconds: 30                 # \u5bb9\u5668\u542f\u52a8\u540e30s\u4ee5\u540e\u5f00\u59cb\u63a2\u6d4b\n    timeoutSeconds: 5                       # \u63a2\u6d4b\u8d85\u65f6\u65f6\u95f4\n    readinessProbe:                         # \u5c31\u7eea\u6027\u63a2\u6d4b     \n      httpGet:                             # \u4f7f\u7528HTTPGet\u63a2\u6d4b\u65b9\u5f0f\n        scheme: HTTP                       # \u534f\u8bae\u4f7f\u7528http\n        port: 80                          # \u5e94\u7528\u7aef\u53e3\n        path: /                           # url\u8def\u5f84\n")),(0,o.kt)("h3",{id:"22pod\u8d44\u6e90\u4e00\u7ea7\u53ef\u914d\u7f6e\u5c5e\u6027"},"2.2.pod\u8d44\u6e90\u4e00\u7ea7\u53ef\u914d\u7f6e\u5c5e\u6027"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"[root@k8s-master ~]\\# kubectl explain pod\nKIND:     Pod\nVERSION:  v1                        # \u7f16\u5199yaml\u6587\u4ef6\u65f6\u7b2c\u4e00\u884c\u7684\u7248\u672c\u53f7\u53ef\u4ee5\u4ece\u8fd9\u91cc\u8fdb\u884c\u67e5\u627e\nFIELDS:                                 # \u53ef\u914d\u7f6e\u7684\u4e00\u7ea7\u5c5e\u6027\uff0c\u57fa\u672c\u6240\u6709\u8d44\u6e90\u90fd\u662f\u5982\u4e0b\u4e94\u4e2a\uff0c\u5982\u679c\u5f53\u524d\u7ea7\u522b\u914d\u7f6e\u53c2\u6570\u540e\u9762<>\u4e2d\u662fstring\u5c31\u8868\u793a\u6ca1\u6709\u4e0b\u4e00\u7ea7\u914d\u7f6e\u53c2\u6570\uff0c\u76f4\u63a5\u586b\u5199\u4e00\u4e2a\u5b57\u7b26\u4e32\u5373\u53ef\uff0c\u5982\u679c<>\u4e3aobject\u8bf4\u660e\u4ed6\u8fd8\u6709\u4e0b\u4e00\u7ea7\u914d\u7f6e\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u8d44\u6e90\u7c7b\u578b.\u5c5e\u6027\u7684\u65b9\u5f0f\u67e5\u627e\n   apiVersion   <string>                    # \u5f53\u524d\u8d44\u6e90\u652f\u6301\u7684\u7248\u672c\n   kind <string>                        # \u63a7\u5236\u5668\u7c7b\u578b\n   metadata <Object>                            # \u5143\u6570\u636e\n   spec <Object>                            # \u8bbe\u7f6e\u5c5e\u6027\n   status   <Object>                    # \u8bb0\u5f55pod\u7684\u72b6\u6001\uff0c\u5305\u62ecip\u5730\u5740\u3001\u521b\u5efa\u65f6\u95f4\u7b49\u7b49\uff0c\u662f\u81ea\u52a8\u589e\u52a0\u7684\uff0c\u4e0d\u662f\u624b\u52a8\u5199\u5165\u7684\n")),(0,o.kt)("h3",{id:"24pod\u521d\u59cb\u5316\u5bb9\u5668\u914d\u7f6e\u53c2\u6570"},"2.4.pod\u521d\u59cb\u5316\u5bb9\u5668\u914d\u7f6e\u53c2\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"[root@k8s-master ~/k8s_1.19_yaml]\\# kubectl explain pod.spec.initContainers\nKIND:     Pod\nVERSION:  v1\nRESOURCE: initContainers <[]Object>\nDESCRIPTION:\nFIELDS:\n   args <[]string>                      # \u8bbe\u7f6e\u5bb9\u5668\u542f\u52a8\u53c2\u6570\n   command  <[]string>                  # \u8bbe\u7f6e\u5bb9\u5668\u542f\u52a8\u547d\u4ee4\n   env  <[]Object>                      # \u8bbe\u7f6e\u5bb9\u5668\u7684\u73af\u5883\u53d8\u91cf\n   image    <string>                    # \u5bb9\u5668\u7684\u955c\u50cf\n   imagePullPolicy  <string>            # \u5bb9\u5668\u955c\u50cf\u7684\u62c9\u53d6\u7b56\u7565\n   name <string> -required-                 # \u521d\u59cb\u5316\u5bb9\u5668\u7684\u540d\u79f0\n   ports    <[]Object>                      # \u7aef\u53e3\u53f7\u8bbe\u7f6e\n")),(0,o.kt)("h3",{id:"25pod\u8d44\u6e90\u94a9\u5b50\u51fd\u6570\u914d\u7f6e\u53c2\u6570"},"2.5.pod\u8d44\u6e90\u94a9\u5b50\u51fd\u6570\u914d\u7f6e\u53c2\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"KIND:     Pod\nVERSION:  v1\nRESOURCE: lifecycle <Object>\nFIELDS:\n   postStart    <Object>            # \u5b9a\u4e49\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u7684\u94a9\u5b50\u51fd\u6570\n     exec   <Object>                # exec\u547d\u4ee4\u65b9\u5f0f\uff0c\u5728\u5bb9\u5668\u91cc\u9762\u6267\u884c\u76f8\u5e94\u7684\u547d\u4ee4\n       command      <[]string>      # \u6307\u5b9a\u8fd0\u884c\u7684\u547d\u4ee4\n     httpGet    <Object>            # httpGet\u65b9\u5f0f\uff0c\u63a2\u6d4b\u5bb9\u5668\u5e94\u7528\u7684url\n       host <string>                # \u4e3b\u673a\u5730\u5740\uff0c\u4e00\u822c\u5c31\u662fpod\u5730\u5740\n       path <string>                # \u8bf7\u6c42\u7684url\u8def\u5f84\n       port <string>                # \u5e94\u7528\u7aef\u53e3\u53f7\n       scheme   <string>            # \u534f\u8bae\n     tcpSocket  <Object>            # tcpSocket\u65b9\u5f0f\uff0c\u8bbf\u95ee\u5bb9\u5668\u6307\u5b9a\u7684socket\n        host    <string>            # pod\u5730\u5740\n        port    <string>            # \u7aef\u53e3\u53f7\n   preStop  <Object>                # \u5b9a\u671f\u5bb9\u5668\u5173\u95ed\u524d\u6267\u884c\u7684\u94a9\u5b50\u51fd\u6570\n     exec   <Object>                # exec\u547d\u4ee4\u65b9\u5f0f\uff0c\u5728\u5bb9\u5668\u91cc\u9762\u6267\u884c\u76f8\u5e94\u7684\u547d\u4ee4\n     \xb7\xb7\xb7\xb7\xb7\n     httpGet    <Object>            # httpGet\u65b9\u5f0f\uff0c\u63a2\u6d4b\u5bb9\u5668\u5e94\u7528\u7684url\n     \xb7\xb7\xb7\xb7\xb7\n     tcpSocket  <Object>            # tcpSocket\u65b9\u5f0f\uff0c\u8bbf\u95ee\u5bb9\u5668\u6307\u5b9a\u7684socket\n     \xb7\xb7\xb7\xb7\xb7     \n")),(0,o.kt)("h3",{id:"26pod\u8d44\u6e90node\u8c03\u5ea6\u7b56\u7565\u914d\u7f6e\u53c2\u6570"},"2.6.Pod\u8d44\u6e90node\u8c03\u5ea6\u7b56\u7565\u914d\u7f6e\u53c2\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-nodename\n  namespace: dev\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.15\n  nodeName: k8s-node1               # \u6307\u5b9a\u8981\u8c03\u5ea6\u7684node\u8282\u70b9\u540d\u79f0\n")),(0,o.kt)("h3",{id:"27pode\u4eb2\u548c\u6027\u8c03\u5ea6\u914d\u7f6e\u53c2\u6570"},"2.7.Pode\u4eb2\u548c\u6027\u8c03\u5ea6\u914d\u7f6e\u53c2\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"[root@k8s-master ~]\\# kubectl explain pod.spec.affinity.nodeAffinity\nrequiredDuringSchedulingIgnoredDuringExecution  <Object>        # node\u8282\u70b9\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u89c4\u5219\u624d\u53ef\u4ee5\uff0c\u76f8\u5f53\u4e8e\u786c\u9650\u5236\uff0c\uff08\u8fd9\u540d\u5b57\u771f\u662f\u6709\u591f\u957f\u7684\uff09\uff0c\u4e0d\u4f1a\u9a71\u9010\u5df2\u7ecf\u5b58\u5728\u5e76\u8fd0\u884c\u7684pod\nnodeSelectorTerms   <[]Object>              # \u5b9a\u4e49\u8282\u70b9\u9009\u62e9\u5217\u8868\uff0c\u4e5f\u5c31\u662f\u5b9a\u4e49\u5177\u4f53\u5339\u914d\u89c4\u5219\n matchFields  <Object>                      # \u6839\u636e\u8282\u70b9\u5b57\u6bb5\u5217\u51fa\u7684\u8282\u70b9\u9009\u62e9\u5668\u8981\u6c42\u9009\u62e9\n   key                                      # \u952e\n   operator         # \u5173\u7cfb\u7b26\uff0c\u652f\u6301Exists\uff08\u5b58\u5728\uff09\u3001DoesNotExist\uff08\u4e0d\u5b58\u5728\uff09\u3001In\uff08\u662f\u8fd9\u4e2a\u8303\u56f4\uff09\u3001NotIN\uff08\u4e0d\u662f\u8fd9\u4e2a\u8303\u56f4\uff09\u3001Gt\uff08\u5927\u4e8e\uff09\u3001Lt\uff08\u5c0f\u4e8e\uff09\n   values                                       # \u503c\n matchExpressions   <Object>            # \u6839\u636e\u8282\u70b9\u6807\u7b7e\u9009\u62e9\u5668\u8fdb\u884c\u5339\u914d\uff08\u63a8\u8350\u4f7f\u7528\uff09\n   key                              # \u952e\uff0c\u6807\u7b7e\u540d\n   operator                         # \u5173\u7cfb\u7b26\uff0c\u652f\u6301Exists\u3001DoesNotExist\u3001In\u3001NotIN\u3001Gt\u3001Lt\n   values                           # \u503c\uff0c\u6807\u7b7e\u503c\n   \npreferredDuringSchedulingIgnoredDuringExecution <[]Object>      # \u4f18\u5148\u8c03\u5ea6\u5230\u6ee1\u8db3\u6307\u5b9a\u89c4\u5219\u7684Node\uff0c\u76f8\u5f53\u4e8e\u8f6f\u9650\u5236\uff0c\uff08\u8fd9\u540d\u5b57\u771f\u662f\u6709\u591f\u957f\u7684\uff09\uff0c\u4e0d\u4f1a\u9a71\u9010\u5df2\u7ecf\u5b58\u5728\u5e76\u8fd0\u884c\u7684pod\npreference  <Object>                        # \u8282\u70b9\u9009\u62e9\u5668\uff0c\u4e0e\u6743\u91cd\u5173\u8054\uff0c\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\uff0c\u591a\u4e2aprefence\u5982\u4f55\u9009\u62e9\u5c31\u8981\u770b\u6743\u91cd\u8bbe\u7f6e\u7684\u5927\u5c0f\n matchFields  <Object>                      # \u6839\u636e\u8282\u70b9\u5b57\u6bb5\u8fdb\u884c\u5339\u914d\n   key  \n   operator\n   values\n matchExpressions   <Object>                            # \u6839\u636e\u8282\u70b9\u6807\u7b7e\u9009\u62e9\u5668\u8fdb\u884c\u5339\u914d\uff08\u63a8\u8350\u4f7f\u7528\uff09\n   key                                  # \u952e\uff0c\u6807\u7b7e\u540d\n   operator                             # \u5173\u7cfb\u7b26\uff0c\u652f\u6301Exists\u3001DoesNotExist\u3001In\u3001NotIN\u3001Gt\u3001Lt          \n   values                               # \u503c\uff0c\u6807\u7b7e\u503c\nweight                                          # \u8bbe\u7f6e\u6743\u91cd\uff0c\u8303\u56f4\u57281-100\n\n# node\u4eb2\u548c\u793a\u4f8b\u914d\u7f6e\u6e05\u5355\u6587\u4ef6\nspec:\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: disktype\n            operator: In\n            values:\n            - ssd  \n# pod\u4eb2\u548c\u793a\u4f8b\u914d\u7f6e\u6e05\u5355\u6587\u4ef6\nspec:\n  affinity:\n    podAffinity:\n    # podAntiAffinity:                  # pod\u53cd\u4eb2\u548c\u6027\n      requiredDuringSchedulingIgnoredDuringExecution:\n      - labelSelector:\n          # matchLabels:\n          #  app: fronted\n          matchExpressions:\n          - key: security\n            operator: In\n            values:\n            - S1\n        topologyKey: topology.kubernetes.io/zone        # \u4e0d\u5728\u540c\u4e00\u533a\u57df\n        # topologyKey: kubernetes.io/hostname           # \u4e0d\u5728\u540c\u4e00\u4e3b\u673a\n  containers:\n  - name: with-pod-affinity\n    image: k8s.gcr.io/pause:2.0\n")),(0,o.kt)("h2",{id:"3pod\u8d44\u6e90\u63a7\u5236\u5668\u8d44\u6e90"},"3.pod\u8d44\u6e90\u63a7\u5236\u5668\u8d44\u6e90"),(0,o.kt)("h3",{id:"31replicaset\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"3.1.ReplicaSet\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1                     # \u7248\u672c\u53f7\nkind : ReplicaSet                       # \u7c7b\u578b\nmetadata:                               # \u5143\u6570\u636e\n  name :                                # rs\u540d\u79f0\n  namespace :                           # \u6240\u5c5e\u547d\u540d\u7a7a\u95f4\n  labels:                               # \u6807\u7b7e\n    controller : rs\nspec:                                   # \u8be6\u60c5\u63cf\u8ff0\n  replicas: 3                           # \u526f\u672c\u6570\u91cf\n  selector:                             # \u9009\u62e9\u5668\uff0c\u901a\u8fc7\u5b83\u6307\u5b9a\u8be5\u63a7\u5236\u5668\u7ba1\u7406\u54ea\u4e9bpod\n    matchLabels :                       # Labels\u5339\u914d\u914d\u89c4\u5219\n      app: nginx-pod                    # \u5339\u914d\u6807\u7b7eapp\u503c\u4e3anginx-pod\u7684pod\n    matchExpressions:                   # Expressions\u5339\u914d\u89c4\u5219\n      - {key : app, operator : In, values : [nginx-pod ] }      # \u6307\u5b9a\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\n  template:                             # \u6a21\u677f\uff0c\u4e5f\u5c31\u662f\u5b9a\u4e49pod\u7684\u4fe1\u606f\uff0c\u5f53\u526f\u672c\u6570\u91cf\u4e0d\u8db3\u65f6\uff0c\u4f1a\u6839\u636e\u4e0b\u9762\u7684\u6a21\u677f\u521b\u5efapod\u526f\u672c\n    metadata :                          # \u5143\u6570\u636e\n      labels :                          # \u5b9a\u4e49\u6807\u7b7e\u4e0ers\u8fdb\u884c\u5173\u8054\n        app: nginx-pod              \n    spec:                               # pod\u5c5e\u6027\n      containers:                       # \u5b9a\u4e49\u5bb9\u5668  \n      - name : nginx                        # \u5bb9\u5668\u540d\u79f0\n        image: nginx :1.17.1                # \u955c\u50cf\n        ports :                             # \u7aef\u53e3\u53f7\n        - containerPort : 80\n")),(0,o.kt)("h3",{id:"32deployment\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"3.2.Deployment\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1      # \u7248\u672c\u53f7\nkind: Deployment        # \u63a7\u5236\u5668\u7c7b\u578b\nmetadata:               # \u5b9a\u4e49\u5143\u6570\u636e\n  name:                     # deployment\u8d44\u6e90\u540d\u79f0\n  namespace:                    # \u6240\u5c5e\u547d\u540d\u7a7a\u95f4\n  labels:                   # \u5b9a\u4e49\u6807\u7b7e\n    controller: deploy\nspec:                           # \u5b9a\u4e49\u8d44\u6e90\u5c5e\u6027\n  replicas: 3                   # \u526f\u672c\u6570\u91cf\n  revisionHistoryLimit: 3        # \u4fdd\u7559\u5386\u53f2\u7248\u672c\uff0c\u9ed8\u8ba4\u662f1\u65e5\n  paused: false                 # \u6682\u505c\u90e8\u7f72\uff0c\u9ed8\u8ba4\u662ffalse\uff0c\u4e5f\u5c31\u662fdeployment\u8d44\u6e90\u521b\u5efa\u597d\u4e4b\u540e\uff0c\u662f\u5426\u7acb\u523b\u8fd0\u884cpod\uff0c\u5982\u679c\u8bbe\u7f6etrue\uff0cdeployment\u8d44\u6e90\u521b\u5efa\u597d\u4e0d\u4f1a\u7acb\u5373\u8fd0\u884cpod\n  progressDeadlineSeconds: 688           # \u90e8\u7f72\u8d85\u65f6\u65f6\u95f4(s\uff09\uff0c\u9ed8\u8ba4\u662f68\u65e5\n  tolerations:                  # \u5bb9\u5fcd\u5ea6\n  - key: "key1"\n    operator: "Equal"           # \u64cd\u4f5c\u7b26\u4e3aExists\u65f6\uff0c\u4e0d\u80fd\u6307\u5b9avalue\u503c\n    value: "value1"\n    effect: "NoSchedule"            # \u6b64\u5916\u8fd8\u6709NoExecute(\u9a71\u9010\u5f71\u54cd\u76ee\u524d\u8fd0\u884c\u7740\u7684pod)\u548cPreferNoschedule(\u5c3d\u91cf\u963b\u6b62pod\u8c03\u5ea6\u5230\u8be5\u8282\u70b9\uff0c\u9664\u975e\u6ca1\u6709\u5176\u4ed6\u8282\u70b9\u53ef\u8c03\u7528\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u5907\u80cexd.)\n    tolerationSeconds: 6000         # \u7528\u4e8e\u5f53\u67d0\u4e2apod\u8fd0\u884c\u6240\u5728\u7684\u8282\u70b9\u53d8\u6210unready\u6216\u8005unreachable\u72b6\u6001\u65f6\uff0ck8s\u53ef\u4ee5\u7b49\u5f85\u8be5pod\u88ab\u8c03\u5ea6\u5230\u5176\u4ed6\u8282\u70b9\u7684\u6700\u957f\u7b49\u5f85\u65f6\u95f4\uff0c\u4e00\u822c\u4e0eeffect\u7684NoExecute\u5171\u540c\u4f7f\u7528\n  strategy:                 # \u7b56\u7565\n    type: RollingUpdate         # \u6eda\u52a8\u66f4\u65b0\u7b56\u7565\n    rollingUpdate:              # \u6eda\u52a8\u66f4\u65b0\n      maxSurge: 30%                 # \u6700\u5927\u989d\u5916\u53ef\u4ee5\u5b58\u5728\u7684\u526f\u672c\u6570\uff0c\u53ef\u4ee5\u4e3a\u767e\u5206\u6bd4\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u6574\u6570\n      maxUn available: 30%           # \u6700\u5927\u4e0d\u53ef\u7528\u72b6\u6001\u7684 Pod \u7684\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u4e3a\u767e\u5206\u6bd4\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u6574\u6570\n  selector:                         # \u9009\u62e9\u5668\uff0c\u901a\u8fc7\u5b83\u6307\u5b9a\u8be5\u63a7\u5236\u5668\u7ba1\u7406\u54ea\u4e9bpod\n    matchLabels:                    # Labels\u5339\u914d\u89c4\u5219\n      app: nginx-pod\n    matchExpressions:                   #  Expressions\u5339\u914d\u89c4\u5219\n      - {key: app, operator: In, values: [nginx-pod] }\n  template:                         # \u6a21\u677f\uff0c\u5f53\u526f\u672c\u6570\u91cf\u4e0d\u8db3\u65f6\uff0c\u4f1a\u6839\u636e\u4e0b\u9762\u7684\u6a21\u677f\u521b\u5efapod\u526f\u672c\n      metadata:\n        labels:\n          app: nginx-podspec:\n      containers:\n      - name: nginx\n        image: nginx:1.17.1ports:\n        ports:\n        - containerPort: 80\n')),(0,o.kt)("h3",{id:"33hpa\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"3.3.HPA\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: autoscaling/v1                  # hpa\u652f\u6301\u7684\u7248\u672c\u53f7\nkind: HorizontalPodAutoscaler               # \u7c7b\u578b\u4e3ahpa\nmetadata:                                   # \u5143\u6570\u636e\n  name: hpa-nginx                           # hpa\u540d\u79f0\n  namespace: dev                            # \u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\nspec:                                       # \u5c5e\u6027\n  minReplicas: 1                                # \u6700\u5c11\u5b58\u6d3b\u7684pod\u6570\u91cf\n  maxReplicas: 10                               # \u6700\u591a\u5b58\u6d3b\u7684pod\u6570\u91cf\n  targetCPUUtilizationPercentage: 85    # \u5f53CPU\u4f7f\u7528\u7387\u8fbe\u5230\u591a\u5c11\u6307\u6807\u65f6\u89e6\u53d1\u89c4\u5219\uff0c\u8fd9\u91cc\u768485\u8868\u793a85%\uff0c\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u5b9e\u9645\u751f\u4ea7\u4e2d\u91c7\u752880-85%\n  scaleTargetRef:                               # \u58f0\u660e\u5bf9\u90a3\u4e2a\u8d44\u6e90\u8fdb\u884c\u63a7\u5236\n    apiVersion: apps/v1                         # \u8d44\u6e90\u7684api\u7248\u672c\n    kind: Deployment                            # \u8d44\u6e90\u7c7b\u578b\n    name: deployment-nginx                      # \u8d44\u6e90\u540d\u79f0\n")),(0,o.kt)("h3",{id:"34daemonset\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"3.4.DaemonSet\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiversion: apps/v1                  # \u7248\u672c\u53f7\nkind: DaemonSet                     # \u7c7b\u578b\nmetadata:                           # \u5143\u6570\u636e\n  name:                             # \u540d\u79f0\n  namespace:                        # \u6240\u5c5e\u547d\u540d\u7a7a\u95f4\n  labels:                           # \u6807\u7b7e\n    controller: daemonset\nspec:                               # \u5c5e\u6027\n  revisionHistoryLimit: 3             # \u4fdd\u7559\u5386\u53f2\u7248\u672c\n  updateStrategy :                   # \u66f4\u65b0\u7b56\u7565\n    type: RollingUpdate               # \u6eda\u52a8\u66f4\u65b0\n    rollingUpdate:                    # \u6eda\u52a8\u66f4\u65b0\u7b56\u7565\n      maxUnavailable: 1                # \u6700\u5927\u4e0d\u53ef\u7528\u72b6\u6001\u7684 Pod\u7684\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u4e3a\u767e\u5206\u6bd4\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u6574\u6570\n  selector :                          # \u9009\u62e9\u5668,\u901a\u8fc7\u5b83\u6307\u5b9a\u8be5\u63a7\u5236\u5668\u7ba1\u7406\u54ea\u4e9bpod\n    matchLabels:                       # Labels\u5339\u914d\u89c4\u5219\n      app: nginx-pod\n    matchExpressions:                   # Expressions\u5339\u914d\u89c4\u5219\n    - {key: app, operator: In, values: [nginx-pod ]}\n  template:                             # \u6a21\u677f\uff0c\u5f53\u526f\u672c\u6570\u91cf\u4e0d\u8db3\u65f6\uff0c\u4f1a\u6839\u636e\u4e0b\u9762\u7684\u6a21\u677f\u521b\u5efapod\u526f\u672c\n    metadata:\n      labels:\n        app: nginx-pod\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.17.1\n        ports:\n        - containerPort: 80\n")),(0,o.kt)("h3",{id:"35job\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"3.5.Job\u63a7\u5236\u5668\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: batch/v1                 # \u7248\u672c\u53f7\nkind: Job                           # \u7c7b\u578b\nmetadata:                           # \u5143\u6570\u636e\n  name:                             # \u540d\u79f0\n  namespace:                        # \u6240\u5c5e\u547d\u540d\u7a7a\u95f4\n  labels :                          # \u6807\u7b7e\n    controller: job\nspec:                               # \u8be6\u60c5\u63cf\u8ff0\n  completions: 1                    # \u6307\u5b9ajob\u6210\u529f\u8fd0\u884c\u9700\u8981Pods\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c:1\n  parallelism: 1                    # \u6307\u5b9ajob\u5728\u4efb\u4e00\u65f6\u523b\u5e94\u8be5\u5e76\u53d1\u8fd0\u884cPods\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u503c:1\n  activeDeadlineSeconds: 30          # \u6307\u5b9ajob\u53ef\u8fd0\u884c\u7684\u65f6\u95f4\u671f\u9650\uff0c\u8d85\u8fc7\u65f6\u95f4\u8fd8\u672a\u7ed3\u675f\uff0c\u7cfb\u7edf\u5c06\u4f1a\u5c1d\u8bd5\u8fdb\u884c\u7ec8\u6b62\u3002\n  backoffLimit: 6                   # \u6307\u5b9ajob\u5931\u8d25\u540e\u8fdb\u884c\u91cd\u8bd5\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u662f6\n  manualSelector: true              # \u662f\u5426\u53ef\u4ee5\u4f7f\u7528selector\u9009\u62e9\u5668\u9009\u62e9pod\uff0c\u9ed8\u8ba4\u662ffalse\n  selector:                         # \u9009\u62e9\u5668,\u901a\u8fc7\u5b83\u6307\u5b9a\u8be5\u63a7\u5236\u5668\u7ba1\u7406\u54ea\u4e9bpod\n    matchLabels:                    # Labels\u5339\u914d\u89c4\u5219\n      app: counter-pod\n    matchExpressions:               # Expressions[\u5339\u914d\u89c4\u5219\n    - {key: app, operator: In, values: [ counter-pod]}\n  template:                         # \u6a21\u677f,\u5f53\u526f\u672c\u6570\u91cf\u4e0d\u8db3\u65f6,\u4f1a\u6839\u636e\u4e0b\u9762\u7684\u6a21\u677f\u521b\u5efapod\u526f\u672c\n    metadata:\n      labels:\n        app: counter-pod\n    spec:\n      restartPolicy: Never          # \u91cd\u542f\u7b56\u7565\u53ea\u80fd\u8bbe\u7f6e\u4e3aNever\u6216\u8005OnFailure\n      containers:\n      - name: counter\n        image: busybox: 1.30\n        command: [ "bin/sh" , "-c" , "for i in 9 8 7 654 3 2 1; do echo $i;sleep 2;done" ]\n')),(0,o.kt)("h3",{id:"36cronjob\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"3.6.CronJob\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: batch/v1beta1            # \u7248\u672c\u53f7\nkind: CronJob                       # \u7c7b\u578b\nmetadata:                           # \u5143\u6570\u636e\nname:                           # \u540d\u79f0\nnamespace:                      # \u6240\u5c5e\u547d\u540d\u7a7a\u95f4\nlabels:                         # \u6807\u7b7e\n controller: cronjob\nspec:                               # \u5c5e\u6027\nschedule:                       # cron\u683c\u5f0f\u7684\u4f5c\u4e1a\u8c03\u5ea6\u8fd0\u884c\u65f6\u95f4\u70b9,\u7528\u4e8e\u63a7\u5236\u4efb\u52a1\u5728\u4ec0\u4e48\u65f6\u95f4\u6267\u884c\nconcurrencyPolicy:              # \u5e76\u53d1\u6267\u884c\u7b56\u7565\uff0c\u7528\u4e8e\u5b9a\u4e49\u524d\u4e00\u6b21\u4f5c\u4e1a\u8fd0\u884c\u5c1a\u672a\u5b8c\u6210\u65f6\u662f\u5426\u8fd0\u884c\u4e0b\u4e00\u6b21\u7684\u4f5c\u4e1a\nfailedJobHistoryLimit:          # \u4e3a\u5931\u8d25\u7684\u4efb\u52a1\u6267\u884c\u4fdd\u7559\u7684\u5386\u53f2\u8bb0\u5f55\u6570\uff0c\u9ed8\u8ba4\u4e3a1\nsuccessfulJobHistoryLimit:      # \u4e3a\u6210\u529f\u7684\u4efb\u52a1\u6267\u884c\u4fdd\u7559\u7684\u5386\u53f2\u8bb0\u5f55\u6570\uff0c\u9ed8\u8ba4\u4e3a3\nstartingDeadlineSeconds:            # \u542f\u52a8\u4f5c\u4e1a\u9519\u8bef\u7684\u8d85\u65f6\u65f6\u957f\njobTemplate:                        # job\u63a7\u5236\u5668\u6a21\u677f\uff0c\u7528\u4e8e\u4e3acronjob\u63a7\u5236\u5668\u751f\u6210job\u5bf9\u8c61\uff0c\u4e0b\u9762\u5176\u5b9e\u5c31\u662fjob\u7684\u5b9a\u4e49\n metadata:\n spec:\n   completions: 1\n   parallelism: 1\n   activeDeadlineSeconds: 30\n   backoffLimit: 6\n   manualSelector: true\n   selector:\n     matchLabels:\n       app: counter-pod\n     matchExpressions:              # \u89c4\u5219\n        - { key: app, operator: In, values: [counter-pod ] }\n      template:\n        metadata:\n          labels:\n            app: counter-pod\n        spec:\n          restartPolicy: Never\n          containers:\n          - name: counter\n            image: busybox: 1.30\n            command: [ "bin/sh" , "-c" , " for i in 98 7 654 3 2 1; do echo $i;sleep 2 ;done" ]\n')),(0,o.kt)("h3",{id:"37statefulset\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"3.7.StatefulSet\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1                         # api\u7248\u672c\nkind: StatefulSet                           # \u8d44\u6e90\u7c7b\u578b\nmetadata:                                   # \u5b9a\u4e49\u5143\u6570\u636e\n  name: remote-storage                      # \u8d44\u6e90\u540d\u79f0\n  namespace: kube-system                    # \u6240\u5728\u7684namespace\nspec:                                   # \u5b9a\u4e49\u5c5e\u6027\n  selector:                             # \u5b9a\u4e49\u6807\u7b7e\u9009\u62e9\u5668\uff0c\u5173\u8054pod\u7684\u6807\u7b7e\n    matchLabels:                    \n      app: remote\n  serviceName: "remote-storage"             # \u5b9a\u4e49serviceName\uff0c\u8fd9\u4e2aserviceName\u5c06\u4f1a\u6210\u4e3a\u4e3b\u673a\u540d\n  replicas: 1                               # \u526f\u672c\u6570\n  template:                                 # pod\u6a21\u677f\u4fe1\u606f\n    metadata:\n      labels:\n        app: remote\n    spec:\n      containers:\n      - name: remote-storage\n        image: remote_storage_adapter:v2\n        ports:\n        - containerPort: 9201\n          name: remote\n')),(0,o.kt)("h2",{id:"4\u670d\u52a1\u53d1\u73b0\u8d44\u6e90"},"4.\u670d\u52a1\u53d1\u73b0\u8d44\u6e90"),(0,o.kt)("h3",{id:"41service\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"4.1.service\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"kind: Service                           # \u8d44\u6e90\u7c7b\u578b\napiVersion: v1                          # \u8d44\u6e90\u7248\u672c\nmetadata:                               # \u5143\u6570\u636e\n  name: service                         # \u8d44\u6e90\u540d\u79f0\n  namespace: dev                        # \u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\nspec:                                   # \u5c5e\u6027\n  selector:                             # \u6807\u7b7e\u9009\u62e9\u5668\uff0c\u7528\u4e8e\u786e\u5b9a\u5f53\u524dservice\u4ee3\u7406\u54ea\u4e9bpod\n    app: nginx                          # pod\u7684\u6807\u7b7e\n  type:                                 # Service\u7c7b\u578b\uff0c \u6307\u5b9aservice\u7684\u8bbf\u95ee\u65b9\u5f0f\n  clusterIP:                            # \u865a\u62df\u670d\u52a1\u7684ip\u5730\u5740\uff0c\u5373service\u5730\u5740\n  sessionAffinity:                      # session\u4eb2\u548c\u6027\uff0c\u652f\u6301ClientIP\u3001 None\u4e24\u4e2a\u9009\u9879\n  ports:                                # \u7aef\u53e3\u4fe1\u606f \n    protocol: TCP\n    port: 3017                          # service\u7aef\u53e3\n    targetPort: 5003                     # pod\u7aef\u53e3\n    nodePort: 31122                     # \u6620\u5c04\u7684\u4e3b\u673a\u7aef\u53e3\n\n")),(0,o.kt)("h3",{id:"42ingress\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"4.2.ingress\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: ingress-https\n  namespace: dev\nspec:\n  ingressClassName: <string>            # \u5b9a\u4e49\u4f7f\u7528\u54ea\u79cd\u7c7b\u578b\u7684ingress controllers\n  tls:                              # \u5b9a\u4e49\u57df\u540d\u7ed1\u5b9a\u8bc1\u4e66\u914d\u7f6e\uff0c\u53ea\u6709\u901a\u8fc7https\u8bbf\u95ee\u7684\u65b9\u5f0f\u624d\u9700\u8981\u914d\u7f6e\n    - hosts:                        # \u5b9a\u4e49\u7a0b\u5e8f\u7684\u57df\u540d\u5217\u8868\n      - nginx.jiangxl.com\n      - tomcat.jiangxl.com\n      secretName: tls-secret        # \u5173\u8054\u5bf9\u5e94\u8bc1\u4e66\u7684secret\u8d44\u6e90\n  rules:                            # \u5b9a\u4e49ingress\u89c4\u5219\uff0c\u7528\u4e8e\u5173\u8054\u5bf9\u5e94\u7684service\u8d44\u6e90\n  - host: nginx.jiangxl.com             # \u5e94\u7528\u57df\u540d\n    http:                               # http\u65b9\u5f0f\n      paths:                            # \u5b9a\u4e49\u8981\u8bbf\u95ee\u7684\u8def\u5f84\n      - path: /                         # \u5b9a\u4e49\u8bbf\u95ee\u8def\u5f84\n        backend:                        # \u5173\u8054\u5bf9\u5e94\u7684service\u8d44\u6e90\n          serviceName: nginx-service        # \u5bf9\u5e94\u7684service\u540d\u79f0\n          servicePort: 80                   # \u5bf9\u5e94\u7684service\u7aef\u53e3\n\n")),(0,o.kt)("h2",{id:"5\u6570\u636e\u5b58\u50a8\u8d44\u6e90"},"5.\u6570\u636e\u5b58\u50a8\u8d44\u6e90"),(0,o.kt)("h3",{id:"51emptydir\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"5.1.EmptyDir\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: volume-emptydir\n  namespace: dev\nspec:\n  containers:                               # \u5b9a\u4e49\u5bb9\u5668\u5217\u8868\n  - name: nginx                             # \u5bb9\u5668\u7684\u540d\u79f0\n    image: nginx:1.17.1                     # \u5bb9\u5668\u4f7f\u7528\u7684\u955c\u50cf\u7248\u672c\n    ports:                                  # \u5b9a\u4e49\u7aef\u53e3\u53f7\n    - containerPort: 80\n    volumeMounts:                           # \u5b9a\u4e49volume\u6302\u8f7d\u4fe1\u606f\uff0c\u5c06logs-volume\u6302\u8f7d\u5230\u5bb9\u5668\u7684/var/log/nginx\u8def\u5f84\n    - name: logs-volume                     # volume\u7684\u540d\u79f0\n      mountPath: /var/log/nginx             # \u6302\u8f7d\u5230\u5bb9\u5668\u7684\u6307\u5b9a\u8def\u5f84\n  - name: busybox\n    image: busybox:1.30\n    command: ["/bin/sh","-c","tail -f /logs/access.log"]        # busybox\u521d\u59cb\u547d\u4ee4\uff0c\u52a8\u6001\u8bfb\u53d6volume\u6302\u8f7d\u8def\u5f84\u4e0b\u7684\u6587\u4ef6\u5185\u5bb9\n    volumeMounts:                           # \u5c06logs-volume\u6302\u8f7d\u5230\u5bb9\u5668\u7684/logs\u8def\u5f84\n    - name: logs-volume\n      mountPath: /logs\n  volumes:                              # \u5b9a\u4e49volume\u4fe1\u606f\n  - name: logs-volume                   # volume\u540d\u79f0\n    emptyDir: {}                        # \u4f7f\u7528\u7684volume\u7c7b\u578b\u4e3aemptydir\uff0c{}\u4e0d\u53ef\u7701\u7565\n')),(0,o.kt)("h3",{id:"52hostpath\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"5.2.HostPath\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'[root@k8s-master ~/k8s_1.19_yaml]\\# vim volume-hostpath.yaml \napiVersion: v1\nkind: Pod\nmetadata:\n  name: volume-hostpath\n  namespace: dev\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.17.1\n    ports:\n    - containerPort: 80\n    volumeMounts:\n    - name: logs-volume\n      mountPath: /var/log/nginx\n  - name: busybox\n    image: busybox:1.30\n    command: ["/bin/sh","-c","tail -f /logs/access.log"]\n    volumeMounts:               # \u5b9a\u4e49\u6302\u8f7d\u90a3\u4e9bvolume\u5377\n    - name: logs-volume             # volume\u540d\u79f0\n      mountPath: /logs              # \u6302\u8f7d\u5230\u5bb9\u5668\u7684\u54ea\u4e2a\u8def\u5f84\n  volumes:\n  - name: logs-volume\n    hostPath:                   # \u6307\u5b9avolume\u7c7b\u578b\u4e3ahostPath\n      path: /root/logs              # \u6307\u5b9anode\u8282\u70b9\u4e0a\u7684\u8def\u5f84\uff0c\u4e3a\u5bb9\u5668\u63d0\u4f9b\u6302\u8f7d\u70b9\n      type: DirectoryOrCreate           # \u9488\u5bf9\u8def\u5f84\u505a\u5f97\u7c7b\u578b\uff0cDirectoryOrCreate\u8868\u793a\u5f53\u8def\u5f84\u4e0d\u5b58\u5728\u65f6\u5219\u521b\u5efa\n')),(0,o.kt)("h3",{id:"53nfs\u7c7b\u578b\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"5.3.NFS\u7c7b\u578b\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: volume-nfs\n  namespace: dev\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.17.1\n    ports:\n    - containerPort: 80\n    volumeMounts:\n    - name: logs-volume\n      mountPath: /var/log/nginx\n  - name: busybox\n    image: busybox:1.30\n    command: ["/bin/sh","-c","tail -f /logs/access.log"]\n    volumeMounts:\n    - name: logs-volume\n      mountPath: /logs  \n  volumes:                              # \u5b9a\u4e49\u5b58\u50a8\u5377\n  - name: logs-volume                       # \u6307\u5b9a\u5b58\u50a8\u5377\u7684\u540d\u79f0\n    nfs:                                    # \u7c7b\u578b\u4e3anfs\n      server: 192.168.81.210                    # nfs\u670d\u52a1\u5668\u5730\u5740\n      path: /data/k8s_data                      # nfs\u63d0\u4f9b\u7684\u5171\u4eab\u8def\u5f84\n')),(0,o.kt)("h3",{id:"54pv\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"5.4.PV\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv1\nspec:\n  nfs:                              # \u5b58\u50a8\u7c7b\u578b\uff0c\u4e0d\u540c\u7684\u5b58\u50a8\u7c7b\u578b\u914d\u7f6e\u90fd\u4e0d\u76f8\u540c\uff0cnfs\u5219\u586b\u5199nfs\n  capacity:                             # \u5b58\u50a8\u80fd\u529b\uff0c\u76ee\u524d\u53ea\u652f\u6301\u5b58\u50a8\u7a7a\u95f4\u7684\u8bbe\u7f6e\n  storage: 2Gi                      # \u5177\u4f53\u7684\u5b58\u50a8\u5927\u5c0f\n  accessModes:                          # \u8bbf\u95ee\u6a21\u5f0f\n  storageClassName:                         # \u5b58\u50a8\u7c7b\u522b\n  persistentVolumeReclaimPolicy:                # \u56de\u6536\u7b56\u7565\n")),(0,o.kt)("h3",{id:"55pvc\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"5.5.PVC\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc\n  namespace: dev\nspec:\n  accessModes:              # \u8bbf\u95ee\u6a21\u5f0f\n  selector:                     # \u91c7\u7528\u6807\u7b7e\u9009\u62e9\u5177\u4f53\u7684pv\n  storageClassName:                 # \u5b58\u50a8\u7c7b\u522b\n  resources:                    # \u8bf7\u6c42\u7a7a\u95f4\n    requests:\n      storage: 5Gi              # \u5177\u4f53\u7684\u8bf7\u6c42\u5927\u5c0f\n")),(0,o.kt)("h2",{id:"6\u914d\u7f6e\u8d44\u6e90"},"6.\u914d\u7f6e\u8d44\u6e90"),(0,o.kt)("h3",{id:"61configmap\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"6.1.configmap\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: configmap\n  namespace: dev\ndata:                       # configmap\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\uff0c\u4e0d\u518d\u6709spec\uff0c\u800c\u662fdata\n  filename1: |                  # \u6587\u4ef6\u548c\u5185\u5bb9\u7684\u5173\u7cfb\u76f8\u5f53\u4e8e\u4e00\u4e2a\u952e\u503c\u5bf9\uff0cfilename\u8868\u793a\u6587\u4ef6\u7684\u540d\u79f0 |\u5fc5\u987b\u8981\u6709\uff0c\u56fa\u5b9a\u5199\u6cd5\n    neirong1                        # \u5177\u4f53\u7684\u5185\u5bb9\uff0c\u6240\u6709\u5185\u5bb9\u90fd\u8981\u548cfilename\u4fdd\u6301\u81f3\u5c112\u4e2a\u7a7a\u683c\u7684\u5bf9\u9f50\n    neirong2\n  filename2: |              # configmap\u53ef\u4ee5\u540c\u65f6\u5b9a\u4e49\u591a\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u63a5\u7740\u5f80\u4e0b\u5199\u5373\u53ef\uff0c\u4e00\u822c\u8fd8\u662f\u4e00\u4e2acm\u5b9a\u4e49\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u56e0\u4e3apod\u6302\u8f7d\u662f\u4ee5\u76ee\u5f55\u8fdb\u884c\u6302\u8f7d\u7684\uff0c\u9664\u975e\u4e24\u4e2a\u6587\u4ef6\u90fd\u5728\u4e00\u4e2a\u8def\u5f84\n    xxxxxxxx\n \n")),(0,o.kt)("h3",{id:"62secret\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"6.2.secret\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Secret                    # \u8d44\u6e90\u7c7b\u578b\u4e3aSecret\nmetadata:\n  name: admin-secret\n  namespace: dev\ntype: Opaque                    # \u7c7b\u578b\u4e3aOpaque\uff0cOpaque\u4e3b\u8981\u5b58\u50a8base64\u52a0\u5bc6\u540e\u7684\u5bc6\u7801\u6587\u4ef6\ndata:                           # \u5b9a\u4e49\u6570\u636e\n  username: YWRtaW4=            # username\u4e3a\u6587\u4ef6\u540d\u79f0\uff0cYWRtaW4=\u4e3a\u6587\u4ef6\u5185\u5bb9\n  password: MTIzNDU2\n")),(0,o.kt)("h2",{id:"7rbac\u8bbf\u95ee\u6388\u6743\u8d44\u6e90"},"7.RBAC\u8bbf\u95ee\u6388\u6743\u8d44\u6e90"),(0,o.kt)("h3",{id:"71role\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"7.1.Role\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# Role\u53ea\u80fd\u5bf9\u547d\u540d\u7a7a\u95f4\u5185\u7684\u8d44\u6e90\u8fdb\u884c\u6388\u6743\uff0c\u9700\u8981\u6307\u5b9anamespace\n\napiVersion: rbac.authorization.k8s.io/v1beta1               # \u8d44\u6e90api\u5730\u5740\nkind: Role                                              # \u63a7\u5236\u5668\u7c7b\u578b\nmetadata:                                               # \u5143\u6570\u636e\n  name: authorization-role                              # \u8d44\u6e90\u540d\u79f0\n  namespace: dev                                        # \u8d44\u6e90\u6240\u5728\u547d\u540d\u7a7a\u95f4\nrules:                                                  # \u5b9a\u4e49\u89d2\u8272\n- apiGroups: [""]                                       # \u652f\u6301\u7684api\u7ec4\u5217\u8868\uff0c""\u7a7a\u5b57\u7b26\u4e32\u8868\u793a\u6838\u5fc3API\u7fa4\uff0c\u5199\u4ec0\u4e48api\u5c31\u5bf9\u4ec0\u4e48api\u8fdb\u884c\u64cd\u4f5c\n  resources: ["pods"]                                       # \u652f\u6301\u7684\u8d44\u6e90\u5bf9\u8c61\u5217\u8868\uff0c\u5bf9\u90a3\u4e9b\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\n  verbs: ["get","watch","list"]                         # \u5141\u8bb8\u5bf9\u8d44\u6e90\u5bf9\u8c61\u7684\u64cd\u4f5c\u6743\u9650\n')),(0,o.kt)("h3",{id:"72clusterrole\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"7.2.ClusterRole\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# ClusterRole\u53ef\u4ee5\u5bf9\u96c6\u7fa4\u5185\u6240\u6709namespace\u4e0b\u7684\u8d44\u6e90\u8fdb\u884c\u6388\u6743\uff0c\u8de8namespace\u3001\u975e\u8d44\u6e90\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8fdb\u884c\u6388\u6743\n\napiVersion: rbac.authorization.k8s.io/v1beta1               # \u8d44\u6e90api\u5730\u5740\nkind: CLusterRole                                       # \u63a7\u5236\u5668\u7c7b\u578b\nmetadata:                                               # \u5143\u6570\u636e\n  name: authorization-clusterrole                       # \u8d44\u6e90\u540d\u79f0\nrules:                                                  # \u5b9a\u4e49\u89d2\u8272\n- apiGroups: [""]                                   # \u652f\u6301\u7684api\u7ec4\u5217\u8868\uff0c""\u7a7a\u5b57\u7b26\u4e32\u8868\u793a\u6838\u5fc3API\u7fa4\uff0c\u5199\u4ec0\u4e48api\u5c31\u5bf9\u4ec0\u4e48api\u8fdb\u884c\u64cd\u4f5c\n  resources: ["pods"]                                       # \u652f\u6301\u7684\u8d44\u6e90\u5bf9\u8c61\u5217\u8868\uff0c\u5bf9\u90a3\u4e9b\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\n  verbs: ["get","watch","list"]                         # \u5141\u8bb8\u5bf9\u8d44\u6e90\u5bf9\u8c61\u7684\u64cd\u4f5c\u6743\u9650\n')),(0,o.kt)("h3",{id:"73rolebinding\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"7.3.RoleBinding\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# RoleBinding\u53ef\u4ee5\u5c06subjects\u5b9a\u4e49\u7684\u7528\u6237\u7ed1\u5b9a\u5728\u540c\u4e00namespace\u4e2d\u7684role\u89d2\u8272\u4e0a\uff0c\u4ec5\u4ec5\u53ea\u80fd\u662f\u540c\u4e00namespace\u79cd\u7684role\n\napiVersion: rbac.authorization.k8s.io/v1beta1           # \u8d44\u6e90api\u5730\u5740\nkind: RoleBinding                                       # \u63a7\u5236\u5668\u7c7b\u578b\nmetadata:                                               # \u5143\u6570\u636e\n  name: authorization-rolebinding                       # \u63a7\u5236\u5668\u540d\u79f0\n  namespace: dev                                        # \u6240\u5728\u7684namespace\nsubjects:                                               # \u5173\u8054\u7528\u6237\u4fe1\u606f\n- kind: User                                            # \u7528\u6237\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u662fuser\u3001group\u3001serviceaccount\n  name: jiangxl                                         # \u5bf9\u5e94\u7684\u7528\u6237\u540d\u79f0\n  apiGroup: rbac.authorization.k8s.io               # api\u7ec4\uff0c\u6301\u6709\u5f15\u7528\u4e3b\u9898\u7684api\u7ec4\uff0c\u9ed8\u8ba4\u4e3arbac.authorization.k8s.io\n  namespace: dev                                        # \u7528\u6237\u80fd\u63a7\u5236\u7684namespace\nroleRef:                                            # \u5173\u8054\u89d2\u8272\u4fe1\u606f\n  kind: Role                                        # \u7c7b\u578b\u4e3a\u89d2\u8272\n  name: authorization-role                              # \u5bf9\u5e94\u7684role\u540d\u79f0\n  apiGroup: rbac.authorization.k8s.io               # api\u7ec4\uff0c\u6301\u6709\u5f15\u7528\u4e3b\u9898\u7684api\u7ec4\uff0c\u9ed8\u8ba4\u4e3arbac.authorization.k8s.io\n  \n# \u6574\u4e2a\u8fde\u8d77\u6765\u7684\u610f\u601d\u4e3a\u7528\u6237jiangxl\u4e0eauthorization-role\u89d2\u8272\u8fdb\u884c\u7ed1\u5b9a\uff0c\u6301\u6709\u5bf9dev\u547d\u540d\u7a7a\u95f4\u4e0bpod\u8d44\u6e90get\u3001list\u3001watch\u6743\u9650\n")),(0,o.kt)("h3",{id:"74clusterrolebinding\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"7.4.CLusterRoleBinding\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# ClusterRoleBinding\u53ef\u4ee5\u5728\u6574\u4e2a\u96c6\u7fa4\u7ea7\u522b\u548c\u6240\u6709namespace\u4e2d\uff0c\u5c06\u7279\u5b9a\u7684subject\u4e0eClusterRoleBinding\u8fdb\u884c\u7ed1\u5b9a\u6388\u4e88\u6743\u9650\uff0c\u8fd9\u6837\u4e00\u6765\u8fd9\u4e2a\u89d2\u8272\u5c31\u62e5\u6709\u5c31\u96c6\u7fa4\u7ea7\u522b\u8d44\u6e90\u7684\u64cd\u4f5c\u6743\u9650\n\napiVersion: rbac.authorization.k8s.io/v1beta1           # \u8d44\u6e90api\u5730\u5740\nkind: RoleBinding                                       # \u63a7\u5236\u5668\u7c7b\u578b\nmetadata:                                               # \u5143\u6570\u636e\n  name: authorization-rolebinding                       # \u63a7\u5236\u5668\u540d\u79f0\nsubjects:                                               # \u5173\u8054\u7528\u6237\u4fe1\u606f\n- kind: User                                            # \u7528\u6237\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u662fuser\u3001group\u3001serviceaccount\n  name: jiangxl                                         # \u5bf9\u5e94\u7684\u7528\u6237\u540d\u79f0\n  apiGroup: rbac.authorization.k8s.io               # api\u7ec4\uff0c\u6301\u6709\u5f15\u7528\u4e3b\u9898\u7684api\u7ec4\uff0c\u9ed8\u8ba4\u4e3arbac.authorization.k8s.io\nroleRef:                                            # \u5173\u8054\u89d2\u8272\u4fe1\u606f\n  kind: ClusterRole                                     # \u7c7b\u578b\u4e3a\u96c6\u7fa4\u89d2\u8272\n  name: authorization-clusterrole                               # \u5bf9\u5e94\u7684role\u540d\u79f0\n  apiGroup: rbac.authorization.k8s.io               # api\u7ec4\uff0c\u6301\u6709\u5f15\u7528\u4e3b\u9898\u7684api\u7ec4\uff0c\u9ed8\u8ba4\u4e3arbac.authorization.k8s.io\n\n# \u6574\u4e2a\u8fde\u8d77\u6765\u7684\u610f\u601d\u4e3a\u7528\u6237jiangxl\u4e0eauthorization-role\u89d2\u8272\u8fdb\u884c\u7ed1\u5b9a\uff0c\u6301\u6709\u5bf9\u96c6\u7fa4\u7ea7\u522b\u4ee5\u53ca\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e0bpod\u8d44\u6e90get\u3001list\u3001watch\u6743\u9650\n")),(0,o.kt)("h2",{id:"8-limitrangeresourcequota\u8d44\u6e90\u9650\u5236"},"8. LimitRange/ResourceQuota\u8d44\u6e90\u9650\u5236"),(0,o.kt)("p",null,"\u540d\u79f0\u7a7a\u95f4\u7ea7\u522b\u8d44\u6e90\uff0c\u521b\u5efa\u8be5\u8d44\u6e90\u65f6\u9700\u8981\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\uff0c\u5982\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl apply -f </PATH/TO/YOUR_YAML_FILE> --namespace=<YOUR_NAMESPACE>")),(0,o.kt)("h3",{id:"81-limitrange\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"8.1 LimitRange\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# LimitRange\u7528\u4e8e\u9650\u5236\u547d\u4ee4\u7a7a\u95f4\u4e2d\u5355\u4e2apod\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff0c\u5bf9\u8c61\u662f\u4e2a\u4f53\n\napiVersion: v1\nkind: LimitRange\nmetadata:\n  name: mem-limit-range\nspec:\n  limits:\n  - default:\n      memory: 512Mi             # \u9ed8\u8ba4\u4e3a\u547d\u540d\u7a7a\u95f4\u4e2dpod\u6240\u5206\u914d\u7684limits.memory\u5185\u5b58\n      cpu: 1                    # \u9ed8\u8ba4\u4e3a\u547d\u540d\u7a7a\u95f4\u4e2dpod\u6240\u5206\u914d\u7684limits.cpu\u5927\u5c0f\n    defaultRequest:\n      memory: 256Mi             # \u9ed8\u8ba4\u4e3a\u547d\u540d\u7a7a\u95f4\u4e2dpod\u6240\u5206\u914d\u7684requests.memory\u5185\u5b58\n      cpu: 0.5                  # \u9ed8\u8ba4\u4e3a\u547d\u540d\u7a7a\u95f4\u4e2dpod\u6240\u5206\u914d\u7684limits.cpu\u5927\u5c0f\n    max:                        # \u6700\u5927\u8d44\u6e90\u9650\u5236\n      memory: 1Gi\n      cpu: "1000m"\n    min:                        # \u6700\u5c0f\u8d44\u6e90\u9650\u5236\n      memory: 1000Mi\n      cpu: "500m"\n    type: Container\n\n# \u66f4\u65b0limitrange\uff0c\u4e0d\u4f1a\u5f71\u54cd\u4e4b\u524d\u7684pod\n')),(0,o.kt)("h3",{id:"82-resourcequota\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"},"8.2 ResourceQuota\u8d44\u6e90\u6e05\u5355\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# ResourceQuota\u7528\u4e8e\u9650\u5236\u6574\u4e2a\u5de5\u4f5c\u7a7a\u95f4\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff0c\u5bf9\u8c61\u662f\u6574\u4e2a\u547d\u540d\u7a7a\u95f4\n\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: mem-cpu-demo\nspec:\n  hard:     # \u5728\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u4e0b\uff0c\u9650\u5236\u6bcf\u4e2a\u5bb9\u5668\u5fc5\u987b\u6709\u5185\u5b58\u8bf7\u6c42\u548c\u9650\u5236\uff0c\u4ee5\u53cacpu\u8bf7\u6c42\u548c\u9650\u5236\u5927\u5c0f\uff0c\u5e76\u4e14\u6240\u6709cpu\u8bf7\u6c42\u603b\u548c\u4e0d\u80fd\u591f\u8d85\u8fc72cpu\uff0c\u5176\u4ed6\u4ee5\u6b64\u7c7b\u63a8\n    requests.cpu: "1"\n    requests.memory: 1Gi\n    limits.cpu: "2"\n    limits.memory: 2Gi\n    # \u4ee5\u4e0b\u662f\u5bf9api\u5bf9\u8c61\u8d44\u6e90\u8fdb\u884c\u7684\u914d\u989d\uff0c\u6309\u9700\u5206\u914d\uff0c\u4ee5\u4e0b\u4ec5\u505a\u6f14\u793a\n    persistentvolumeclaims: "1"\n    services.loadbalancers: "2"\n    services.nodeports: "0"\n    replicationcontrollers: "1"\n    resourcequotas: "1"\n    pods: "10"\n    secrets: "2"\n    configmaps: "2"\n')),(0,o.kt)("h2",{id:"9-\u7efc\u5408\u793a\u4f8b"},"9. \u7efc\u5408\u793a\u4f8b"),(0,o.kt)("p",null,"sample1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: test-yaml\n  name: test-yaml\n  namespace: freeswitch\nspec:\n  ports:\n  - name: container-1-web-1\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: test-yaml\n  sessionAffinity: None\n  type: ClusterIP\n---\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  creationTimestamp: null\n  name: test-yaml\nspec:\n  rules:\n  - host: test.com\n    http:\n      paths:\n      - backend:\n          serviceName: test-yaml\n          servicePort: 8080\n        path: /\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: test-yaml\n  name: test-yaml\n  namespace: freeswitch\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: test-yaml\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        info: test for yaml\n      labels:\n        app: test-yaml\n    spec:\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: app\n                  operator: In\n                  values:\n                  - test-yaml\n              topologyKey: kubernetes.io/hostname\n            weight: 100\n      containers:\n      - env:\n        - name: TZ\n          value: Asia/Shanghai\n        - name: LANG\n          value: C.UTF-8\n        image: nginx\n        imagePullPolicy: Always\n        lifecycle: {}\n        livenessProbe:\n          failureThreshold: 2\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          successThreshold: 1\n          tcpSocket:\n            port: 8080\n          timeoutSeconds: 2\n        name: test-yaml\n        ports:\n        - containerPort: 8080\n          name: web\n          protocol: TCP\n        readinessProbe:\n          failureThreshold: 2\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          successThreshold: 1\n          tcpSocket:\n            port: 8080\n          timeoutSeconds: 2\n        resources:\n          limits:\n            cpu: 195m\n            memory: 375Mi\n          requests:\n            cpu: 10m\n            memory: 10Mi\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities: {}\n          privileged: false\n          procMount: Default\n          readOnlyRootFilesystem: false\n          runAsNonRoot: false\n        volumeMounts:\n        - mountPath: /usr/share/zoneinfo/Asia/Shanghai\n          name: tz-config\n        - mountPath: /etc/localtime\n          name: tz-config\n        - mountPath: /etc/timezone\n          name: timezone\n      dnsPolicy: ClusterFirst\n      hostAliases:\n      - hostnames:\n        - www.baidu.com\n        ip: 114.114.114.114\n      imagePullSecrets:\n      - name: myregistrykey\n      - name: myregistrykey2\n      restartPolicy: Always\n      securityContext: {}\n      volumes:\n      - hostPath:\n          path: /usr/share/zoneinfo/Asia/Shanghai\n          type: ""\n        name: tz-config\n      - hostPath:\n          path: /etc/timezone\n          type: ""\n        name: timezone\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u6b64\u6587\u7ae0\u57fa\u4e8e\u8be5\u535a\u5ba2\u8fdb\u884c\u4fee\u6539\u548c\u589e\u5220: ",(0,o.kt)("a",{parentName:"p",href:"https://blog.csdn.net/weixin_44953658/article/details/116161926"},"https://blog.csdn.net/weixin_44953658/article/details/116161926"))))}m.isMDXComponent=!0}}]);