"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[9717],{3905:(e,n,o)=>{o.d(n,{Zo:()=>p,kt:()=>u});var r=o(67294);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function s(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?s(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function c(e,n){if(null==e)return{};var o,r,t=function(e,n){if(null==e)return{};var o,r,t={},s=Object.keys(e);for(r=0;r<s.length;r++)o=s[r],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var l=r.createContext({}),i=function(e){var n=r.useContext(l),o=n;return e&&(o="function"==typeof e?e(n):a(a({},n),e)),o},p=function(e){var n=i(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var o=e.components,t=e.mdxType,s=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=i(o),u=t,k=m["".concat(l,".").concat(u)]||m[u]||d[u]||s;return o?r.createElement(k,a(a({ref:n},p),{},{components:o})):r.createElement(k,a({ref:n},p))}));function u(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var s=o.length,a=new Array(s);a[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:t,a[1]=c;for(var i=2;i<s;i++)a[i]=o[i];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},13105:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var r=o(87462),t=(o(67294),o(3905));const s={},a="Docker Compose",c={unversionedId:"CloudNative/Docker/Docker Compose",id:"CloudNative/Docker/Docker Compose",title:"Docker Compose",description:"Docker Compose \u7b80\u4ecb",source:"@site/docs/CloudNative/Docker/Docker Compose.md",sourceDirName:"CloudNative/Docker",slug:"/CloudNative/Docker/Docker Compose",permalink:"/docs/CloudNative/Docker/Docker Compose",draft:!1,editUrl:"https://github.com/AGou-ops/myDocsv4/edit/main/docs/CloudNative/Docker/Docker Compose.md",tags:[],version:"current",frontMatter:{},sidebar:"cloudNative",previous:{title:"Docker Basic",permalink:"/docs/CloudNative/Docker/Docker Basic"},next:{title:"Docker Network",permalink:"/docs/CloudNative/Docker/Docker Network"}},l={},i=[{value:"Docker Compose \u7b80\u4ecb",id:"docker-compose-\u7b80\u4ecb",level:2},{value:"Docker Compose \u5b89\u88c5",id:"docker-compose-\u5b89\u88c5",level:2},{value:"Docker \u5e38\u7528\u547d\u4ee4\u53ca\u7ec4\u5408",id:"docker-\u5e38\u7528\u547d\u4ee4\u53ca\u7ec4\u5408",level:2},{value:"docker-compose\u76f8\u5173\u547d\u4ee4",id:"docker-compose\u76f8\u5173\u547d\u4ee4",level:3},{value:"\u5e38\u7528shell\u7ec4\u5408",id:"\u5e38\u7528shell\u7ec4\u5408",level:3},{value:"\u5feb\u901f\u5165\u95e8 Compose &amp; Wordpress",id:"\u5feb\u901f\u5165\u95e8-compose--wordpress",level:2},{value:"Docker Compose \u547d\u4ee4\u4e0e\u914d\u7f6e\u8be6\u89e3",id:"docker-compose-\u547d\u4ee4\u4e0e\u914d\u7f6e\u8be6\u89e3",level:2},{value:"\u5e38\u7528\u547d\u4ee4\u53c2\u6570",id:"\u5e38\u7528\u547d\u4ee4\u53c2\u6570",level:3},{value:"\u6a21\u677f\u914d\u7f6e\u6587\u4ef6",id:"\u6a21\u677f\u914d\u7f6e\u6587\u4ef6",level:3},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u53c2\u8003\u94fe\u63a5",id:"\u53c2\u8003\u94fe\u63a5",level:2}],p={toc:i};function d(e){let{components:n,...o}=e;return(0,t.kt)("wrapper",(0,r.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"docker-compose"},"Docker Compose"),(0,t.kt)("h2",{id:"docker-compose-\u7b80\u4ecb"},"Docker Compose \u7b80\u4ecb"),(0,t.kt)("p",null,"Compose\u662f\u7528\u4e8e\u5b9a\u4e49\u548c\u8fd0\u884c\u591a\u5bb9\u5668Docker\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u5177\u3002\u901a\u8fc7Compose\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528YAML\u6587\u4ef6\u6765\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684\u670d\u52a1\u3002\u7136\u540e\uff0c\u4f7f\u7528\u4e00\u4e2a\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u4ece\u914d\u7f6e\u4e2d\u521b\u5efa\u5e76\u542f\u52a8\u6240\u6709\u670d\u52a1\u3002Compose\u53ef\u5728\u6240\u6709\u73af\u5883\u4e2d\u5de5\u4f5c\uff1a\u751f\u4ea7\uff0c\u767b\u53f0\uff0c\u5f00\u53d1\uff0c\u6d4b\u8bd5\u4ee5\u53caCI\u5de5\u4f5c\u6d41\u3002"),(0,t.kt)("p",null,"\u4f7f\u7528Compose\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u4e09\u6b65\u8fc7\u7a0b\uff1a"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u5b9a\u4e49\u60a8\u7684\u5e94\u7528\u73af\u5883\uff0c",(0,t.kt)("inlineCode",{parentName:"li"},"Dockerfile"),"\u4ee5\u4fbf\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u590d\u5236\u3002"),(0,t.kt)("li",{parentName:"ol"},"\u5b9a\u4e49\u7ec4\u6210\u5e94\u7528\u7a0b\u5e8f\u7684\u670d\u52a1\uff0c",(0,t.kt)("inlineCode",{parentName:"li"},"docker-compose.yml")," \u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u5728\u9694\u79bb\u7684\u73af\u5883\u4e2d\u4e00\u8d77\u8fd0\u884c\u3002"),(0,t.kt)("li",{parentName:"ol"},"\u8fd0\u884c ",(0,t.kt)("inlineCode",{parentName:"li"},"docker-compose up"),"\u542f\u52a8\u5e76\u8fd0\u884c\u60a8\u7684\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002")),(0,t.kt)("h2",{id:"docker-compose-\u5b89\u88c5"},"Docker Compose \u5b89\u88c5"),(0,t.kt)("p",null,"\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u4e0b\u8f7dDocker Compose\u7684\u5f53\u524d\u7a33\u5b9a\u7248\u672c\uff1a"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'sudo curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\n')),(0,t.kt)("p",null,"\u4e3a\u5176\u589e\u52a0\u53ef\u6267\u884c\u6743\u9650\uff1a"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod +x /usr/local/bin/docker-compose\n")),(0,t.kt)("p",null,"\u68c0\u67e5\u662f\u5426\u6210\u529f\u5b89\u88c5\uff1a"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker-compose --version\ndocker-compose version 1.25.5, build 1110ad01\n")),(0,t.kt)("h2",{id:"docker-\u5e38\u7528\u547d\u4ee4\u53ca\u7ec4\u5408"},"Docker \u5e38\u7528\u547d\u4ee4\u53ca\u7ec4\u5408"),(0,t.kt)("h3",{id:"docker-compose\u76f8\u5173\u547d\u4ee4"},"docker-compose\u76f8\u5173\u547d\u4ee4"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"# \u6784\u5efa\u955c\u50cf\ndocker-compose build\n# \u6784\u5efa\u955c\u50cf\uff0c--no-cache\u8868\u793a\u4e0d\u7528\u7f13\u5b58\uff0c\u5426\u5219\u5728\u91cd\u65b0\u7f16\u8f91Dockerfile\u540e\u518dbuild\u53ef\u80fd\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u800c\u5bfc\u81f4\u65b0\u7f16\u8f91\u5185\u5bb9\u4e0d\u751f\u6548\ndocker-compose build --no-cache\n# config \u6821\u9a8c\u6587\u4ef6\u683c\u5f0f\u662f\u5426\u6b63\u786e\ndocker-compose -f docker-compose.yml config\n# \u8fd0\u884c\u670d\u52a1\nocker-compose up -d\n# \u542f\u52a8/\u505c\u6b62\u670d\u52a1\ndocker-compose start/stop \u670d\u52a1\u540d\n# \u505c\u6b62\u670d\u52a1\ndocker-compose down\n# \u67e5\u770b\u5bb9\u5668\u65e5\u5fd7\ndocker logs -f \u5bb9\u5668ID\n# \u67e5\u770b\u955c\u50cf\ndocker-compose images\n# \u62c9\u53d6\u955c\u50cf\ndocker-compose pull \u955c\u50cf\u540d\n")),(0,t.kt)("h3",{id:"\u5e38\u7528shell\u7ec4\u5408"},"\u5e38\u7528shell\u7ec4\u5408"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"# \u5220\u9664\u6240\u6709\u5bb9\u5668\ndocker stop `docker ps -q -a` | xargs docker rm\n# \u5220\u9664\u6240\u6709\u6807\u7b7e\u4e3anone\u7684\u955c\u50cf\ndocker images|grep \\<none\\>|awk '{print $3}'|xargs docker rmi\n# \u67e5\u627e\u5bb9\u5668IP\u5730\u5740\ndocker inspect \u5bb9\u5668\u540d\u6216ID | grep \"IPAddress\"\n# \u521b\u5efa\u7f51\u6bb5, \u540d\u79f0: mynet, \u5206\u914d\u4e24\u4e2a\u5bb9\u5668\u5728\u540c\u4e00\u7f51\u6bb5\u4e2d (\u8fd9\u6837\u5b50\u624d\u53ef\u4ee5\u4e92\u76f8\u901a\u4fe1)\ndocker network create mynet\ndocker run -d --net mynet --name container1 my_image\ndocker run -it --net mynet --name container1 another_image\n")),(0,t.kt)("p",null,"\u8be6\u7ec6\u53c2\u8003\uff1a","[Docker Compose \u547d\u4ee4\u4e0e\u914d\u7f6e\u8be6\u89e3]","(Docker Compose \u547d\u4ee4\u4e0e\u914d\u7f6e\u8be6\u89e3)"),(0,t.kt)("h2",{id:"\u5feb\u901f\u5165\u95e8-compose--wordpress"},"\u5feb\u901f\u5165\u95e8 Compose & Wordpress"),(0,t.kt)("p",null,"\u521b\u5efa\u9879\u76ee\u6587\u4ef6\u5939\uff1a"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir my_wordpress/\ncd my_wordpress/\n")),(0,t.kt)("p",null,"\u521b\u5efa",(0,t.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),"\u6587\u4ef6\uff1a"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"version: '3.3'\n\nservices:\n   db:\n     image: mysql:5.7\n     volumes:\n       - db_data:/var/lib/mysql\n     restart: always\n     environment:\n       MYSQL_ROOT_PASSWORD: somewordpress\n       MYSQL_DATABASE: wordpress\n       MYSQL_USER: wordpress\n       MYSQL_PASSWORD: wordpress\n\n   wordpress:\n     depends_on:\n       - db\n     image: wordpress:latest\n     ports:\n       - \"8000:80\"\n     restart: always\n     environment:\n       WORDPRESS_DB_HOST: db:3306\n       WORDPRESS_DB_USER: wordpress\n       WORDPRESS_DB_PASSWORD: wordpress\n       WORDPRESS_DB_NAME: wordpress\nvolumes:\n    db_data: {}\n")),(0,t.kt)("p",null,"\u6784\u5efa\u9879\u76ee\uff1a"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n")),(0,t.kt)("p",null,"\u7b49\u5f85\u5b8c\u6210\u4e4b\u540e\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee ",(0,t.kt)("a",{parentName:"p",href:"http://127.0.0.1:8000"},"http://127.0.0.1:8000")," \u5373\u53ef."),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"\u8be5\u793a\u4f8b\u6765\u6e90\u4e8e\u5b98\u65b9\u6587\u6863\uff1a",(0,t.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/wordpress/"},"https://docs.docker.com/compose/wordpress/"))),(0,t.kt)("h2",{id:"docker-compose-\u547d\u4ee4\u4e0e\u914d\u7f6e\u8be6\u89e3"},"Docker Compose \u547d\u4ee4\u4e0e\u914d\u7f6e\u8be6\u89e3"),(0,t.kt)("h3",{id:"\u5e38\u7528\u547d\u4ee4\u53c2\u6570"},"\u5e38\u7528\u547d\u4ee4\u53c2\u6570"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"build       Build or rebuild services (\u6784\u5efa\u9879\u76ee\u4e2d\u7684\u670d\u52a1\u5bb9\u5668)\nbundle       Generate a Docker bundle from the Compose ``file` `(\u4eceCompose\u6587\u4ef6\u751f\u6210\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u5305)\nconfig       Validate and view the Compose ``file` `(\u9a8c\u8bc1\u5e76\u67e5\u770bCompose\u6587\u4ef6)\ncreate       Create services (\u4e3a\u670d\u52a1\u521b\u5efa\u5bb9\u5668)\ndown        Stop and remove containers, networks, images, and volumes (\u505c\u6b62\u5bb9\u5668\u5e76\u5220\u9664\u7531\u5176\u521b\u5efa\u7684\u5bb9\u5668\uff0c\u7f51\u7edc\uff0c\u5377\u548c\u56fe\u50cfup)\nevents       Receive real ``time` `events from containers (\u4e3a\u9879\u76ee\u4e2d\u7684\u6bcf\u4e2a\u5bb9\u5668\u6d41\u5f0f\u4f20\u8f93\u5bb9\u5668\u4e8b\u4ef6)\nexec`        `Execute a ``command` `in` `a running container (\u8fd9\u76f8\u5f53\u4e8edocker ``exec``\u3002\u4f7f\u7528\u6b64\u5b50\u547d\u4ee4\uff0c\u60a8\u53ef\u4ee5\u5728\u670d\u52a1\u4e2d\u8fd0\u884c\u4efb\u610f\u547d\u4ee4\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u547d\u4ee4\u5206\u914dTTY\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4docker-compose ``exec` `web sh\u6765\u83b7\u53d6\u4ea4\u4e92\u5f0f\u63d0\u793a\u3002)\nhelp        Get help on a ``command` `(\u83b7\u5f97\u4e00\u4e2a\u547d\u4ee4\u7684\u5e2e\u52a9)\nimages       List images ()\nkill`        `Kill containers (\u901a\u8fc7\u53d1\u9001SIGKILL\u4fe1\u53f7\u6765\u5f3a\u5236\u505c\u6b62\u670d\u52a1\u5bb9\u5668)\nlogs        View output from containers (\u67e5\u770b\u670d\u52a1\u5bb9\u5668\u7684\u8f93\u51fa)\npause       Pause services (\u6682\u505c\u4e00\u4e2a\u5bb9\u5668)\nport        Print the public port ``for` `a port binding (\u6253\u5370\u67d0\u4e2a\u5bb9\u5668\u7aef\u53e3\u6240\u6620\u5c04\u7684\u516c\u5171\u7aef\u53e3)\nps`         `List containers (\u5217\u51fa\u9879\u76ee\u4e2d\u76ee\u524d\u6240\u6709\u7684\u5bb9\u5668)\npull        Pull service images (\u62c9\u53d6\u670d\u52a1\u4f9d\u8d56\u955c\u50cf)\npush        Push service images (\u63a8\u9001\u670d\u52a1\u955c\u50cf)\nrestart      Restart services (\u91cd\u542f\u9879\u76ee\u4e2d\u7684\u670d\u52a1)\nrm`         `Remove stopped containers (\u5220\u9664\u6240\u6709\u505c\u6b62\u72b6\u6001\u7684\u670d\u52a1\u5bb9\u5668)\nrun        Run a one-off ``command` `(\u5728\u6307\u5b9a\u670d\u52a1\u4e0a\u6267\u884c\u4e00\u4e2a\u547d\u4ee4)\nscale       Set number of containers ``for` `a service (\u8bbe\u7f6e\u6307\u5b9a\u670d\u52a1\u6267\u884c\u7684\u5bb9\u5668\u4e2a\u6570)\nstart       Start services (\u542f\u52a8\u5df2\u5b58\u5728\u7684\u670d\u52a1\u5bb9\u5668)\nstop        Stop services (\u505c\u6b62\u5df2\u5b58\u5728\u7684\u670d\u52a1\u5bb9\u5668)\ntop`        `Display the running processes (\u663e\u793a\u5bb9\u5668\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b)\nunpause      Unpause services (\u6062\u590d\u5904\u4e8e\u6682\u505c\u72b6\u6001\u7684\u5bb9\u5668)\nup         Create and start containers (\u81ea\u52a8\u5b8c\u6210\u5305\u62ec\u6784\u5efa\u955c\u50cf\u3001\u521b\u5efa\u670d\u52a1\u3001\u542f\u52a8\u670d\u52a1\u5e76\u5173\u8054\u670d\u52a1\u76f8\u5173\u5bb9\u5668\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c)\nversion      Show the Docker-Compose version information (\u8f93\u51fa\u7248\u672c)\n")),(0,t.kt)("h3",{id:"\u6a21\u677f\u914d\u7f6e\u6587\u4ef6"},"\u6a21\u677f\u914d\u7f6e\u6587\u4ef6"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yaml"},'Compose\u548cDocker\u517c\u5bb9\u6027\uff1a\n    Compose \u6587\u4ef6\u683c\u5f0f\u67093\u4e2a\u7248\u672c,\u5206\u522b\u4e3a1, 2.x \u548c 3.x\n    \u76ee\u524d\u4e3b\u6d41\u7684\u4e3a 3.x \u5176\u652f\u6301 docker 1.13.0 \u53ca\u5176\u4ee5\u4e0a\u7684\u7248\u672c\n \n \n\u5e38\u7528\u53c2\u6570\uff1a\n    version           # \u6307\u5b9a compose \u6587\u4ef6\u7684\u7248\u672c\n    services          # \u5b9a\u4e49\u6240\u6709\u7684 service \u4fe1\u606f, services \u4e0b\u9762\u7684\u7b2c\u4e00\u7ea7\u522b\u7684 key \u65e2\u662f\u4e00\u4e2a service \u7684\u540d\u79f0\n \n        build                 # \u6307\u5b9a\u5305\u542b\u6784\u5efa\u4e0a\u4e0b\u6587\u7684\u8def\u5f84, \u6216\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5177\u6709 context \u548c\u6307\u5b9a\u7684 dockerfile \u6587\u4ef6\u4ee5\u53ca args \u53c2\u6570\u503c\n            context               # context: \u6307\u5b9a Dockerfile \u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\n            dockerfile            # dockerfile: \u6307\u5b9a context \u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u9762\u7684 Dockerfile \u7684\u540d\u79f0(\u9ed8\u8ba4\u4e3a Dockerfile)\n            args                  # args: Dockerfile \u5728 build \u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u53c2\u6570 (\u7b49\u540c\u4e8e docker container build --build-arg \u7684\u4f5c\u7528)\n            cache_from            # v3.2\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u6307\u5b9a\u7f13\u5b58\u7684\u955c\u50cf\u5217\u8868 (\u7b49\u540c\u4e8e docker container build --cache_from \u7684\u4f5c\u7528)\n            labels                # v3.3\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u8bbe\u7f6e\u955c\u50cf\u7684\u5143\u6570\u636e (\u7b49\u540c\u4e8e docker container build --labels \u7684\u4f5c\u7528)\n            shm_size              # v3.5\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u8bbe\u7f6e\u5bb9\u5668 /dev/shm \u5206\u533a\u7684\u5927\u5c0f (\u7b49\u540c\u4e8e docker container build --shm-size \u7684\u4f5c\u7528)\n \n        command               # \u8986\u76d6\u5bb9\u5668\u542f\u52a8\u540e\u9ed8\u8ba4\u6267\u884c\u7684\u547d\u4ee4, \u652f\u6301 shell \u683c\u5f0f\u548c [] \u683c\u5f0f\n \n        configs               # \u4e0d\u77e5\u9053\u600e\u4e48\u7528\uff0c\u54c8\u54c8\u3002\u3002\n \n        cgroup_parent         # \u4e0d\u77e5\u9053\u600e\u4e48\u7528\n \n        container_name        # \u6307\u5b9a\u5bb9\u5668\u7684\u540d\u79f0 (\u7b49\u540c\u4e8e docker run --name \u7684\u4f5c\u7528)\n \n        credential_spec       # \u4e0d\u77e5\u9053\u600e\u4e48\u7528\n \n        deploy                # v3 \u7248\u672c\u4ee5\u4e0a, \u6307\u5b9a\u4e0e\u90e8\u7f72\u548c\u8fd0\u884c\u670d\u52a1\u76f8\u5173\u7684\u914d\u7f6e, deploy \u90e8\u5206\u662f docker stack \u4f7f\u7528\u7684, docker stack \u4f9d\u8d56 docker swarm\n            endpoint_mode         # v3.3 \u7248\u672c\u4e2d\u65b0\u589e\u7684\u529f\u80fd, \u6307\u5b9a\u670d\u52a1\u66b4\u9732\u7684\u65b9\u5f0f\n                vip                   # Docker \u4e3a\u8be5\u670d\u52a1\u5206\u914d\u4e86\u4e00\u4e2a\u865a\u62df IP(VIP), \u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684\u8bbf\u95ee\u670d\u52a1\u7684\u5730\u5740\n                dnsrr                 # DNS\u8f6e\u8be2, Docker \u4e3a\u8be5\u670d\u52a1\u8bbe\u7f6e DNS \u6761\u76ee, \u4f7f\u5f97\u670d\u52a1\u540d\u79f0\u7684 DNS \u67e5\u8be2\u8fd4\u56de\u4e00\u4e2a IP \u5730\u5740\u5217\u8868, \u5ba2\u6237\u7aef\u76f4\u63a5\u8bbf\u95ee\u5176\u4e2d\u7684\u4e00\u4e2a\u5730\u5740\n            labels                # \u6307\u5b9a\u670d\u52a1\u7684\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u4ec5\u5728\u670d\u52a1\u4e0a\u8bbe\u7f6e\n            mode                  # \u6307\u5b9a deploy \u7684\u6a21\u5f0f\n                global                # \u6bcf\u4e2a\u96c6\u7fa4\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u5bb9\u5668\n                replicated            # \u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u96c6\u7fa4\u4e2d\u5bb9\u5668\u7684\u6570\u91cf(\u9ed8\u8ba4)\n            placement             # \u4e0d\u77e5\u9053\u600e\u4e48\u7528\n            replicas              # deploy \u7684 mode \u4e3a replicated \u65f6, \u6307\u5b9a\u5bb9\u5668\u526f\u672c\u7684\u6570\u91cf\n            resources             # \u8d44\u6e90\u9650\u5236\n                limits                # \u8bbe\u7f6e\u5bb9\u5668\u7684\u8d44\u6e90\u9650\u5236\n                    cpus: "0.5"           # \u8bbe\u7f6e\u8be5\u5bb9\u5668\u6700\u591a\u53ea\u80fd\u4f7f\u7528 50% \u7684 CPU\n                    memory: 50M           # \u8bbe\u7f6e\u8be5\u5bb9\u5668\u6700\u591a\u53ea\u80fd\u4f7f\u7528 50M \u7684\u5185\u5b58\u7a7a\u95f4\n                reservations          # \u8bbe\u7f6e\u4e3a\u5bb9\u5668\u9884\u7559\u7684\u7cfb\u7edf\u8d44\u6e90(\u968f\u65f6\u53ef\u7528)\n                    cpus: "0.2"           # \u4e3a\u8be5\u5bb9\u5668\u4fdd\u7559 20% \u7684 CPU\n                    memory: 20M           # \u4e3a\u8be5\u5bb9\u5668\u4fdd\u7559 20M \u7684\u5185\u5b58\u7a7a\u95f4\n            restart_policy        # \u5b9a\u4e49\u5bb9\u5668\u91cd\u542f\u7b56\u7565, \u7528\u4e8e\u4ee3\u66ff restart \u53c2\u6570\n                condition             # \u5b9a\u4e49\u5bb9\u5668\u91cd\u542f\u7b56\u7565(\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570)\n                    none                  # \u4e0d\u5c1d\u8bd5\u91cd\u542f\n                    on-failure            # \u53ea\u6709\u5f53\u5bb9\u5668\u5185\u90e8\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u95ee\u9898\u624d\u4f1a\u91cd\u542f\n                    any                   # \u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u5c1d\u8bd5\u91cd\u542f(\u9ed8\u8ba4)\n                delay                 # \u5c1d\u8bd5\u91cd\u542f\u7684\u95f4\u9694\u65f6\u95f4(\u9ed8\u8ba4\u4e3a 0s)\n                max_attempts          # \u5c1d\u8bd5\u91cd\u542f\u6b21\u6570(\u9ed8\u8ba4\u4e00\u76f4\u5c1d\u8bd5\u91cd\u542f)\n                window                # \u68c0\u67e5\u91cd\u542f\u662f\u5426\u6210\u529f\u4e4b\u524d\u7684\u7b49\u5f85\u65f6\u95f4(\u5373\u5982\u679c\u5bb9\u5668\u542f\u52a8\u4e86, \u9694\u591a\u5c11\u79d2\u4e4b\u540e\u53bb\u68c0\u6d4b\u5bb9\u5668\u662f\u5426\u6b63\u5e38, \u9ed8\u8ba4 0s)\n            update_config         # \u7528\u4e8e\u914d\u7f6e\u6eda\u52a8\u66f4\u65b0\u914d\u7f6e\n                parallelism           # \u4e00\u6b21\u6027\u66f4\u65b0\u7684\u5bb9\u5668\u6570\u91cf\n                delay                 # \u66f4\u65b0\u4e00\u7ec4\u5bb9\u5668\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4\n                failure_action        # \u5b9a\u4e49\u66f4\u65b0\u5931\u8d25\u7684\u7b56\u7565\n                    continue              # \u7ee7\u7eed\u66f4\u65b0\n                    rollback              # \u56de\u6eda\u66f4\u65b0\n                    pause                 # \u6682\u505c\u66f4\u65b0(\u9ed8\u8ba4)\n                monitor               # \u6bcf\u6b21\u66f4\u65b0\u540e\u7684\u6301\u7eed\u65f6\u95f4\u4ee5\u76d1\u89c6\u66f4\u65b0\u662f\u5426\u5931\u8d25(\u5355\u4f4d: ns|us|ms|s|m|h) (\u9ed8\u8ba4\u4e3a0)\n                max_failure_ratio     # \u56de\u6eda\u671f\u95f4\u5bb9\u5fcd\u7684\u5931\u8d25\u7387(\u9ed8\u8ba4\u503c\u4e3a0)\n                order                 # v3.4 \u7248\u672c\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u56de\u6eda\u671f\u95f4\u7684\u64cd\u4f5c\u987a\u5e8f\n                    stop-first            #\u65e7\u4efb\u52a1\u5728\u542f\u52a8\u65b0\u4efb\u52a1\u4e4b\u524d\u505c\u6b62(\u9ed8\u8ba4)\n                    start-first           #\u9996\u5148\u542f\u52a8\u65b0\u4efb\u52a1, \u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u6682\u65f6\u91cd\u53e0\n            rollback_config       # v3.7 \u7248\u672c\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u7528\u4e8e\u5b9a\u4e49\u5728 update_config \u66f4\u65b0\u5931\u8d25\u7684\u56de\u6eda\u7b56\u7565\n                parallelism           # \u4e00\u6b21\u56de\u6eda\u7684\u5bb9\u5668\u6570, \u5982\u679c\u8bbe\u7f6e\u4e3a0, \u5219\u6240\u6709\u5bb9\u5668\u540c\u65f6\u56de\u6eda\n                delay                 # \u6bcf\u4e2a\u7ec4\u56de\u6eda\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694(\u9ed8\u8ba4\u4e3a0)\n                failure_action        # \u5b9a\u4e49\u56de\u6eda\u5931\u8d25\u7684\u7b56\u7565\n                    continue              # \u7ee7\u7eed\u56de\u6eda\n                    pause                 # \u6682\u505c\u56de\u6eda\n                monitor               # \u6bcf\u6b21\u56de\u6eda\u4efb\u52a1\u540e\u7684\u6301\u7eed\u65f6\u95f4\u4ee5\u76d1\u89c6\u5931\u8d25(\u5355\u4f4d: ns|us|ms|s|m|h) (\u9ed8\u8ba4\u4e3a0)\n                max_failure_ratio     # \u56de\u6eda\u671f\u95f4\u5bb9\u5fcd\u7684\u5931\u8d25\u7387(\u9ed8\u8ba4\u503c0)\n                order                 # \u56de\u6eda\u671f\u95f4\u7684\u64cd\u4f5c\u987a\u5e8f\n                    stop-first            # \u65e7\u4efb\u52a1\u5728\u542f\u52a8\u65b0\u4efb\u52a1\u4e4b\u524d\u505c\u6b62(\u9ed8\u8ba4)\n                    start-first           # \u9996\u5148\u542f\u52a8\u65b0\u4efb\u52a1, \u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u6682\u65f6\u91cd\u53e0\n               \n* \u6ce8\u610f\uff1a\u652f\u6301 docker-compose up \u548c docker-compose run \u4f46\u4e0d\u652f\u6301 docker stack deploy \u7684\u5b50\u9009\u9879security_opt  container_name  devices  tmpfs  stop_signal  links    cgroup_parent etwork_mode  external_links  restart  build  userns_mode  sysctls\n \n        devices               # \u6307\u5b9a\u8bbe\u5907\u6620\u5c04\u5217\u8868 (\u7b49\u540c\u4e8e docker run --device \u7684\u4f5c\u7528)\n \n        depends_on            # \u5b9a\u4e49\u5bb9\u5668\u542f\u52a8\u987a\u5e8f (\u6b64\u9009\u9879\u89e3\u51b3\u4e86\u5bb9\u5668\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c \u6b64\u9009\u9879\u5728 v3 \u7248\u672c\u4e2d \u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879)\n            \n        dns                   # \u8bbe\u7f6e DNS \u5730\u5740(\u7b49\u540c\u4e8e docker run --dns \u7684\u4f5c\u7528)\n \n        dns_search            # \u8bbe\u7f6e DNS \u641c\u7d22\u57df(\u7b49\u540c\u4e8e docker run --dns-search \u7684\u4f5c\u7528)\n \n        tmpfs                 # v2 \u7248\u672c\u4ee5\u4e0a, \u6302\u8f7d\u76ee\u5f55\u5230\u5bb9\u5668\u4e2d, \u4f5c\u4e3a\u5bb9\u5668\u7684\u4e34\u65f6\u6587\u4ef6\u7cfb\u7edf(\u7b49\u540c\u4e8e docker run --tmpfs \u7684\u4f5c\u7528, \u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879)\n \n        entrypoint            # \u8986\u76d6\u5bb9\u5668\u7684\u9ed8\u8ba4 entrypoint \u6307\u4ee4 (\u7b49\u540c\u4e8e docker run --entrypoint \u7684\u4f5c\u7528)\n \n        env_file              # \u4ece\u6307\u5b9a\u6587\u4ef6\u4e2d\u8bfb\u53d6\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u5bb9\u5668\u4e2d\u7684\u73af\u5883\u53d8\u91cf, \u53ef\u4ee5\u662f\u5355\u4e2a\u503c\u6216\u8005\u4e00\u4e2a\u6587\u4ef6\u5217\u8868, \u5982\u679c\u591a\u4e2a\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u91cd\u540d\u5219\u540e\u9762\u7684\u53d8\u91cf\u8986\u76d6\u524d\u9762\u7684\u53d8\u91cf, environment \u7684\u503c\u8986\u76d6 env_file \u7684\u503c\n            \u6587\u4ef6\u683c\u5f0f\uff1a\n                RACK_ENV=development\n \n        environment           # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c environment \u7684\u503c\u53ef\u4ee5\u8986\u76d6 env_file \u7684\u503c (\u7b49\u540c\u4e8e docker run --env \u7684\u4f5c\u7528)\n \n        expose                # \u66b4\u9732\u7aef\u53e3, \u4f46\u662f\u4e0d\u80fd\u548c\u5bbf\u4e3b\u673a\u5efa\u7acb\u6620\u5c04\u5173\u7cfb, \u7c7b\u4f3c\u4e8e Dockerfile \u7684 EXPOSE \u6307\u4ee4\n \n        external_links        # \u8fde\u63a5\u4e0d\u5728 docker-compose.yml \u4e2d\u5b9a\u4e49\u7684\u5bb9\u5668\u6216\u8005\u4e0d\u5728 compose \u7ba1\u7406\u7684\u5bb9\u5668(docker run \u542f\u52a8\u7684\u5bb9\u5668, \u5728 v3 \u7248\u672c\u4e2d\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879)\n \n        extra_hosts           # \u6dfb\u52a0 host \u8bb0\u5f55\u5230\u5bb9\u5668\u4e2d\u7684 /etc/hosts \u4e2d (\u7b49\u540c\u4e8e docker run --add-host \u7684\u4f5c\u7528)\n \n        healthcheck           # v2.1 \u4ee5\u4e0a\u7248\u672c, \u5b9a\u4e49\u5bb9\u5668\u5065\u5eb7\u72b6\u6001\u68c0\u67e5, \u7c7b\u4f3c\u4e8e Dockerfile \u7684 HEALTHCHECK \u6307\u4ee4\n            test                  # \u68c0\u67e5\u5bb9\u5668\u68c0\u67e5\u72b6\u6001\u7684\u547d\u4ee4, \u8be5\u9009\u9879\u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u8005\u5217\u8868, \u7b2c\u4e00\u9879\u5fc5\u987b\u662f NONE, CMD \u6216 CMD-SHELL, \u5982\u679c\u5176\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5219\u76f8\u5f53\u4e8e CMD-SHELL \u52a0\u8be5\u5b57\u7b26\u4e32\n                NONE                  # \u7981\u7528\u5bb9\u5668\u7684\u5065\u5eb7\u72b6\u6001\u68c0\u6d4b\n                CMD                   # test: ["CMD", "curl", "-f", "http://127.0.0.1"]\n                CMD-SHELL             # test: ["CMD-SHELL", "curl -f http://127.0.0.1 || exit 1"] \u6216\u8005\u3000test: curl -f https://localhost || exit 1\n            interval: 1m30s       # \u6bcf\u6b21\u68c0\u67e5\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4\n            timeout: 10s          # \u8fd0\u884c\u547d\u4ee4\u7684\u8d85\u65f6\u65f6\u95f4\n            retries: 3            # \u91cd\u8bd5\u6b21\u6570\n            start_period: 40s     # v3.4 \u4ee5\u4e0a\u65b0\u589e\u7684\u9009\u9879, \u5b9a\u4e49\u5bb9\u5668\u542f\u52a8\u65f6\u95f4\u95f4\u9694\n            disable: true         # true \u6216 false, \u8868\u793a\u662f\u5426\u7981\u7528\u5065\u5eb7\u72b6\u6001\u68c0\u6d4b\u548c\u3000test: NONE \u76f8\u540c\n         \n        image                 # \u6307\u5b9a docker \u955c\u50cf, \u53ef\u4ee5\u662f\u8fdc\u7a0b\u4ed3\u5e93\u955c\u50cf\u3001\u672c\u5730\u955c\u50cf\n \n        init                  # v3.7 \u4e2d\u65b0\u589e\u7684\u53c2\u6570, true \u6216 false \u8868\u793a\u662f\u5426\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u4e00\u4e2a init, \u5b83\u63a5\u6536\u4fe1\u53f7\u5e76\u4f20\u9012\u7ed9\u8fdb\u7a0b\n \n        isolation             # \u9694\u79bb\u5bb9\u5668\u6280\u672f, \u5728 Linux \u4e2d\u4ec5\u652f\u6301 default \u503c\n \n        labels                # \u4f7f\u7528 Docker \u6807\u7b7e\u5c06\u5143\u6570\u636e\u6dfb\u52a0\u5230\u5bb9\u5668, \u4e0e Dockerfile \u4e2d\u7684 LABELS \u7c7b\u4f3c\n \n        links                 # \u94fe\u63a5\u5230\u5176\u5b83\u670d\u52a1\u4e2d\u7684\u5bb9\u5668, \u8be5\u9009\u9879\u662f docker \u5386\u53f2\u9057\u7559\u7684\u9009\u9879, \u76ee\u524d\u5df2\u88ab\u7528\u6237\u81ea\u5b9a\u4e49\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4\u53d6\u4ee3, \u6700\u7ec8\u6709\u53ef\u80fd\u88ab\u5e9f\u5f03 (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879)\n         \n        logging               # \u8bbe\u7f6e\u5bb9\u5668\u65e5\u5fd7\u670d\u52a1\n            driver                # \u6307\u5b9a\u65e5\u5fd7\u8bb0\u5f55\u9a71\u52a8\u7a0b\u5e8f, \u9ed8\u8ba4 json-file (\u7b49\u540c\u4e8e docker run --log-driver \u7684\u4f5c\u7528)\n            options               # \u6307\u5b9a\u65e5\u5fd7\u7684\u76f8\u5173\u53c2\u6570 (\u7b49\u540c\u4e8e docker run --log-opt \u7684\u4f5c\u7528)\n                max-size              # \u8bbe\u7f6e\u5355\u4e2a\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f, \u5f53\u5230\u8fbe\u8fd9\u4e2a\u503c\u540e\u4f1a\u8fdb\u884c\u65e5\u5fd7\u6eda\u52a8\u64cd\u4f5c\n                max-file              # \u65e5\u5fd7\u6587\u4ef6\u4fdd\u7559\u7684\u6570\u91cf\n \n        network_mode          # \u6307\u5b9a\u7f51\u7edc\u6a21\u5f0f (\u7b49\u540c\u4e8e docker run --net \u7684\u4f5c\u7528, \u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879)        \n \n        networks              # \u5c06\u5bb9\u5668\u52a0\u5165\u6307\u5b9a\u7f51\u7edc (\u7b49\u540c\u4e8e docker network connect \u7684\u4f5c\u7528), networks \u53ef\u4ee5\u4f4d\u4e8e compose \u6587\u4ef6\u9876\u7ea7\u952e\u548c services \u952e\u7684\u4e8c\u7ea7\u952e\n            aliases               # \u540c\u4e00\u7f51\u7edc\u4e0a\u7684\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528\u670d\u52a1\u540d\u79f0\u6216\u522b\u540d\u8fde\u63a5\u5230\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u7684\u5bb9\u5668\n            ipv4_address      # IP V4 \u683c\u5f0f\n            ipv6_address      # IP V6 \u683c\u5f0f\n \n        pid: \'host\'           # \u5171\u4eab\u5bbf\u4e3b\u673a\u7684 \u8fdb\u7a0b\u7a7a\u95f4(PID)\n \n        ports                 # \u5efa\u7acb\u5bbf\u4e3b\u673a\u548c\u5bb9\u5668\u4e4b\u95f4\u7684\u7aef\u53e3\u6620\u5c04\u5173\u7cfb, ports \u652f\u6301\u4e24\u79cd\u8bed\u6cd5\u683c\u5f0f\n            SHORT \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b:\n                - "3000"                            # \u66b4\u9732\u5bb9\u5668\u7684 3000 \u7aef\u53e3, \u5bbf\u4e3b\u673a\u7684\u7aef\u53e3\u7531 docker \u968f\u673a\u6620\u5c04\u4e00\u4e2a\u6ca1\u6709\u88ab\u5360\u7528\u7684\u7aef\u53e3\n                - "3000-3005"                       # \u66b4\u9732\u5bb9\u5668\u7684 3000 \u5230 3005 \u7aef\u53e3, \u5bbf\u4e3b\u673a\u7684\u7aef\u53e3\u7531 docker \u968f\u673a\u6620\u5c04\u6ca1\u6709\u88ab\u5360\u7528\u7684\u7aef\u53e3\n                - "8000:8000"                       # \u5bb9\u5668\u7684 8000 \u7aef\u53e3\u548c\u5bbf\u4e3b\u673a\u7684 8000 \u7aef\u53e3\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\n                - "9090-9091:8080-8081"\n                - "127.0.0.1:8001:8001"             # \u6307\u5b9a\u6620\u5c04\u5bbf\u4e3b\u673a\u7684\u6307\u5b9a\u5730\u5740\u7684\n                - "127.0.0.1:5000-5010:5000-5010"  \n                - "6060:6060/udp"                   # \u6307\u5b9a\u534f\u8bae\n \n            LONG \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b:(v3.2 \u65b0\u589e\u7684\u8bed\u6cd5\u683c\u5f0f)\n                ports:\n                    - target: 80                    # \u5bb9\u5668\u7aef\u53e3\n                      published: 8080               # \u5bbf\u4e3b\u673a\u7aef\u53e3\n                      protocol: tcp                 # \u534f\u8bae\u7c7b\u578b\n                      mode: host                    # host \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u53d1\u5e03\u4e3b\u673a\u7aef\u53e3,  ingress \u5bf9\u4e8e\u7fa4\u6a21\u5f0f\u7aef\u53e3\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\n \n        secrets               # \u4e0d\u77e5\u9053\u600e\u4e48\u7528\n \n        security_opt          # \u4e3a\u6bcf\u4e2a\u5bb9\u5668\u8986\u76d6\u9ed8\u8ba4\u7684\u6807\u7b7e (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879)\n \n        stop_grace_period     # \u6307\u5b9a\u5728\u53d1\u9001\u4e86 SIGTERM \u4fe1\u53f7\u4e4b\u540e, \u5bb9\u5668\u7b49\u5f85\u591a\u5c11\u79d2\u4e4b\u540e\u9000\u51fa(\u9ed8\u8ba4 10s)\n \n        stop_signal           # \u6307\u5b9a\u505c\u6b62\u5bb9\u5668\u53d1\u9001\u7684\u4fe1\u53f7 (\u9ed8\u8ba4\u4e3a SIGTERM \u76f8\u5f53\u4e8e kill PID; SIGKILL \u76f8\u5f53\u4e8e kill -9 PID; \u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879)\n \n        sysctls               # \u8bbe\u7f6e\u5bb9\u5668\u4e2d\u7684\u5185\u6838\u53c2\u6570 (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879)\n \n        ulimits               # \u8bbe\u7f6e\u5bb9\u5668\u7684 limit\n \n        userns_mode           # \u5982\u679cDocker\u5b88\u62a4\u7a0b\u5e8f\u914d\u7f6e\u4e86\u7528\u6237\u540d\u79f0\u7a7a\u95f4, \u5219\u7981\u7528\u6b64\u670d\u52a1\u7684\u7528\u6237\u540d\u79f0\u7a7a\u95f4 (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879)\n \n        volumes               # \u5b9a\u4e49\u5bb9\u5668\u548c\u5bbf\u4e3b\u673a\u7684\u5377\u6620\u5c04\u5173\u7cfb, \u5176\u548c networks \u4e00\u6837\u53ef\u4ee5\u4f4d\u4e8e services \u952e\u7684\u4e8c\u7ea7\u952e\u548c compose \u9876\u7ea7\u952e, \u5982\u679c\u9700\u8981\u8de8\u670d\u52a1\u95f4\u4f7f\u7528\u5219\u5728\u9876\u7ea7\u952e\u5b9a\u4e49, \u5728 services \u4e2d\u5f15\u7528\n            SHORT \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b:\n                volumes:\n                    - /var/lib/mysql                # \u6620\u5c04\u5bb9\u5668\u5185\u7684 /var/lib/mysql \u5230\u5bbf\u4e3b\u673a\u7684\u4e00\u4e2a\u968f\u673a\u76ee\u5f55\u4e2d\n                    - /opt/data:/var/lib/mysql      # \u6620\u5c04\u5bb9\u5668\u5185\u7684 /var/lib/mysql \u5230\u5bbf\u4e3b\u673a\u7684 /opt/data\n                    - ./cache:/tmp/cache            # \u6620\u5c04\u5bb9\u5668\u5185\u7684 /var/lib/mysql \u5230\u5bbf\u4e3b\u673a compose \u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\n                    - ~/configs:/etc/configs/:ro    # \u6620\u5c04\u5bb9\u5668\u5bbf\u4e3b\u673a\u7684\u76ee\u5f55\u5230\u5bb9\u5668\u4e2d\u53bb, \u6743\u9650\u53ea\u8bfb\n                    - datavolume:/var/lib/mysql     # datavolume \u4e3a volumes \u9876\u7ea7\u952e\u5b9a\u4e49\u7684\u76ee\u5f55, \u5728\u6b64\u5904\u76f4\u63a5\u8c03\u7528\n             \n            LONG \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b:(v3.2 \u65b0\u589e\u7684\u8bed\u6cd5\u683c\u5f0f)\n                version: "3.2"\n                services:\n                    web:\n                        image: nginx:alpine\n                        ports:\n                            - "80:80"\n                        volumes:\n                            - type: volume                  # mount \u7684\u7c7b\u578b, \u5fc5\u987b\u662f bind\u3001volume \u6216 tmpfs\n                                source: mydata              # \u5bbf\u4e3b\u673a\u76ee\u5f55\n                                target: /data               # \u5bb9\u5668\u76ee\u5f55\n                                volume:                     # \u914d\u7f6e\u989d\u5916\u7684\u9009\u9879, \u5176 key \u5fc5\u987b\u548c type \u7684\u503c\u76f8\u540c\n                                    nocopy: true                # volume \u989d\u5916\u7684\u9009\u9879, \u5728\u521b\u5efa\u5377\u65f6\u7981\u7528\u4ece\u5bb9\u5668\u590d\u5236\u6570\u636e\n                            - type: bind                    # volume \u6a21\u5f0f\u53ea\u6307\u5b9a\u5bb9\u5668\u8def\u5f84\u5373\u53ef, \u5bbf\u4e3b\u673a\u8def\u5f84\u968f\u673a\u751f\u6210; bind \u9700\u8981\u6307\u5b9a\u5bb9\u5668\u548c\u6570\u636e\u673a\u7684\u6620\u5c04\u8def\u5f84\n                                source: ./static\n                                target: /opt/app/static\n                                read_only: true             # \u8bbe\u7f6e\u6587\u4ef6\u7cfb\u7edf\u4e3a\u53ea\u8bfb\u6587\u4ef6\u7cfb\u7edf\n                volumes:\n                    mydata:                                 # \u5b9a\u4e49\u5728 volume, \u53ef\u5728\u6240\u6709\u670d\u52a1\u4e2d\u8c03\u7528\n                 \n        restart               # \u5b9a\u4e49\u5bb9\u5668\u91cd\u542f\u7b56\u7565(\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879, \u5728 swarm \u4f7f\u7528 restart_policy \u4ee3\u66ff restart)\n            no                    # \u7981\u6b62\u81ea\u52a8\u91cd\u542f\u5bb9\u5668(\u9ed8\u8ba4)\n            always                # \u65e0\u8bba\u5982\u4f55\u5bb9\u5668\u90fd\u4f1a\u91cd\u542f\n            on-failure            # \u5f53\u51fa\u73b0 on-failure \u62a5\u9519\u65f6, \u5bb9\u5668\u91cd\u65b0\u542f\u52a8\n \n        \u5176\u4ed6\u9009\u9879\uff1a\n            domainname, hostname, ipc, mac_address, privileged, read_only, shm_size, stdin_open, tty, user, working_dir\n            \u4e0a\u9762\u8fd9\u4e9b\u9009\u9879\u90fd\u53ea\u63a5\u53d7\u5355\u4e2a\u503c\u548c docker run \u7684\u5bf9\u5e94\u53c2\u6570\u7c7b\u4f3c\n \n        \u5bf9\u4e8e\u503c\u4e3a\u65f6\u95f4\u7684\u53ef\u63a5\u53d7\u7684\u503c\uff1a\n            2.5s\n            10s\n            1m30s\n            2h32m\n            5h34m56s\n \n            \u65f6\u95f4\u5355\u4f4d: us, ms, s, m\uff0c h\n \n        \u5bf9\u4e8e\u503c\u4e3a\u5927\u5c0f\u7684\u53ef\u63a5\u53d7\u7684\u503c\uff1a\n            2b\n            1024kb\n            2048k\n            300m\n            1gb\n \n            \u5355\u4f4d: b, k, m, g \u6216\u8005 kb, mb, gb\n \n \n \n \n \n    networks          # \u5b9a\u4e49 networks \u4fe1\u606f\n        driver                # \u6307\u5b9a\u7f51\u7edc\u6a21\u5f0f, \u5927\u591a\u6570\u60c5\u51b5\u4e0b, \u5b83 bridge \u4e8e\u5355\u4e2a\u4e3b\u673a\u548c overlay Swarm \u4e0a\n            bridge                # Docker \u9ed8\u8ba4\u4f7f\u7528 bridge \u8fde\u63a5\u5355\u4e2a\u4e3b\u673a\u4e0a\u7684\u7f51\u7edc\n            overlay               # overlay \u9a71\u52a8\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a\u8de8\u591a\u4e2a\u8282\u70b9\u547d\u540d\u7684\u7f51\u7edc\n            host                  # \u5171\u4eab\u4e3b\u673a\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4(\u7b49\u540c\u4e8e docker run --net=host)\n            none                  # \u7b49\u540c\u4e8e docker run --net=none\n \n        driver_opts           # v3.2\u4ee5\u4e0a\u7248\u672c, \u4f20\u9012\u7ed9\u9a71\u52a8\u7a0b\u5e8f\u7684\u53c2\u6570, \u8fd9\u4e9b\u53c2\u6570\u53d6\u51b3\u4e8e\u9a71\u52a8\u7a0b\u5e8f\n \n        attachable            # driver \u4e3a overlay \u65f6\u4f7f\u7528, \u5982\u679c\u8bbe\u7f6e\u4e3a true \u5219\u9664\u4e86\u670d\u52a1\u4e4b\u5916\uff0c\u72ec\u7acb\u5bb9\u5668\u4e5f\u53ef\u4ee5\u9644\u52a0\u5230\u8be5\u7f51\u7edc; \u5982\u679c\u72ec\u7acb\u5bb9\u5668\u8fde\u63a5\u5230\u8be5\u7f51\u7edc\uff0c\u5219\u5b83\u53ef\u4ee5\u4e0e\u5176\u4ed6 Docker \u5b88\u62a4\u8fdb\u7a0b\u8fde\u63a5\u5230\u7684\u8be5\u7f51\u7edc\u7684\u670d\u52a1\u548c\u72ec\u7acb\u5bb9\u5668\u8fdb\u884c\u901a\u4fe1\n \n        ipam                  # \u81ea\u5b9a\u4e49 IPAM \u914d\u7f6e. \u8fd9\u662f\u4e00\u4e2a\u5177\u6709\u591a\u4e2a\u5c5e\u6027\u7684\u5bf9\u8c61, \u6bcf\u4e2a\u5c5e\u6027\u90fd\u662f\u53ef\u9009\u7684\n            driver                # IPAM \u9a71\u52a8\u7a0b\u5e8f, bridge \u6216\u8005 default\n            config                # \u914d\u7f6e\u9879\n                subnet                # CIDR\u683c\u5f0f\u7684\u5b50\u7f51\uff0c\u8868\u793a\u8be5\u7f51\u7edc\u7684\u7f51\u6bb5\n         \n        external              # \u5916\u90e8\u7f51\u7edc, \u5982\u679c\u8bbe\u7f6e\u4e3a true \u5219 docker-compose up \u4e0d\u4f1a\u5c1d\u8bd5\u521b\u5efa\u5b83, \u5982\u679c\u5b83\u4e0d\u5b58\u5728\u5219\u5f15\u53d1\u9519\u8bef\n \n        name                  # v3.5 \u4ee5\u4e0a\u7248\u672c, \u4e3a\u6b64\u7f51\u7edc\u8bbe\u7f6e\u540d\u79f0\n')),(0,t.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yaml"},"\u793a\u4f8b\uff1a\ndocker-compose up \u4ee5\u4f9d\u8d56\u987a\u5e8f\u542f\u52a8\u670d\u52a1\uff0c\u4e0b\u9762\u4f8b\u5b50\u4e2d redis \u548c db \u670d\u52a1\u5728 web \u542f\u52a8\u524d\u542f\u52a8\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 docker-compose up web \u8fd9\u6837\u7684\u65b9\u5f0f\u542f\u52a8 web \u670d\u52a1\u65f6\uff0c\u4e5f\u4f1a\u542f\u52a8 redis \u548c db \u4e24\u4e2a\u670d\u52a1\uff0c\u56e0\u4e3a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4f9d\u8d56\u5173\u7cfb\n\nversion: '3'\nservices:\n    web:\n        build: .\n        depends_on:\n            - db     \n            - redis \n    redis:\n        image: redis\n    db:\n        image: postgres                            \n \n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yaml"},"\u793a\u4f8b:\nversion: '3.7'\nservices:\n    test:\n        image: nginx:1.14-alpine\n        container_name: mynginx\n        command: ifconfig\n        networks:\n            app_net:                                # \u8c03\u7528\u4e0b\u9762 networks \u5b9a\u4e49\u7684 app_net \u7f51\u7edc\n            ipv4_address: 172.16.238.10\nnetworks:\n    app_net:\n        driver: bridge\n        ipam:\n            driver: default\n            config:\n                - subnet: 172.16.238.0/24\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yaml"},'\u6587\u4ef6\u683c\u5f0f\u793a\u4f8b\uff1a\nversion: "3"\nservices:\n\n  redis:\n    image: redis:alpine\n    ports:\n      - "6379"\n    networks:\n      - frontend\n    deploy:\n      replicas: 2\n      update_config:\n        parallelism: 2\n        delay: 10s\n      restart_policy:\n        condition: on-failure\n\n  db:\n    image: postgres:9.4\n    volumes:\n      - db-data:/var/lib/postgresql/data\n    networks:\n      - backend\n    deploy:\n      placement:\n        constraints: [node.role == manager]\n')),(0,t.kt)("h2",{id:"\u53c2\u8003\u94fe\u63a5"},"\u53c2\u8003\u94fe\u63a5"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Docker Compose Documentation\uff1a",(0,t.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/"},"https://docs.docker.com/compose/")),(0,t.kt)("li",{parentName:"ul"},"compose-file\uff1a",(0,t.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/compose-file/#compose-file-structure-and-examples"},"https://docs.docker.com/compose/compose-file/#compose-file-structure-and-examples")),(0,t.kt)("li",{parentName:"ul"},"cnblogs @zhujingzhi \uff1a",(0,t.kt)("a",{parentName:"li",href:"https://www.cnblogs.com/zhujingzhi/p/9786622.html"},"https://www.cnblogs.com/zhujingzhi/p/9786622.html"))))}d.isMDXComponent=!0}}]);