"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[7312],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),p=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,k=m["".concat(i,".").concat(d)]||m[d]||u[d]||a;return n?o.createElement(k,s(s({ref:t},c),{},{components:n})):o.createElement(k,s({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var p=2;p<a;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},55691:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const a={},s="Kompose Basic",l={unversionedId:"CloudNative/k8s/kompose Basic",id:"CloudNative/k8s/kompose Basic",title:"Kompose Basic",description:"\u7b80\u4ecb",source:"@site/docs/CloudNative/k8s/kompose Basic.md",sourceDirName:"CloudNative/k8s",slug:"/CloudNative/k8s/kompose Basic",permalink:"/docs/CloudNative/k8s/kompose Basic",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CloudNative/k8s/kompose Basic.md",tags:[],version:"current",frontMatter:{},sidebar:"cloudNative",previous:{title:"k8s \u6982\u5ff5\u53ca\u539f\u7406\u76f8\u5173",permalink:"/docs/CloudNative/k8s/k8s\u6982\u5ff5\u53ca\u539f\u7406\u76f8\u5173"},next:{title:"kubenetes\u8fdc\u7a0b\u8c03\u8bd5\u5de5\u5177",permalink:"/docs/CloudNative/k8s/kubenetes\u8fdc\u7a0b\u8c03\u8bd5\u5de5\u5177"}},i={},p=[{value:"\u7b80\u4ecb",id:"\u7b80\u4ecb",level:2},{value:"A conversion tool to go from Docker Compose to Kubernetes",id:"a-conversion-tool-to-go-from-docker-compose-to-kubernetes",level:3},{value:"What\u2019s Kompose?",id:"whats-kompose",level:4},{value:"\u7b80\u5355\u6837\u4f8b",id:"\u7b80\u5355\u6837\u4f8b",level:2},{value:"Minikube and Kompose",id:"minikube-and-kompose",level:2},{value:"\u53c2\u8003\u94fe\u63a5",id:"\u53c2\u8003\u94fe\u63a5",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"kompose-basic"},"Kompose Basic"),(0,r.kt)("h2",{id:"\u7b80\u4ecb"},"\u7b80\u4ecb"),(0,r.kt)("h3",{id:"a-conversion-tool-to-go-from-docker-compose-to-kubernetes"},"A conversion tool to go from Docker Compose to Kubernetes"),(0,r.kt)("h4",{id:"whats-kompose"},"What\u2019s Kompose?"),(0,r.kt)("p",null,"Kompose is a conversion tool for Docker Compose to container orchestrators such as Kubernetes (or OpenShift)."),(0,r.kt)("p",null,"Kompose is deployed as a binary onto a client. To install Kompose on Katacoda, run the command as blow:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L https://github.com/kubernetes/kompose/releases/download/v1.9.0/kompose-linux-amd64 -o /usr/bin/kompose && chmod +x /usr/bin/kompose\n")),(0,r.kt)("p",null,"Details on how to install Kompose for your OS can be found at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kompose/releases"},"https://github.com/kubernetes/kompose/releases")),(0,r.kt)("h2",{id:"\u7b80\u5355\u6837\u4f8b"},"\u7b80\u5355\u6837\u4f8b"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml"),"\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "2"\nservices:\n  redis-master:\n    image: redis:latest\n    ports:\n      - "6379"\n  redis-slave:\n    image: gcr.io/google_samples/gb-redisslave:v1\n    ports:\n      - "6379"\n    environment:\n      - GET_HOSTS_FROM=dns\n  frontend:\n    image: gcr.io/google-samples/gb-frontend:v3\n    ports:\n      - "80:80"\n    environment:\n      - GET_HOSTS_FROM=dns\n')),(0,r.kt)("p",null,"As with Docker Compose, Kompose allows the Images to be deployed using a single command of ",(0,r.kt)("inlineCode",{parentName:"p"},"kompose up")),(0,r.kt)("p",null,"The details of what has been deployed can be discovered with the Kubernetes CLI ",(0,r.kt)("em",{parentName:"p"},"kubectl"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl get deployment,svc,pods,pvc\n")),(0,r.kt)("p",null,"Kompose also has the ability to take existing Compose files and generate the related Kubernetes Manifest files."),(0,r.kt)("p",null,"The command ",(0,r.kt)("inlineCode",{parentName:"p"},"kompose convert")," will generate the files, viewable via ",(0,r.kt)("inlineCode",{parentName:"p"},"ls"),"."),(0,r.kt)("p",null,"Use command ",(0,r.kt)("inlineCode",{parentName:"p"},"kompose convert -j")," will generate the json format files."),(0,r.kt)("p",null,"Use command ",(0,r.kt)("inlineCode",{parentName:"p"},"kompose --provider openshift convert ")," will generate the ",(0,r.kt)("inlineCode",{parentName:"p"},"OpenShift")," format files."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u8f6c\u8f7d\uff1aDeploy Docker Compose with Kompose -- Katacoda")),(0,r.kt)("h2",{id:"minikube-and-kompose"},"Minikube and Kompose"),(0,r.kt)("p",null,"In this guide, we\u2019ll deploy a sample ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file to a Kubernetes cluster."),(0,r.kt)("p",null,"Requirements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/minikube"},"minikube")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/kompose"},"kompose"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Start ",(0,r.kt)("inlineCode",{parentName:"strong"},"minikube"),":")),(0,r.kt)("p",null,"If you don\u2019t already have a Kubernetes cluster running, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/minikube"},"minikube")," is the best way to get started."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ minikube start\nStarting local Kubernetes v1.7.5 cluster...\nStarting VM...\nGetting VM IP address...\nMoving files into cluster...\nSetting up certs...\nConnecting to cluster...\nSetting up kubeconfig...\nStarting cluster components...\nKubectl is now configured to use the cluster\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Download an ",(0,r.kt)("a",{parentName:"strong",href:"https://raw.githubusercontent.com/kubernetes/kompose/master/examples/docker-compose.yaml"},"example Docker Compose file"),", or use your own:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"wget https://raw.githubusercontent.com/kubernetes/kompose/master/examples/docker-compose.yaml\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Convert your Docker Compose file to Kubernetes:")),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"kompose convert")," in the same directory as your ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ kompose convert                           \nINFO Kubernetes file "frontend-service.yaml" created         \nINFO Kubernetes file "redis-master-service.yaml" created     \nINFO Kubernetes file "redis-slave-service.yaml" created      \nINFO Kubernetes file "frontend-deployment.yaml" created      \nINFO Kubernetes file "redis-master-deployment.yaml" created  \nINFO Kubernetes file "redis-slave-deployment.yaml" created \n')),(0,r.kt)("p",null,"Alternatively, you can convert and deploy directly to Kubernetes with ",(0,r.kt)("inlineCode",{parentName:"p"},"kompose up"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ kompose up\nWe are going to create Kubernetes Deployments, Services and PersistentVolumeClaims for your Dockerized application. \nIf you need different kind of resources, use the 'kompose convert' and 'kubectl create -f' commands instead. \n\nINFO Successfully created Service: redis          \nINFO Successfully created Service: web            \nINFO Successfully created Deployment: redis       \nINFO Successfully created Deployment: web         \n\nYour application has been deployed to Kubernetes. You can run 'kubectl get deployment,svc,pods,pvc' for details.\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Access the newly deployed service:")),(0,r.kt)("p",null,"Now that your service has been deployed, let\u2019s access it."),(0,r.kt)("p",null,"If you\u2019re using ",(0,r.kt)("inlineCode",{parentName:"p"},"minikube")," you may access it via the ",(0,r.kt)("inlineCode",{parentName:"p"},"minikube service")," command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ minikube service frontend\n")),(0,r.kt)("p",null,"Otherwise, use ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl")," to see what IP the service is using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ kubectl describe svc frontend\nName:                   frontend\nNamespace:              default\nLabels:                 service=frontend\nSelector:               service=frontend\nType:                   LoadBalancer\nIP:                     10.0.0.183\nLoadBalancer Ingress:   123.45.67.89\nPort:                   80      80/TCP\nNodePort:               80      31144/TCP\nEndpoints:              172.17.0.4:80\nSession Affinity:       None\nNo events.\n")),(0,r.kt)("p",null,"Note: If you\u2019re using a cloud provider, your IP will be listed next to ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadBalancer Ingress"),"."),(0,r.kt)("p",null,"If you have yet to expose your service (for example, within GCE), use the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'kubectl expose deployment frontend --type="LoadBalancer" \n')),(0,r.kt)("p",null,"To check functionality, you may also ",(0,r.kt)("inlineCode",{parentName:"p"},"curl")," the URL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ curl http://123.45.67.89\n")),(0,r.kt)("h2",{id:"\u53c2\u8003\u94fe\u63a5"},"\u53c2\u8003\u94fe\u63a5"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"kompose user-guide: ",(0,r.kt)("a",{parentName:"li",href:"https://kompose.io/user-guide/"},"https://kompose.io/user-guide/"))))}u.isMDXComponent=!0}}]);