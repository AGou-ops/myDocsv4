"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[6601],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>g});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(t),g=r,d=u["".concat(i,".").concat(g)]||u[g]||m[g]||l;return t?a.createElement(d,o(o({ref:n},s),{},{components:t})):a.createElement(d,o({ref:n},s))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=u;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<l;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},20174:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const l={},o="\u5341\u4e00 \u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316",c={unversionedId:"CloudNative/k8s/Quicklystart/\u5341\u4e00 \u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316",id:"CloudNative/k8s/Quicklystart/\u5341\u4e00 \u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316",title:"\u5341\u4e00 \u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316",description:"k8s \u63d0\u4f9b\u4e86 configMap\u3001secret \u8fd9\u4e24\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u5b58\u50a8\u5377\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\u4e0d\u662f\u4e3a POD \u63d0\u4f9b\u5b58\u50a8\u7a7a\u95f4\uff0c\u800c\u662f\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4ece\u96c6\u7fa4\u5916\u90e8\u5230 POD \u5185\u90e8\u6ce8\u5165\u914d\u7f6e\u4fe1\u606f\u7684\u65b9\u5f0f\u3002",source:"@site/docs/CloudNative/k8s/Quicklystart/\u5341\u4e00 \u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316.md",sourceDirName:"CloudNative/k8s/Quicklystart",slug:"/CloudNative/k8s/Quicklystart/\u5341\u4e00 \u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316",permalink:"/docs/CloudNative/k8s/Quicklystart/\u5341\u4e00 \u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316",draft:!1,editUrl:"https://github.com/AGou-ops/myDocsv4/edit/main/docs/CloudNative/k8s/Quicklystart/\u5341\u4e00 \u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316.md",tags:[],version:"current",frontMatter:{},sidebar:"cloudNative",previous:{title:"\u5341 POD \u5b58\u50a8\u5377",permalink:"/docs/CloudNative/k8s/Quicklystart/\u5341 POD \u5b58\u50a8\u5377"},next:{title:"\u5341\u4e03 \u8c03\u5ea6\u7b56\u7565",permalink:"/docs/CloudNative/k8s/Quicklystart/\u5341\u4e03 \u8c03\u5ea6\u7b56\u7565"}},i={},p=[{value:"11.1 POD \u83b7\u53d6\u73af\u5883\u53d8\u91cf",id:"111-pod-\u83b7\u53d6\u73af\u5883\u53d8\u91cf",level:2},{value:"11.2 configMap",id:"112-configmap",level:2},{value:"11.2.1 \u6ce8\u5165 POD ENV",id:"1121-\u6ce8\u5165-pod-env",level:3},{value:"11.2.2 \u6302\u8f7d\u4e3a POD \u5377",id:"1122-\u6302\u8f7d\u4e3a-pod-\u5377",level:3},{value:"11.3 secret",id:"113-secret",level:2},{value:"11.3.1 \u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc11",id:"1131-\u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc11",level:3},{value:"11.3.2 \u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc12",id:"1132-\u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc12",level:3},{value:"11.3.3 \u521b\u5efa TLS \u8bc1\u4e66",id:"1133-\u521b\u5efa-tls-\u8bc1\u4e66",level:3}],s={toc:p};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u5341\u4e00-\u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316"},"\u5341\u4e00 \u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316"),(0,r.kt)("p",null,"k8s \u63d0\u4f9b\u4e86 configMap\u3001secret \u8fd9\u4e24\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u5b58\u50a8\u5377\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\u4e0d\u662f\u4e3a POD \u63d0\u4f9b\u5b58\u50a8\u7a7a\u95f4\uff0c\u800c\u662f\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4ece\u96c6\u7fa4\u5916\u90e8\u5230 POD \u5185\u90e8\u6ce8\u5165\u914d\u7f6e\u4fe1\u606f\u7684\u65b9\u5f0f\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u914d\u7f6e\u4fe1\u606f\u5bb9\u5668\u5316\u6709\u54ea\u4e9b\u65b9\u5f0f")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u81ea\u5b9a\u4e49\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u4f8b\u5982\uff1acommand\u3001args\uff0c\u6839\u636e args \u4f20\u9012\u4e0d\u540c\u7684\u53c2\u6570\u6765\u5c06\u5bb9\u5668\u8fd0\u884c\u4e3a\u4e0d\u540c\u7684\u7279\u6027"),(0,r.kt)("li",{parentName:"ol"},"\u76f4\u63a5\u628a\u914d\u7f6e\u4fe1\u606f\u5236\u4f5c\u4e3a image \u4e2d\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u975e\u5e38\u4e0d\u7075\u6d3b\uff0c\u8fd9\u4e2a\u955c\u50cf\u53ea\u80fd\u9002\u7528\u4e8e\u4e00\u79cd\u4f7f\u7528\u573a\u666f\uff0c\u8fc7\u5ea6\u8026\u5408"),(0,r.kt)("li",{parentName:"ol"},"\u73af\u5883\u53d8\u91cf\uff0cCloud Native \u652f\u6301\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6765\u52a0\u8f7d\u914d\u7f6e\uff0c\u6216\u8005\u4f7f\u7528 ENTRYPOINT \u811a\u672c\u6765\u9884\u5904\u7406\u73af\u5883\u53d8\u91cf\u4e3a\u914d\u7f6e\u4fe1\u606f"),(0,r.kt)("li",{parentName:"ol"},"\u5b58\u50a8\u5377\uff0c\u5728\u5bb9\u5668\u542f\u52a8\u65f6\u5019\u6302\u8f7d\u4e00\u4e2a\u5b58\u50a8\u5377\uff0c\u6216\u8005\u4e13\u7528\u7684\u914d\u7f6e\u5b58\u50a8\u5377\uff0c\u6302\u8f7d\u5230\u5e94\u7528\u7a0b\u5e8f\u7684\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Secret\u4e0eConfigMap\u5bf9\u6bd4")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u76f8\u540c\u70b9\uff1a\n-   key / value \u7684\u5f62\u5f0f \n-   \u5c5e\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7684 namespace \n-   \u53ef\u4ee5\u5bfc\u51fa\u5230\u73af\u5883\u53d8\u91cf \n-   \u53ef\u4ee5\u901a\u8fc7\u76ee\u5f55/\u6587\u4ef6\u5f62\u5f0f\u6302\u8f7d(\u652f\u6301\u6302\u8f7d\u6240\u6709key\u548c\u90e8\u5206key)\n\n\u4e0d\u540c\u70b9\uff1a\n-   Secret \u53ef\u4ee5\u88ab ServerAccount \u5173\u8054(\u4f7f\u7528) \n-   Secret \u53ef\u4ee5\u5b58\u50a8 register \u7684\u9274\u6743\u4fe1\u606f\uff0c\u7528\u5728 ImagePullSecret \u53c2\u6570\u4e2d\uff0c\u7528\u4e8e\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93\u7684\u955c\u50cf \n-   Secret \u652f\u6301 Base64 \u52a0\u5bc6 \n-   Secret \u5206\u4e3a kubernetes.io/Service Account\uff0ckubernetes.io/dockerconfigjson\uff0cOpaque\u4e09\u79cd\u7c7b\u578b, Configmap \u4e0d\u533a\u5206\u7c7b\u578b \n-   Secret \u6587\u4ef6\u5b58\u50a8\u5728tmpfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0cPod \u5220\u9664\u540e Secret\u6587\u4ef6\u4e5f\u4f1a\u5bf9\u5e94\u7684\u5220\u9664\u3002\n")),(0,r.kt)("h2",{id:"111-pod-\u83b7\u53d6\u73af\u5883\u53d8\u91cf"},"11.1 POD \u83b7\u53d6\u73af\u5883\u53d8\u91cf"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"env\uff0c\u8be6\u89c1\uff1akubectl explain pods.spec.containers.env")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"name              <string>  # \u53d8\u91cf\u540d\u79f0\nvalue             <string>  # \u53d8\u91cf\u7684\u503c\nvalueFrom         <Object>  # \u5f15\u7528\u503c\uff0c\u5982\uff1aconfigMap \u7684\u67d0\u4e2a\u952e\u3001POD \u5b9a\u4e49\u4e2d\u7684\u5b57\u6bb5\u540d\uff0c\u5982\uff1ametadata.labels\nresourceFieldRef  <Object>  # \u5f15\u7528\u8d44\u6e90\u9650\u5236\u4e2d\u7684\u503c\nsecretKeyRef      <Object>  # \u5f15\u7528 secretKey\n")),(0,r.kt)("h2",{id:"112-configmap"},"11.2 configMap"),(0,r.kt)("p",null,"\u5047\u5982\u6211\u4eec\u73b0\u5728\u8981\u542f\u52a8\u4e00\u4e2a POD \uff0c\u8fd9\u4e2a POD \u542f\u52a8\u65f6\u5019\uff0c\u9700\u8981\u8bfb\u53d6\u4e0d\u540c\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u53ef\u4ee5\u5c06 configMap \u8d44\u6e90\u5173\u8054\u5230\u5f53\u524d POD \u4e0a\uff0cPOD \u4ece configMap \u8bfb\u53d6\u4e00\u4e2a\u6570\u636e\uff0c\u4f20\u9012\u7ed9 POD \u5185\u90e8\u5bb9\u5668\u7684\u4e00\u4e2a\u53d8\u91cf\uff0c\u53d8\u91cf\u88ab\u6ce8\u5165\u540e\uff0c\u53ef\u4ee5\u91cd\u542f\u5bb9\u5668\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u53ef\u4ee5\u5c06 configMap \u8d44\u6e90\u6302\u8f7d\u5230\u5f53\u524d POD \u4e0a\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u8def\u5f84\uff0c\u8fd9\u4e2a\u76ee\u5f55\u6b63\u597d\u662f\u5e94\u7528\u7a0b\u5e8f\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u5bb9\u5668\u5c31\u53ef\u4ee5\u8bfb\u53d6\u5230\u914d\u7f6e\u4fe1\u606f\u4e86\uff0c\u5f53 configMap \u4fee\u6539\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u901a\u77e5 POD \uff0cPOD \u53ef\u4ee5\u8fdb\u884c\u91cd\u8f7d\u914d\u7f6e\u3002")),(0,r.kt)("p",null,"\u5728\u6bcf\u4e2a configMap \u4e2d\u6240\u6709\u7684\u914d\u7f6e\u4fe1\u606f\u90fd\u4fdd\u5b58\u4e3a\u952e\u503c\u7684\u914d\u7f6e\u5f62\u5f0f\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6e05\u5355\u683c\u5f0f\uff0c\u8be6\u89c1\uff1akubectl explain configMap")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"apiVersion  <string>              # \u7248\u672c\u53f7\nbinaryData  <map[string]string>   # \u4e8c\u8fdb\u5236\u7684\u6570\u636e\ndata        <map[string]string>   # \u952e\u503c\u5bf9\u7684\u6570\u636e\nkind        <string>              # \u5bf9\u8c61\u7c7b\u578b\nmetadata    <Object>              # \u5bf9\u8c61\u5143\u6570\u636e\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u547d\u4ee4\u884c\u65b9\u5f0f\u521b\u5efa")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# \u521b\u5efa\u540d\u4e3a my-config \u7684 configMap\uff0c\u5b83\u7684\u6570\u636e\u6765\u81ea\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff0c\u952e\u4e3a\u6587\u4ef6\u540d\uff0c\u503c\u4e3a\u6587\u4ef6\u5185\u5bb9\nkubectl create configmap my-config --from-file=path/to/dir\n\n# \u521b\u5efa\u540d\u4e3a my-config \u7684 configMap\uff0c\u5b83\u7684\u6570\u636e\u6765\u81ea\u6587\u4ef6\u4e2d\u7684\u952e\u503c\u5bf9\nkubectl create configmap my-config --from-file=path/to/file\n\n# \u521b\u5efa\u540d\u4e3a my-config \u7684 configMap\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u952e\u7684\u540d\u79f0\nkubectl create configmap my-config --from-file=key1=/path/to/bar/file1.txt --from-file=key2=/path/to/bar/file2.txt\n\n# \u4ece\u5b57\u9762\u91cf\u4e2d\u521b\u5efa\nkubectl create configmap my-config --from-literal=key1=config1 --from-literal=key2=config2\n\n# \u4eceenv\u6587\u4ef6\u4e2d\u547d\u540d my-config\nkubectl create configmap my-config --from-env-file=path/to/bar.env\n")),(0,r.kt)("h3",{id:"1121-\u6ce8\u5165-pod-env"},"11.2.1 \u6ce8\u5165 POD ENV"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa ConfigMap \u5e76\u5728 POD ENV \u4e2d\u4f7f\u7528")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: ConfigMap                                        # \u521b\u5efa ConfigMap \u5bf9\u8c61\nmetadata:\n  name: nginx-config\n  namespace: default\ndata:\n  server_name: myapp.kaliarch.com                       # \u952e\u503c\u5bf9\u6570\u636e\n  nginx_port: |                                        # \u952e\u503c\u5bf9\u6570\u636e\uff0c\u6b64\u5904\u4e3a nginx \u914d\u7f6e\u6587\u4ef6\uff0c\u9700\u8981\u6ce8\u610f\u6362\u884c\u7684\u5199\u6cd5\n    server {\n        server_name  myapp.kaliarch.com;\n        listen  80;\n        root  /data/web/html;\n    }\n\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-configmap-demo\n  namespace: default\n  labels:\n    app: myapp\n    tier: frontend\n  annotations:\n    kaliarch.com/created-by: "cluster amdin"\nspec:\n  containers:\n    - name: myapp\n      image: ikubernetes/myapp:v1\n      ports:\n        - name: http\n          containerPort: 80\n      env:\n        - name: NGINX_SERVER_PORT          # \u5b9a\u4e49\u5bb9\u5668\u5185\u53d8\u91cf\u7684\u540d\u5b57\uff0c\u5bb9\u5668\u9700\u8981\u5728\u542f\u52a8\u7684\u65f6\u5019\u4f7f\u7528 ENTRYPOINT \u811a\u672c\u5c06\u73af\u5883\u53d8\u91cf\u8f6c\u6362\u4e3a\u5e94\u7528\u7684\u914d\u7f6e\u6587\u4ef6\n          valueFrom:                       # \u503c\u6765\u81ea\u4e8e configMap \u5bf9\u8c61\u4e2d\n            configMapKeyRef:               # \u5f15\u7528 configMap \u5bf9\u8c61\n              name: nginx-config           # configMap \u5bf9\u8c61\u7684\u540d\u5b57\n              key: nginx_port              # \u5f15\u7528 configMap \u4e2d\u7684\u54ea\u4e2a key\n              optional: true               # \u76f8\u5bf9 POD \u542f\u52a8\u662f\u5426\u4e3a\u53ef\u9009\uff0c\u5982\u679c configMap \u4e2d\u4e0d\u5b58\u5728\u8fd9\u4e2a\u503c\uff0ctrue \u5219\u4e0d\u963b\u585e POD \u542f\u52a8\n        - name: NGINX_SERVER_NAME          # \u5b9a\u4e49\u5bb9\u5668\u5185\u53d8\u91cf\u7684\u540d\u5b57\uff0c\u4f7f\u7528 exec \u8fdb\u5165\u5bb9\u5668\u4f1a\u53d1\u73b0\u53d8\u91cf\u5df2\u7ecf\u5728\u542f\u52a8\u5bb9\u5668\u524d\u6ce8\u5165\u5bb9\u5668\u5185\u90e8\u4e86\u3002\n          valueFrom:\n            configMapKeyRef:\n              name: nginx-config\n              key: server_name\n')),(0,r.kt)("h3",{id:"1122-\u6302\u8f7d\u4e3a-pod-\u5377"},"11.2.2 \u6302\u8f7d\u4e3a POD \u5377"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"configMap \u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u5728\u5bb9\u5668\u5185\u6302\u8f7d\u4e3a\u6587\u4ef6\uff0c\u5e76\u4e14\u5f53 configMap \u4e2d\u7684\u6570\u636e\u53d1\u751f\u53d8\u52a8\u7684\u65f6\u5019\uff0c\u5bb9\u5668\u5185\u7684\u6587\u4ef6\u76f8\u5e94\u4e5f\u4f1a\u53d1\u751f\u53d8\u52a8\uff0c\u4f46\u4e0d\u4f1a\u91cd\u8f7d\u5bb9\u5668\u5185\u7684\u8fdb\u7a0b\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: ConfigMap                                     # \u521b\u5efa ConfigMap\nmetadata:\n  name: nginx-config-volumes\n  namespace: default\ndata:                                               # ConfigMap \u4e2d\u4fdd\u5b58\u4e86\u4e24\u4e2a\u6570\u636e\uff0c\n  index: |                                          # \u6570\u636e1\uff0c\u5b83\u53ef\u4ee5\u5728 container \u4e2d\u4f7f\u7528 ENV \u6ce8\u5165\u73af\u5883\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u5728 container \u4e2d\u4f7f\u7528 volumeMounts \u6302\u8f7d\u6210\u4e3a\u6587\u4ef6\n    <h1>this is a test page<h1>\n  vhost: |                                          # \u6570\u636e2\uff0c\u5b83\u53ef\u4ee5\u5728 container \u4e2d\u4f7f\u7528 ENV \u6ce8\u5165\u73af\u5883\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u5728 container \u4e2d\u4f7f\u7528 volumeMounts \u6302\u8f7d\u6210\u4e3a\u6587\u4ef6\n    server {                                                                                                                                  \n        listen       80;                                                                                                                      \n        server_name  localhost;                                                                                                               \n                                                                                                                                              \n        location / {                                                                                                                          \n            root   /usr/share/nginx/html;                                                                                                     \n            index  index.html index.htm;                                                                                                      \n        }                                                                                                                                     \n                                                                                                                                              \n        error_page   500 502 503 504  /50x.html;                                                                                              \n        location = /50x.html {                                                                                                                \n            root   /usr/share/nginx/html;                                                                                                     \n        }                                                                                                                                     \n                                                                                                                                              \n        location = /hostname.html {                                                                                                           \n            alias /etc/hostname;                                                                                                              \n        }                                                                                                                                     \n    } \n    server {\n        server_name  myapp.kaliarch.com;\n        listen  80;\n        root  /data/web/html;\n    }\n\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-configmap-volumes-demo\n  namespace: default\n  labels:\n    app: myapp\n    tier: frontend\n  annotations:\n    kaliarch.com/created-by: "cluster amdin"\nspec:\n  containers:\n    - name: myapp\n      image: ikubernetes/myapp:v1\n      ports:\n        - name: http\n          containerPort: 80\n      volumeMounts:\n        - name: nginx-conf\n          mountPath: /etc/nginx/conf.d\n          readOnly: true\n        - name: nginx-page\n          mountPath: /data/web/html/\n          readOnly: true\n  volumes:                                               # \u5b9a\u4e49\u5377\n    - name: nginx-conf                                   # \u5b9a\u4e49\u5377\u7684\u540d\u5b57\n      configMap:                                         # \u8be5\u5377\u7684\u7c7b\u578b\u4e3a configMap\n        name: nginx-config-volumes                       # \u4ece\u547d\u540d\u7a7a\u95f4\u4e2d\u8bfb\u53d6\u54ea\u4e2a\u540d\u5b57\u7684 configMap\n        items:                                           # \u5b9a\u4e49 configMap \u6570\u636e\u5230\u6587\u4ef6\u7684\u6620\u5c04\uff0c\u5982\u679c\u4e0d\u5b9a\u4e49\u5219\u4f7f\u7528 configMap \u4e2d\u7684\u952e\u4e3a\u6587\u4ef6\u540d\u79f0\uff0c\u503c\u4e3a\u6587\u4ef6\u5185\u5bb9\n          - key: vhost                                   # \u4f7f\u7528 configMap \u54ea\u4e2a\u952e\n            path: www.conf                               # \u5c06 configMap \u4e2d\u7684\u6570\u636e\uff0c\u6620\u5c04\u4e3a\u5bb9\u5668\u5185\u54ea\u4e2a\u6587\u4ef6\u540d\u79f0\n            mode: 644                                    # \u6307\u660e\u6587\u4ef6\u7684\u6743\u9650\n    - name: nginx-page\n      configMap:\n        name: nginx-config-volumes\n        items:\n          - key: index\n            path: index.html\n            mode: 644\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u542f\u52a8\u540e\u8fdb\u5165\u5bb9\u5668\u67e5\u770b\u6587\u4ef6\u662f\u5426\u6b63\u5e38\u6302\u8f7d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl exec -it pod-configmap-volumes-demo -c myapp -- /bin/sh\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528 curl \u547d\u4ee4\u9a8c\u8bc1\uff0c\u662f\u5426\u80fd\u591f\u6b63\u5e38\u4f7f\u7528")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ curl 10.244.2.104\nHello MyApp | Version: v1 | <a href="hostname.html">Pod Name</a>\n\n$ curl -H "Host:myapp.kaliarch.com" 10.244.2.104\n<h1>this is a test page<h1>\n')),(0,r.kt)("h2",{id:"113-secret"},"11.3 secret"),(0,r.kt)("p",null,"configMap \u662f\u660e\u6587\u5b58\u50a8\u6570\u636e\u7684\uff0c\u5982\u679c\u9700\u8981\u5b58\u50a8\u654f\u611f\u6570\u636e\uff0c\u5219\u9700\u8981\u4f7f\u7528 secret \uff0csecret \u4e0e configMap \u7684\u4f5c\u7528\u57fa\u672c\u4e00\u81f4\uff0c\u4e14 secret \u4e2d\u7684\u6570\u636e\u4e0d\u662f\u660e\u6587\u5b58\u653e\u7684\uff0c\u800c\u662f base64 \u7f16\u7801\u4fdd\u5b58\u7684\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"secret \u7c7b\u578b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-registry    # \u521b\u5efa\u4e00\u4e2a Docker registry \u4f7f\u7528\u7684 secret\ngeneric            # \u4ece\u672c\u5730\u6587\u4ef6\uff0c\u76ee\u5f55\u6216\u5b57\u9762\u503c\u521b\u5efa\u4e00\u4e2a secret\ntls                # \u521b\u5efa\u4e00\u4e2a TLS  secret\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6e05\u5355\u683c\u5f0f\uff0c\u8be6\u89c1\uff1akubectl explain secret")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"apiVersion  <string>               # API \u7248\u672c\ndata        <map[string]string>    # \u4ee5\u952e\u503c\u5bf9\u5217\u51fa\u6570\u636e\uff0c\u503c\u9700\u8981\u7ecf\u8fc7 base64 \u52a0\u5bc6\nkind        <string>               # \u5bf9\u8c61\u7c7b\u578b\nmetadata    <Object>               # \u5143\u6570\u636e\nstringData  <map[string]string>    # \u660e\u6587\u7684\u6570\u636e\ntype        <string>               # \u6570\u636e\u7c7b\u578b\n")),(0,r.kt)("h3",{id:"1131-\u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc11"},"11.3.1 \u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc11"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u9996\u5148\u901a\u8fc7\u547d\u4ee4\u884c\u521b\u5efa\u51fa\u6765 secret")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create secret docker-registry regsecret --docker-server=registry-vpc.cn-hangzhou.aliyuncs.com --docker-username=admin --docker-password=123456 --docker-email=420123641@qq.com\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u60f3\u4fdd\u5b58\u4e3a\u6587\u4ef6\u53ef\u4ee5")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get secret regsecret -o yaml\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"POD \u521b\u5efa\u65f6\u5019\uff0c\u4ece docker hub \u62c9\u53d6\u955c\u50cf\u4f7f\u7528\u7684\u7528\u6237\u540d\u5bc6\u7801\uff0ckubectl explain pods.spec \u7684 imagePullSecrets \u5b57\u6bb5")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: secret-file-pod\nspec:\n  containers:\n  - name: mypod\n    image: redis\n  imagePullSecrets:                         # \u83b7\u53d6\u955c\u50cf\u9700\u8981\u7684\u7528\u6237\u540d\u5bc6\u7801\n   - name: regsecret                        # secret \u5bf9\u8c61\n\n")),(0,r.kt)("h3",{id:"1132-\u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc12"},"11.3.2 \u79c1\u6709\u4ed3\u5e93\u8ba4\u8bc12"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u9996\u5148\u901a\u8fc7\u547d\u4ee4\u884c\u521b\u5efa\u51fa\u6765 secret")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create secret docker-registry regsecret --docker-server=registry-vpc.cn-hangzhou.aliyuncs.com --docker-username=admin --docker-password=123456 --docker-email=420123641@qq.com\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa\u81ea\u5b9a\u4e49\u7684 serviceaccount \u5bf9\u8c61\uff0c\u5728 serviceaccount \u5bf9\u8c61\u4e0a\u5b9a\u4e49 image pull secrets")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin\n  namespace: default\nimagePullSecrets:\n- name: regsecret                       # \u6307\u5b9a secret\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa POD \u4f7f\u7528\u6307\u5b9a\u7684 serviceaccount \u5bf9\u8c61")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-serviceaccount-demo\n  namespace: default\n  labels:\n    app: myapp\n    tier: frontend\nspec:\n  containers:\n    - name: nginx\n      image: ikubernetes/myapp:v1\n      ports:\n        - name: http\n          containerPort: 80\n  serviceAccountName: admin                          # \u4f7f\u7528 serviceaccount \u8fdb\u884c\u62c9\u53d6\u955c\u50cf\u7684\u8ba4\u8bc1\uff0c\u8fd9\u6837\u66f4\u52a0\u5b89\u5168\n\n")),(0,r.kt)("h3",{id:"1133-\u521b\u5efa-tls-\u8bc1\u4e66"},"11.3.3 \u521b\u5efa TLS \u8bc1\u4e66"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u9996\u5148\u901a\u8fc7\u547d\u4ee4\u884c\u521b\u5efa\u51fa\u6765")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create secret tls nginx-secret --cert=tls.crt --key=tls.key\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"secret \u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u5728\u5bb9\u5668\u5185\u6302\u8f7d\u4e3a\u6587\u4ef6\uff0c\u7136\u540e\u5728 nginx \u5bb9\u5668\u5185\u4f7f\u7528\u8bc1\u4e66\u6587\u4ef6")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-configmap-volumes-demo\n  namespace: default\n  labels:\n    app: myapp\n    tier: frontend\n  annotations:\n    kaliarch.com/created-by: "cluster amdin"\nspec:\n  containers:\n    - name: myapp\n      image: ikubernetes/myapp:v1\n      ports:\n        - name: http\n          containerPort: 80\n      volumeMounts:\n        - name: nginx-conf\n          mountPath: /etc/nginx/secret\n          readOnly: true\n  volumes:                                               # \u5b9a\u4e49\u5377\n    - name: nginx-conf                                   # \u5b9a\u4e49\u5377\u7684\u540d\u5b57\n      configMap:                                         # \u8be5\u5377\u7684\u7c7b\u578b\u4e3a secret\n        name: nginx-secret                               # \u4ece\u547d\u540d\u7a7a\u95f4\u4e2d\u8bfb\u53d6\u54ea\u4e2a\u540d\u5b57\u7684 secret\n        items:                                           # \u5b9a\u4e49 secret \u6570\u636e\u5230\u6587\u4ef6\u7684\u6620\u5c04\uff0c\u5982\u679c\u4e0d\u5b9a\u4e49\u5219\u4f7f\u7528 secret \u4e2d\u7684\u952e\u4e3a\u6587\u4ef6\u540d\u79f0\uff0c\u503c\u4e3a\u6587\u4ef6\u5185\u5bb9\n          - key: tls.key                                 # \u4f7f\u7528 secret \u54ea\u4e2a\u952e\n            path: www.conf                               # \u5c06 secret \u4e2d\u7684\u6570\u636e\uff0c\u6620\u5c04\u4e3a\u5bb9\u5668\u5185\u54ea\u4e2a\u6587\u4ef6\u540d\u79f0\n            mode: 644                                    # \u6307\u660e\u6587\u4ef6\u7684\u6743\u9650\n          - key: tls.crt\n            path: index.html\n            mode: 644\n\n')))}m.isMDXComponent=!0}}]);