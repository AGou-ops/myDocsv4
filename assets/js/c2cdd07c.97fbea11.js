"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[1229],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),i=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),k=i(n),f=a,m=k["".concat(o,".").concat(f)]||k[f]||p[f]||c;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=k;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var i=2;i<c;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},12635:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>i});var r=n(87462),a=(n(67294),n(3905));const c={},l=void 0,s={unversionedId:"CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/\u4f7f\u7528CSR API\u521b\u5efa\u7528\u6237",id:"CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/\u4f7f\u7528CSR API\u521b\u5efa\u7528\u6237",title:"\u4f7f\u7528CSR API\u521b\u5efa\u7528\u6237",description:"k8s \u652f\u6301 CSR API\uff0c\u901a\u8fc7\u521b\u5efa\xa0CertificateSigningRequest\xa0\u8d44\u6e90\u5c31\u53ef\u4ee5\u53d1\u8d77 CSR \u8bf7\u6c42\uff0c\u7ba1\u7406\u5458\u5ba1\u6279\u901a\u8fc7\u4e4b\u540e\xa0kube-controller-manager\xa0\u5c31\u4f1a\u4e3a\u6211\u4eec\u7b7e\u53d1\u8bc1\u4e66\uff0c\u786e\u4fdd\xa0kube-controller-manager\xa0\u914d\u4e86\u6839\u8bc1\u4e66\u5bc6\u94a5\u5bf9:",source:"@site/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/\u4f7f\u7528CSR API\u521b\u5efa\u7528\u6237.md",sourceDirName:"CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b",slug:"/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/\u4f7f\u7528CSR API\u521b\u5efa\u7528\u6237",permalink:"/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/\u4f7f\u7528CSR API\u521b\u5efa\u7528\u6237",draft:!1,editUrl:"https://github.com/AGou-ops/myDocsv4/edit/main/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/\u4f7f\u7528CSR API\u521b\u5efa\u7528\u6237.md",tags:[],version:"current",frontMatter:{},sidebar:"cloudNative",previous:{title:"k8s\u5b89\u88c5Apollo\u914d\u7f6e\u4e2d\u5fc3",permalink:"/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/k8s\u5b89\u88c5Apollo\u914d\u7f6e\u4e2d\u5fc3"},next:{title:"\u5176\u4ed6\u5b9e\u6218\u6848\u4f8b",permalink:"/docs/CloudNative/k8s/\u5b9e\u6218\u6848\u4f8b/\u5176\u4ed6\u5b9e\u6218\u6848\u4f8b"}},o={},i=[{value:"\u521b\u5efa\u6b65\u9aa4",id:"\u521b\u5efa\u6b65\u9aa4",level:2},{value:"\u914d\u7f6e kubeconfig",id:"\u914d\u7f6e-kubeconfig",level:2}],u={toc:i};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"k8s \u652f\u6301 CSR API\uff0c\u901a\u8fc7\u521b\u5efa\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"CertificateSigningRequest"),"\xa0\u8d44\u6e90\u5c31\u53ef\u4ee5\u53d1\u8d77 CSR \u8bf7\u6c42\uff0c\u7ba1\u7406\u5458\u5ba1\u6279\u901a\u8fc7\u4e4b\u540e\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"kube-controller-manager"),"\xa0\u5c31\u4f1a\u4e3a\u6211\u4eec\u7b7e\u53d1\u8bc1\u4e66\uff0c\u786e\u4fdd\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"kube-controller-manager"),"\xa0\u914d\u4e86\u6839\u8bc1\u4e66\u5bc6\u94a5\u5bf9:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"--cluster-signing-cert-file=/var/lib/kubernetes/ca.pem\n--cluster-signing-key-file=/var/lib/kubernetes/ca-key.pem\n")),(0,a.kt)("h2",{id:"\u521b\u5efa\u6b65\u9aa4"},"\u521b\u5efa\u6b65\u9aa4"),(0,a.kt)("p",null,"\u6211\u4eec\u7528 cfssl \u6765\u521b\u5efa key \u548c csr \u6587\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u5148\u5b89\u88c5 cfssl:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 -o cfssl\ncurl -L https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -o cfssljson\ncurl -L https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -o cfssl-certinfo\n\nchmod +x cfssl cfssljson cfssl-certinfo\nsudo mv cfssl cfssljson cfssl-certinfo /usr/local/bin/\n")),(0,a.kt)("p",null,"\u6307\u5b9a\u8981\u521b\u5efa\u7684\u7528\u6237\u540d:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'USERNAME="roc"\n')),(0,a.kt)("p",null,"\u518d\u521b\u5efa key \u548c csr \u6587\u4ef6:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'cat <<EOF | cfssl genkey - | cfssljson -bare ${USERNAME}\n{\n  "CN": "${USERNAME}",\n  "key": {\n    "algo": "rsa",\n    "size": 2048\n  }\n}\nEOF\n')),(0,a.kt)("p",null,"\u751f\u6210\u4ee5\u4e0b\u6587\u4ef6:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"roc.csr\nroc-key.pem\n")),(0,a.kt)("p",null,"\u521b\u5efa\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"CertificateSigningRequest"),"(\u53d1\u8d77 CSR \u8bf7\u6c42):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOF | kubectl apply -f -\napiVersion: certificates.k8s.io/v1beta1\nkind: CertificateSigningRequest\nmetadata:\n  name: ${USERNAME}\nspec:\n  request: $(cat ${USERNAME}.csr | base64 | tr -d '\\n')\n  usages:\n  - digital signature\n  - key encipherment\n  - client auth\nEOF\n")),(0,a.kt)("p",null,"\u7ba1\u7406\u5458\u5ba1\u6279 CSR \u8bf7\u6c42:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# \u67e5\u770b csr\n# kubectl get csr\n\n# \u5ba1\u6279 csr\nkubectl certificate approve ${USERNAME}\n")),(0,a.kt)("p",null,"\u83b7\u53d6\u8bc1\u4e66:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get csr ${USERNAME} -o jsonpath={.status.certificate} | base64 --decode > ${USERNAME}.pem\n")),(0,a.kt)("p",null,"\u5f97\u5230\u8bc1\u4e66\u6587\u4ef6:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"roc.pem\n")),(0,a.kt)("p",null,"\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u597d\u4e86\u7528\u6237\uff0c\u7528\u6237\u7684\u8bc1\u4e66\u5bc6\u94a5\u5bf9\u6587\u4ef6:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"roc.pem\nroc-key.pem\n")),(0,a.kt)("h2",{id:"\u914d\u7f6e-kubeconfig"},"\u914d\u7f6e kubeconfig"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# \u589e\u52a0 user\nkubectl config set-credentials ${USERNAME} --embed-certs=true --client-certificate=${USERNAME}.pem --client-key=${USERNAME}-key.pem\n\n# \u5982\u679c\u8fd8\u6ca1\u914d cluster\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u547d\u4ee4\u914d\u4e00\u4e0b\nkubectl config set-cluster <cluster> --server=<apiserver-url> --certificate-authority=<ca-cert-file>\n\n# \u589e\u52a0 context\uff0c\u7ed1\u5b9a cluster \u548c user\nkubectl config set-context <context> --cluster=<cluster> --user=${USERNAME}\n\n# \u4f7f\u7528\u521a\u589e\u52a0\u7684 context\nkubectl config use-context <context>\n")))}p.isMDXComponent=!0}}]);