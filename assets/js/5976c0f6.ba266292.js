"use strict";(self.webpackChunkmy_docsv_4=self.webpackChunkmy_docsv_4||[]).push([[8909],{3905:(e,n,t)=>{t.d(n,{Zo:()=>o,kt:()=>g});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},o=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),m=c(t),g=r,k=m["".concat(p,".").concat(g)]||m[g]||u[g]||s;return t?a.createElement(k,l(l({ref:n},o),{},{components:t})):a.createElement(k,l({ref:n},o))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,l=new Array(s);l[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<s;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},90672:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const s={},l="\u4e5d ingress \u63a7\u5236\u5668",i={unversionedId:"CloudNative/k8s/Quicklystart/\u4e5d ingress \u63a7\u5236\u5668",id:"CloudNative/k8s/Quicklystart/\u4e5d ingress \u63a7\u5236\u5668",title:"\u4e5d ingress \u63a7\u5236\u5668",description:"\u5982\u679c k8s \u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u7f51\u7ad9\uff0c\u5e76\u4e14\u8fd9\u4e2a\u7ad9\u70b9\u9700\u8981\u4ee5 https \u8bbf\u95ee\uff0c\u800c iptables/ipvs \u5de5\u4f5c\u5728 4 \u5c42\uff0c\u5ba2\u6237\u53d1\u51fa\u7684 ssl \u8bf7\u6c42\u6839\u672c\u4e0d\u88ab\u89e3\u6790\u5c31\u88ab\u8c03\u5ea6\u5230\u540e\u7aef POD\u4e86\u3002\u89e3\u51b3\u65b9\u6cd5\u6709\u4e24\u4e2a\uff1a",source:"@site/docs/CloudNative/k8s/Quicklystart/\u4e5d ingress \u63a7\u5236\u5668.md",sourceDirName:"CloudNative/k8s/Quicklystart",slug:"/CloudNative/k8s/Quicklystart/\u4e5d ingress \u63a7\u5236\u5668",permalink:"/docs/CloudNative/k8s/Quicklystart/\u4e5d ingress \u63a7\u5236\u5668",draft:!1,editUrl:"https://github.com/AGou-ops/myDocsv4/edit/main/docs/CloudNative/k8s/Quicklystart/\u4e5d ingress \u63a7\u5236\u5668.md",tags:[],version:"current",frontMatter:{},sidebar:"cloudNative",previous:{title:"\u4e09 \u96c6\u7fa4\u90e8\u7f72",permalink:"/docs/CloudNative/k8s/Quicklystart/\u4e09 \u96c6\u7fa4\u90e8\u7f72"},next:{title:"\u4e8c \u6838\u5fc3\u7ec4\u4ef6/\u9644\u4ef6",permalink:"/docs/CloudNative/k8s/Quicklystart/\u4e8c \u6838\u5fc3\u7ec4\u4ef6\u53ca\u9644\u4ef6"}},p={},c=[{value:"9.1 ingress.spec \u89c4\u8303",id:"91-ingressspec-\u89c4\u8303",level:2},{value:"9.2 ingress-nginx \u4ee3\u7406",id:"92-ingress-nginx-\u4ee3\u7406",level:2},{value:"9.3 ingress-tomcat \u4ee3\u7406",id:"93-ingress-tomcat-\u4ee3\u7406",level:2}],o={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u4e5d-ingress-\u63a7\u5236\u5668"},"\u4e5d ingress \u63a7\u5236\u5668"),(0,r.kt)("p",null,"\u5982\u679c k8s \u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u7f51\u7ad9\uff0c\u5e76\u4e14\u8fd9\u4e2a\u7ad9\u70b9\u9700\u8981\u4ee5 https \u8bbf\u95ee\uff0c\u800c iptables/ipvs \u5de5\u4f5c\u5728 4 \u5c42\uff0c\u5ba2\u6237\u53d1\u51fa\u7684 ssl \u8bf7\u6c42\u6839\u672c\u4e0d\u88ab\u89e3\u6790\u5c31\u88ab\u8c03\u5ea6\u5230\u540e\u7aef POD\u4e86\u3002\u89e3\u51b3\u65b9\u6cd5\u6709\u4e24\u4e2a\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u53ef\u4ee5\u5728\u516c\u6709\u4e91\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u4e0a\u914d\u7f6e\u4e0a ssl \u8bc1\u4e66\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u65b0\u5efa\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u7684 POD \uff0c\u4f8b\u5982 nignx \uff0c\u8fd9\u4e2a POD \u5171\u4eab\u4e3b\u673a\u7684\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 nodeip \u8bbf\u95ee\u5230\u8d1f\u8f7d\u5747\u8861\u5668\uff0cssl \u8bc1\u4e66\u914d\u7f6e\u5728\u8fd9\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u4e0a\uff0c\u5bf9\u5916\u8fde\u63a5\u4e3a https \u800c\u5bf9\u5185\u7684\u4ee3\u7406\u4e3a http \u534f\u8bae\u5230 POD \u7f51\u7edc\u7684 POD \u4e0a\u3002"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5b58\u5728\u7684\u95ee\u9898")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"- \u8d1f\u8f7d\u5747\u8861\u5668 POD \u4f7f\u7528\u8282\u70b9\u7684\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4, \u90a3\u4e48\u5b83\u53ea   \u80fd\u5728\u8fd9\u4e2a node \u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a\u4e86,\u5426\u5219\u5c31\u51fa\u73b0\u7aef\u53e3\u51b2\u7a81\n- \u8d1f\u8f7d\u5747\u8861\u5668\u662f\u4ee3\u7406 POD \u5378\u8f7d ssl \u8bc1\u4e66\u7684\u5173\u952e\u8282\u70b9, \u5b83\u4e0d\u80fd\u53ea\u8fd0\u884c\u4e00\u4e2a, \u5b83\u9700\u8981\u5728\u6240\u6709\u8282\u70b9\u8fd0\u884c\u4e00\u4e2a\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u89e3\u51b3\u65b9\u6cd5")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'- \u8d1f\u8f7d\u5747\u8861\u5668\u4f7f\u7528 DaemonSet \u5728\u6bcf\u4e2a node \u8282\u70b9\u8fd0\u884c\u4e00\u4e2a,\u4ee3\u7406\u8bf7\u6c42\u81f3 POD \u7f51\u7edc\u7684\u4e2d\u7684 POD \u4e0a\n- \u5982\u679c\u96c6\u7fa4\u8282\u70b9\u975e\u5e38\u7684\u591a,\u5176\u5b9e\u4e0d\u5fc5\u5728\u6bcf\u4e2a node \u8282\u70b9\u90fd\u5fc5\u987b\u8fd0\u884c\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668 POD\n- \u63a7\u5236\u8d1f\u8f7d\u5747\u8861\u5668 POD \u8fd0\u884c\u7684\u6570\u91cf\u53ef\u4ee5\u901a\u8fc7 lables \u6307\u5b9a\u8fd0\u884c\u90a3\u51e0\u4e2a node \u8282\u70b9\u4e0a\n- \u7136\u540e\u53ef\u4ee5\u5728\u8d1f\u8f7d\u5747\u8861\u5668 POD \u6240\u5728\u7684 node \u8282\u70b9\u4e0a\u6253\u4e0a "\u6c61\u70b9" \u4f7f\u5176\u4ed6\u7684 POD \u4e0d\u4f1a\u518d\u88ab\u8c03\u5ea6\u4e0a\u6765, \u800c\u53ea\u6709\u8d1f\u8f7d\u5747\u8861\u5668 POD \u53ef\u4ee5\u5bb9\u5fcd\u8fd9\u4e9b "\u6c61\u70b9"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8d1f\u8f7d\u5747\u8861\u5668\u53ef\u9009\uff0c\u6309\u7167\u4f18\u5148\u7ea7\u5148\u540e\u6392\u5e8f")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Envoy            # \u4e91\u539f\u751f\u9ad8\u6027\u80fd\u670d\u52a1\u4ee3\u7406,\u5df2\u4ececncf\u6bd5\u4e1a\nTraefik          # \u4e3a\u5fae\u670d\u52a1\u800c\u751f\u7684\u53cd\u5411\u4ee3\u7406\nNginx            # \u6539\u9020\u540e\u53ef\u4ee5\u9002\u7528\u4e8e\u5fae\u670d\u52a1\u73af\u5883\nHAproxy          # \u4e0d\u63a8\u8350\u4f7f\u7528\n")),(0,r.kt)("p",null,"\u65b0\u5efa\u4e00\u4e2a service \u5c06\u9700\u8981\u4ee3\u7406\u7684\u4e0d\u540c\u670d\u52a1\u7684 pod \u5206\u7c7b"),(0,r.kt)("p",null,"\u65b0\u5efa\u4e00\u4e2a ingress \u8d44\u6e90\uff0c\u4ece service \u4e2d\u53d6\u5f97\u5206\u7c7b\u7ed3\u679c\uff0c\u6620\u5c04\u8fdb Envoy \u4e2d\uff0c\u91cd\u8f7d Envoy \u8f6f\u4ef6\u3002"),(0,r.kt)("h2",{id:"91-ingressspec-\u89c4\u8303"},"9.1 ingress.spec \u89c4\u8303"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"API \u548c kind")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"apiVersion: extensions\n\nkind: ingress\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ingress.spec")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"backend         # \u540e\u7aef\u6709\u54ea\u4e9b POD\nrules           # \u8c03\u5ea6\u89c4\u5219\n    host        # \u865a\u62df\u4e3b\u673a\n    http        # http \u8def\u5f84\n")),(0,r.kt)("h2",{id:"92-ingress-nginx-\u4ee3\u7406"},"9.2 ingress-nginx \u4ee3\u7406"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u540e\u7aef service \u548c pods")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Service\nmetadata:\n  name: service-ingress-myapp\n  namespace: default\nspec:\n  selector:\n    app: myapp\n    release: canary\n  ports:\n    - name: http\n      port: 80\n      targetPort: 80\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp\n  namespace: default\nspec:\n  replicas: 4\n  selector:\n    matchLabels:\n      app: myapp\n      release: canary\n  template:\n    metadata:\n      labels:\n        app: myapp\n        release: canary\n    spec:\n      containers:\n        - name: myapp\n          image: ikubernetes/myapp:v2\n          ports:\n            - name: http\n              containerPort: 80\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa ingress-nginx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.21.0/deploy/mandatory.yaml\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8ba9 ingress-nginx \u5728\u96c6\u7fa4\u5916\u90e8\u8bbf\u95ee")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.21.0/deploy/provider/baremetal/service-nodeport.yaml\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa ingress \u5bf9\u8c61\uff0c\u5b83\u80fd\u5c06 ingress-nginx \u4e0e service \u5173\u8054\uff0c\u4ece\u800c\u5728 service \u540e\u4e3b\u673a\u53d1\u751f\u53d8\u52a8\u7684\u65f6\u5019\uff0c\u53cd\u5e94\u5728 ingress-nginx \u8fd9\u4e2a\u5bb9\u5668\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: ingress-deploy-myapp\n  namespace: default\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n    - host: myapp.kaliarch.com                       # \u57fa\u4e8e\u4e3b\u673a\u540d\u7684\u8bbf\u95ee\n      http:\n        paths:\n          - path:                                   # \u7a7a\u7684\u65f6\u5019\u4ee3\u8868\u6839\uff0c\u8bbf\u95ee\u6839\u7684\u65f6\u5019\u6620\u5c04\u5230 backend\n            backend:                                # \u540e\u7aef\u7684 service \u7684\u914d\u7f6e\n              serviceName: service-ingress-myapp    # \u5173\u8054 service \u4ece\u800c\u83b7\u53d6\u5230\u540e\u7aef\u4e3b\u673a\u7684\u53d8\u52a8\n              servicePort: 80                       # \u5173\u8054 service \u7684\u5730\u5740\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u67e5\u770b ingress-nginx \u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3\uff0c\u8fd9\u91cc\u4e3a30080\uff0c\u548c 30443 \u4e24\u4e2a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get service -n ingress-nginx\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528 nodeip + ingress-nginx \u66b4\u9732\u7aef\u53e3\u8bbf\u95ee\uff0c\u7531\u4e8e\u4e0a\u9762\u521b\u5efa\u7684 ingress \u4e3a\u57fa\u4e8e\u4e3b\u673a\u540d\u79f0\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8bbf\u95ee\u65f6\u5728 /etc/hosts \u505a\u597d\u6620\u5c04\u5230 node\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"http://myapp.kaliarch.com:30080/index.html  \n")),(0,r.kt)("h2",{id:"93-ingress-tomcat-\u4ee3\u7406"},"9.3 ingress-tomcat \u4ee3\u7406"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u540e\u7aef service \u548c pods")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Service\nmetadata:\n  name: service-ingress-tomcat\n  namespace: default\nspec:\n  selector:\n    app: tomcat\n    release: canary\n  ports:\n    - name: http\n      port: 8080\n      targetPort: http\n    - name: ajp\n      port: 8009\n      targetPort: ajp\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: deploy-tomcat\n  namespace: default\nspec:\n  replicas: 4\n  selector:\n    matchLabels:\n      app: tomcat\n      release: canary\n  template:\n    metadata:\n      labels:\n        app: tomcat\n        release: canary\n    spec:\n      containers:\n        - name: tomcat\n          image: tomcat:8.5.32-jre8-alpine\n          ports:\n            - name: http\n              containerPort: 8080\n            - name: ajp\n              containerPort: 8009\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5236\u4f5c\u81ea\u7b7e\u540d\u8bc1\u4e66\uff0c\u8ba9 ingress-nginx \u5e26\u6709\u8bc1\u4e66\u6765\u8bbf\u95ee")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# \u751f\u6210 key\nopenssl genrsa -out tls.key 2048\n\n# \u751f\u6210\u81ea\u7b7e\u8bc1\u4e66\uff0cCN=\u57df\u540d\u5fc5\u987b\u8981\u4e0e\u81ea\u5df1\u7684\u57df\u540d\u5b8c\u5168\u4e00\u81f4\nopenssl req -new -x509 -key tls.key -out tls.crt -subj /C=CN/ST=Beijing/L=Beijing/O=DevOps/CN=tomcat.kaliarch.com\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa secret \u8bc1\u4e66\u5bf9\u8c61\uff0c\u5b83\u662f\u6807\u51c6\u7684 k8s \u5bf9\u8c61")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create secret tls tomcat-ingress-secret --cert=tls.crt --key=tls.key\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa\u5e26\u8bc1\u4e66\u7684 ingress \u5bf9\u8c61\uff0c\u5b83\u80fd\u5c06 ingress-tomcat \u4e0e service \u5173\u8054\uff0c\u4ece\u800c\u5728 service \u540e\u4e3b\u673a\u53d1\u751f\u53d8\u52a8\u7684\u65f6\u5019\uff0c\u53cd\u5e94\u5728 ingress-tomcat \u8fd9\u4e2a\u5bb9\u5668\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: ingress-deploy-tomcat-tls\n  namespace: default\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  tls:\n    - hosts:\n      - tomcat.kaliarch.com\n      secretName: tomcat-ingress-secret\n  rules:\n    - host: tomcat.kaliarch.com\n      http:\n        paths:\n          - path:\n            backend:\n              serviceName: service-ingress-tomcat\n              servicePort: 8080\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u67e5\u770b ingress-nginx \u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3\uff0c\u8fd9\u91cc\u4e3a30080\uff0c\u548c 30443 \u4e24\u4e2a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get service -n ingress-nginx\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528 nodeip + ingress-nginx \u66b4\u9732\u7aef\u53e3\u8bbf\u95ee\uff0c\u7531\u4e8e\u4e0a\u9762\u521b\u5efa\u7684 ingress \u4e3a\u57fa\u4e8e\u4e3b\u673a\u540d\u79f0\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8bbf\u95ee\u65f6\u5728 /etc/hosts \u505a\u597d\u6620\u5c04\u5230 node\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"https://tomcat.kaliarch.com:30443\n")))}u.isMDXComponent=!0}}]);